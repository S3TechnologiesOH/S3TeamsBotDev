"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientsAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Automate_1 = __importDefault(require("../Automate"));
/**
 * @module ClientsAPI
 */
/**
 * Clients module
 * @public
 */
class ClientsAPI extends Automate_1.default {
    constructor(props) {
        super(props);
    }
    getClientList(params = {}) {
        return this.request({
            path: `/api/v1/Clients`,
            method: 'get',
            params,
        });
    }
    postClient(Client) {
        return this.request({
            path: `/api/v1/Clients`,
            method: 'post',
            data: Client,
        });
    }
    getAllDocuments(clientId, params = {}) {
        return this.request({
            path: `/api/v1/clients/${clientId}/documents`,
            method: 'get',
            params,
        });
    }
    postDocument(clientId, Document) {
        return this.request({
            path: `/api/v1/clients/${clientId}/documents`,
            method: 'post',
            data: Document,
        });
    }
    getManagedLicenses(clientId, params = {}) {
        return this.request({
            path: `/api/v1/clients/${clientId}/licenses`,
            method: 'get',
            params,
        });
    }
    postManagedLicense(clientId, ManagedLicense) {
        return this.request({
            path: `/api/v1/clients/${clientId}/licenses`,
            method: 'post',
            data: ManagedLicense,
        });
    }
    getUserClassPermissions(clientId, userClassId, params = {}) {
        return this.request({
            path: `/api/v1/clients/${clientId}/permissions/${userClassId}`,
            method: 'get',
            params,
        });
    }
    putUserClassPermissions(clientId, userClassId, PutUserClassPermissionsPermissions) {
        return this.request({
            path: `/api/v1/clients/${clientId}/permissions/${userClassId}`,
            method: 'put',
            data: PutUserClassPermissionsPermissions,
        });
    }
    postUserClassPermissions(clientId, userClassId, PutUserClassPermissionsPermissions) {
        return this.request({
            path: `/api/v1/clients/${clientId}/permissions/${userClassId}`,
            method: 'post',
            data: PutUserClassPermissionsPermissions,
        });
    }
    deleteUserClassPermissions(clientId, userClassId) {
        return this.request({
            path: `/api/v1/clients/${clientId}/permissions/${userClassId}`,
            method: 'delete',
        });
    }
    getProductKeys(clientId, params = {}) {
        return this.request({
            path: `/api/v1/clients/${clientId}/productkeys`,
            method: 'get',
            params,
        });
    }
    postProductKey(clientId, ProductKey) {
        return this.request({
            path: `/api/v1/clients/${clientId}/productkeys`,
            method: 'post',
            data: ProductKey,
        });
    }
    getLocationList(params = {}) {
        return this.request({
            path: `/api/v1/Locations`,
            method: 'get',
            params,
        });
    }
    postLocation(Location) {
        return this.request({
            path: `/api/v1/Locations`,
            method: 'post',
            data: Location,
        });
    }
}
exports.ClientsAPI = ClientsAPI;
//# sourceMappingURL=ClientsAPI.js.map