import Automate from '../Automate';
import { components } from '../AutomateTypes';
import { CommonParameters, CWAOptions } from '../AutomateAPI';
import { NoContentResponse } from '../types';
declare type schemas = components['schemas'];
/** {@link AutomateApiDomainContractsPatchingComputerPatchingStats} */
export declare type AutomateApiDomainContractsPatchingComputerPatchingStats = schemas['Automate.Api.Domain.Contracts.Patching.ComputerPatchingStats'];
/** {@link LabTechModelsCommandExecute} */
export declare type LabTechModelsCommandExecute = schemas['LabTech.Models.CommandExecute'];
/** {@link LabTechModelsCommandHistory} */
export declare type LabTechModelsCommandHistory = schemas['LabTech.Models.CommandHistory'];
/** {@link LabTechModelsComputer} */
export declare type LabTechModelsComputer = schemas['LabTech.Models.Computer'];
/** {@link LabTechModelsComputerBios} */
export declare type LabTechModelsComputerBios = schemas['LabTech.Models.ComputerBios'];
/** {@link LabTechModelsComputerChassis} */
export declare type LabTechModelsComputerChassis = schemas['LabTech.Models.ComputerChassis'];
/** {@link LabTechModelsComputerDevice} */
export declare type LabTechModelsComputerDevice = schemas['LabTech.Models.ComputerDevice'];
/** {@link LabTechModelsComputerDrive} */
export declare type LabTechModelsComputerDrive = schemas['LabTech.Models.ComputerDrive'];
/** {@link LabTechModelsComputerEffectivePatchingPolicy} */
export declare type LabTechModelsComputerEffectivePatchingPolicy = schemas['LabTech.Models.ComputerEffectivePatchingPolicy'];
/** {@link LabTechModelsComputerMemorySlot} */
export declare type LabTechModelsComputerMemorySlot = schemas['LabTech.Models.ComputerMemorySlot'];
/** {@link LabTechModelsComputerMenu} */
export declare type LabTechModelsComputerMenu = schemas['LabTech.Models.ComputerMenu'];
/** {@link LabTechModelsComputerOperatingSystem} */
export declare type LabTechModelsComputerOperatingSystem = schemas['LabTech.Models.ComputerOperatingSystem'];
/** {@link LabTechModelsComputerPatchingPolicy} */
export declare type LabTechModelsComputerPatchingPolicy = schemas['LabTech.Models.ComputerPatchingPolicy'];
/** {@link LabTechModelsComputerPrinter} */
export declare type LabTechModelsComputerPrinter = schemas['LabTech.Models.ComputerPrinter'];
/** {@link LabTechModelsComputerProcessor} */
export declare type LabTechModelsComputerProcessor = schemas['LabTech.Models.ComputerProcessor'];
/** {@link LabTechModelsComputerRunningScript} */
export declare type LabTechModelsComputerRunningScript = schemas['LabTech.Models.ComputerRunningScript'];
/** {@link LabTechModelsComputerScheduledTask} */
export declare type LabTechModelsComputerScheduledTask = schemas['LabTech.Models.ComputerScheduledTask'];
/** {@link LabTechModelsComputerScriptHistory} */
export declare type LabTechModelsComputerScriptHistory = schemas['LabTech.Models.ComputerScriptHistory'];
/** {@link LabTechModelsComputerSensor} */
export declare type LabTechModelsComputerSensor = schemas['LabTech.Models.ComputerSensor'];
/** {@link LabTechModelsComputerService} */
export declare type LabTechModelsComputerService = schemas['LabTech.Models.ComputerService'];
/** {@link LabTechModelsComputerSoftware} */
export declare type LabTechModelsComputerSoftware = schemas['LabTech.Models.ComputerSoftware'];
/** {@link LabTechModelsComputerSystemSlot} */
export declare type LabTechModelsComputerSystemSlot = schemas['LabTech.Models.ComputerSystemSlot'];
/** {@link LabTechModelsComputerUps} */
export declare type LabTechModelsComputerUps = schemas['LabTech.Models.ComputerUps'];
/** {@link LabTechModelsComputerVideoCard} */
export declare type LabTechModelsComputerVideoCard = schemas['LabTech.Models.ComputerVideoCard'];
/** {@link LabTechModelsMaintenanceMode} */
export declare type LabTechModelsMaintenanceMode = schemas['LabTech.Models.MaintenanceMode'];
/** {@link LabTechModelsRetiredAsset} */
export declare type LabTechModelsRetiredAsset = schemas['LabTech.Models.RetiredAsset'];
/** {@link LabTechModelsScheduledScript} */
export declare type LabTechModelsScheduledScript = schemas['LabTech.Models.ScheduledScript'];
/** {@link LabTechModelsServiceClassification} */
export declare type LabTechModelsServiceClassification = schemas['LabTech.Models.ServiceClassification'];
/** {@link LabTechModelsSmartData} */
export declare type LabTechModelsSmartData = schemas['LabTech.Models.SmartData'];
/** {@link LabTechModelsVirusScannerDef} */
export declare type LabTechModelsVirusScannerDef = schemas['LabTech.Models.VirusScannerDef'];
/** {@link LabTechRESTApiRpcContractsSoftwareUninstallInfo} */
export declare type LabTechRESTApiRpcContractsSoftwareUninstallInfo = schemas['LabTech.RESTApi.RpcContracts.SoftwareUninstallInfo'];
/** {@link LabTechRepositoriesMySQLDomainModelsAlertingMonitorAlertSuspension} */
export declare type LabTechRepositoriesMySQLDomainModelsAlertingMonitorAlertSuspension = schemas['LabTech.Repositories.MySQL.Domain.Models.Alerting.MonitorAlertSuspension'];
/** {@link LabTechRepositoriesMySQLDomainModelsComputerDriver} */
export declare type LabTechRepositoriesMySQLDomainModelsComputerDriver = schemas['LabTech.Repositories.MySQL.Domain.Models.ComputerDriver'];
/**
 * @module ComputersAPI
 */
/**
 * Computers module
 * @public
 */
export declare class ComputersAPI extends Automate {
    constructor(props: CWAOptions);
    getComputerMenuList(params?: CommonParameters): Promise<Array<LabTechModelsComputerMenu>>;
    postComputerMenu(ComputerMenu: LabTechModelsComputerMenu): Promise<LabTechModelsComputerMenu>;
    getComputerList(params?: CommonParameters): Promise<Array<LabTechModelsComputer>>;
    getComputerAlerts(computerId: number, params?: CommonParameters): Promise<object>;
    getMaintenanceAlertSuspensionList(computerId: number, params?: CommonParameters): Promise<object>;
    getTemplateAlertSuspensionList(computerId: number, params?: CommonParameters): Promise<object>;
    getComputerBios(computerId: number, params?: CommonParameters): Promise<LabTechModelsComputerBios>;
    getCommandExecuteList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsCommandExecute>>;
    postCommandExecute(computerId: number, CommandExecute: LabTechModelsCommandExecute): Promise<LabTechModelsCommandExecute>;
    getCommandHistoryList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsCommandHistory>>;
    getComputerPatchingPolicyListAsync(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerPatchingPolicy>>;
    getComputerDeviceList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerDevice>>;
    getComputerDrivers(computerId: number, params?: CommonParameters): Promise<Array<LabTechRepositoriesMySQLDomainModelsComputerDriver>>;
    getComputerDriveSmartDataList(computerId: number, driveId: number, params?: CommonParameters): Promise<Array<LabTechModelsSmartData>>;
    getComputerEffectivePatchingPolicy(computerId: number, params?: CommonParameters): Promise<LabTechModelsComputerEffectivePatchingPolicy>;
    getComputerMicrosoftUpdateDataListAsync(computerId: number, params?: CommonParameters): Promise<object>;
    getMonitorAlertSuspensionList(computerId: number, params?: CommonParameters): Promise<object>;
    postSuspension(computerId: number, integer: number): Promise<LabTechRepositoriesMySQLDomainModelsAlertingMonitorAlertSuspension>;
    getComputerMonitorsList(computerId: number, params?: CommonParameters): Promise<object>;
    getComputerOperatingSystem(computerId: number, params?: CommonParameters): Promise<LabTechModelsComputerOperatingSystem>;
    getDevicePatchingStatisticsAsync(computerId: number, params?: CommonParameters): Promise<AutomateApiDomainContractsPatchingComputerPatchingStats>;
    getComputerPatchJobListAsync(computerId: number, params?: CommonParameters): Promise<object>;
    getComputerPrintersList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerPrinter>>;
    getComputerProcessorList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerProcessor>>;
    getComputerRunningScripts(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerRunningScript>>;
    getComputerScheduledScripts(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsScheduledScript>>;
    postComputerScheduledScript(computerId: number, ScheduledScript: LabTechModelsScheduledScript): Promise<LabTechModelsScheduledScript>;
    getComputerScheduledScript(computerId: number, entityId: number, params?: CommonParameters): Promise<LabTechModelsScheduledScript>;
    getScheduledTaskList(computerId: number, params?: CommonParameters): Promise<object>;
    postScheduledTask(computerId: number, ComputerScheduledTask: LabTechModelsComputerScheduledTask): Promise<NoContentResponse>;
    getComputerScriptHistoryList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerScriptHistory>>;
    getComputerSensorListAsync(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerSensor>>;
    getComputerServiceList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerService>>;
    getComputerSoftwareList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerSoftware>>;
    uninstallSoftware(computerId: number, softwareId: number, SoftwareUninstallInfo: LabTechRESTApiRpcContractsSoftwareUninstallInfo): Promise<NoContentResponse>;
    getComputerSystemSlotList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerSystemSlot>>;
    getComputerThirdPartyPatchListAsync(computerId: number, params?: CommonParameters): Promise<object>;
    getComputerUpsListAsync(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerUps>>;
    getComputerVideoCardList(computerId: number, params?: CommonParameters): Promise<Array<LabTechModelsComputerVideoCard>>;
    getComputerChassis(params?: CommonParameters): Promise<Array<LabTechModelsComputerChassis>>;
    getComputerDriveList(params?: CommonParameters): Promise<Array<LabTechModelsComputerDrive>>;
    getComputerMaintenanceModeList(params?: CommonParameters): Promise<Array<LabTechModelsMaintenanceMode>>;
    getComputerMemorySlotList(params?: CommonParameters): Promise<Array<LabTechModelsComputerMemorySlot>>;
    getComputersSoftwareList(params?: CommonParameters): Promise<Array<LabTechModelsComputerSoftware>>;
    getRetiredAssetList(params?: CommonParameters): Promise<Array<LabTechModelsRetiredAsset>>;
    classifyService(serviceId: number, ServiceClassification: LabTechModelsServiceClassification): Promise<NoContentResponse>;
    getVirusScannerDefinitionList(params?: CommonParameters): Promise<Array<LabTechModelsVirusScannerDef>>;
    postVirusScannerDefinition(VirusScannerDef: LabTechModelsVirusScannerDef): Promise<LabTechModelsVirusScannerDef>;
}
export {};
//# sourceMappingURL=ComputersAPI.d.ts.map