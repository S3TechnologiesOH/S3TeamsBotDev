"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationsAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Automate_1 = __importDefault(require("../Automate"));
/**
 * @module LocationsAPI
 */
/**
 * Locations module
 * @public
 */
class LocationsAPI extends Automate_1.default {
    constructor(props) {
        super(props);
    }
    getProbeConfiguration(locationId, params = {}) {
        return this.request({
            path: `/api/v1/Locations/${locationId}/ProbeConfiguration`,
            method: 'get',
            params,
        });
    }
    postProbeConfiguration(locationId, NewProbeConfiguration) {
        return this.request({
            path: `/api/v1/Locations/${locationId}/ProbeConfiguration`,
            method: 'post',
            data: NewProbeConfiguration,
        });
    }
    deleteProbeConfiguration(locationId) {
        return this.request({
            path: `/api/v1/Locations/${locationId}/ProbeConfiguration`,
            method: 'delete',
        });
    }
    patchProbeConfiguration(locationId, PatchOperationArray) {
        return this.request({
            path: `/api/v1/Locations/${locationId}/ProbeConfiguration`,
            method: 'patch',
            data: PatchOperationArray,
        });
    }
    upgradeProbe(locationId, params = {}) {
        return this.request({
            path: `/api/v1/Locations/${locationId}/UpgradeProbe`,
            method: 'post',
            params,
        });
    }
    getProbeEventLevelList(params = {}) {
        return this.request({
            path: `/api/v1/Lookups/ProbeEventLevels`,
            method: 'get',
            params,
        });
    }
    getScanFrequencyList(params = {}) {
        return this.request({
            path: `/api/v1/Lookups/ScanFrequencies`,
            method: 'get',
            params,
        });
    }
    getSnmpEncryptionMethodList(params = {}) {
        return this.request({
            path: `/api/v1/Lookups/SnmpEncryptionMethods`,
            method: 'get',
            params,
        });
    }
    getSnmpHashMethodList(params = {}) {
        return this.request({
            path: `/api/v1/Lookups/SnmpHashMethods`,
            method: 'get',
            params,
        });
    }
    getStatusScanNetworkPortOptionList(params = {}) {
        return this.request({
            path: `/api/v1/Lookups/StatusScanNetworkPortOptions`,
            method: 'get',
            params,
        });
    }
    getAgentPushCredentialsList(probeConfigurationId, params = {}) {
        return this.request({
            path: `/api/v1/ProbeConfiguration/${probeConfigurationId}/AgentPushCredentials`,
            method: 'get',
            params,
        });
    }
    putAgentPushCredentialsList(probeConfigurationId, labTechRepositoriesMySQLDomainModelsNetworkProbeProbeConfigurationCredentialss) {
        return this.request({
            path: `/api/v1/ProbeConfiguration/${probeConfigurationId}/AgentPushCredentials`,
            method: 'put',
            data: labTechRepositoriesMySQLDomainModelsNetworkProbeProbeConfigurationCredentialss,
        });
    }
    deleteAgentPushCredentials(probeConfigurationId) {
        return this.request({
            path: `/api/v1/ProbeConfiguration/${probeConfigurationId}/AgentPushCredentials`,
            method: 'delete',
        });
    }
    getProbeSnmpConfigurationAsync(probeConfigurationId, params = {}) {
        return this.request({
            path: `/api/v1/ProbeConfiguration/${probeConfigurationId}/SnmpConfiguration`,
            method: 'get',
            params,
        });
    }
    patchProbeSnmpConfigurationAsync(probeConfigurationId, PatchOperationArray) {
        return this.request({
            path: `/api/v1/ProbeConfiguration/${probeConfigurationId}/SnmpConfiguration`,
            method: 'patch',
            data: PatchOperationArray,
        });
    }
    enableProbe(computerId) {
        return this.request({
            path: `/api/v1/ProbeConfiguration/EnableProbe/${computerId}`,
            method: 'post',
        });
    }
    getProbeEventList(params = {}) {
        return this.request({
            path: `/api/v1/ProbeEvents`,
            method: 'get',
            params,
        });
    }
}
exports.LocationsAPI = LocationsAPI;
//# sourceMappingURL=LocationsAPI.js.map