"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScriptingAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Automate_1 = __importDefault(require("../Automate"));
/**
 * @module ScriptingAPI
 */
/**
 * Scripting module
 * @public
 */
class ScriptingAPI extends Automate_1.default {
    constructor(props) {
        super(props);
    }
    getScriptFolderList(params = {}) {
        return this.request({
            path: `/api/v1/ScriptFolders`,
            method: 'get',
            params,
        });
    }
    postScriptFolder(ScriptFolder) {
        return this.request({
            path: `/api/v1/ScriptFolders`,
            method: 'post',
            data: ScriptFolder,
        });
    }
    getScriptFolderHierarchy() {
        return this.request({
            path: `/api/v1/ScriptFolders/Hierarchy`,
            method: 'get',
        });
    }
    getScriptFolder(entityId, params = {}) {
        return this.request({
            path: `/api/v1/ScriptFolders/${entityId}`,
            method: 'get',
            params,
        });
    }
    deleteScriptFolder(entityId) {
        return this.request({
            path: `/api/v1/ScriptFolders/${entityId}`,
            method: 'delete',
        });
    }
    patchScriptFolder(entityId, PatchOperationArray) {
        return this.request({
            path: `/api/v1/ScriptFolders/${entityId}`,
            method: 'patch',
            data: PatchOperationArray,
        });
    }
    getRunningScripts(params = {}) {
        return this.request({
            path: `/api/v1/Scripting/RunningScripts`,
            method: 'get',
            params,
        });
    }
    getScheduledScripts(params = {}) {
        return this.request({
            path: `/api/v1/Scripting/ScriptSchedules`,
            method: 'get',
            params,
        });
    }
    deleteScriptSchedule(scheduledId) {
        return this.request({
            path: `/api/v1/Scripting/ScriptSchedules/${scheduledId}`,
            method: 'delete',
        });
    }
    patchScriptSchedule(scheduledId, PatchOperationArray) {
        return this.request({
            path: `/api/v1/Scripting/ScriptSchedules/${scheduledId}`,
            method: 'patch',
            data: PatchOperationArray,
        });
    }
    getScriptList(params = {}) {
        return this.request({
            path: `/api/v1/Scripts`,
            method: 'get',
            params,
        });
    }
    postScript(Script) {
        return this.request({
            path: `/api/v1/Scripts`,
            method: 'post',
            data: Script,
        });
    }
    getScriptCopyAsync(scriptId) {
        return this.request({
            path: `/api/v1/Scripts/${scriptId}/Copy`,
            method: 'post',
        });
    }
}
exports.ScriptingAPI = ScriptingAPI;
//# sourceMappingURL=ScriptingAPI.js.map