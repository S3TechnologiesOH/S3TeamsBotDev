import Automate from '../Automate';
import { components } from '../AutomateTypes';
import { CommonParameters, CWAOptions } from '../AutomateAPI';
import { NoContentResponse } from '../types';
declare type schemas = components['schemas'];
declare type requestBodies = components['requestBodies'];
/** {@link AutomateApiDomainContractsPresentationLayerWebExtensionsUserClassWebExtensionRequest} */
export declare type AutomateApiDomainContractsPresentationLayerWebExtensionsUserClassWebExtensionRequest = schemas['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionRequest'];
/** {@link AutomateApiDomainContractsPresentationLayerWebExtensionsUserClassWebExtensionViewModel} */
export declare type AutomateApiDomainContractsPresentationLayerWebExtensionsUserClassWebExtensionViewModel = schemas['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'];
/** {@link AutomateApiDomainContractsSecurityAuthInformation} */
export declare type AutomateApiDomainContractsSecurityAuthInformation = schemas['Automate.Api.Domain.Contracts.Security.AuthInformation'];
/** {@link AutomateApiDomainContractsSecurityTokenCredentials} */
export declare type AutomateApiDomainContractsSecurityTokenCredentials = schemas['Automate.Api.Domain.Contracts.Security.TokenCredentials'];
/** {@link AutomateApiDomainContractsSecurityTokenResult} */
export declare type AutomateApiDomainContractsSecurityTokenResult = schemas['Automate.Api.Domain.Contracts.Security.TokenResult'];
/** {@link AutomateApiDomainContractsSystemServerInformation} */
export declare type AutomateApiDomainContractsSystemServerInformation = schemas['Automate.Api.Domain.Contracts.System.ServerInformation'];
/** {@link AutomateApiDomainContractsUsersChangePasswordRequest} */
export declare type AutomateApiDomainContractsUsersChangePasswordRequest = schemas['Automate.Api.Domain.Contracts.Users.ChangePasswordRequest'];
/** {@link AutomateApiDomainContractsUsersUser} */
export declare type AutomateApiDomainContractsUsersUser = schemas['Automate.Api.Domain.Contracts.Users.User'];
/** {@link AutomateApiDomainContractsUsersUserAccess} */
export declare type AutomateApiDomainContractsUsersUserAccess = schemas['Automate.Api.Domain.Contracts.Users.UserAccess'];
/** {@link AutomateApiDomainContractsUsersUserClass} */
export declare type AutomateApiDomainContractsUsersUserClass = schemas['Automate.Api.Domain.Contracts.Users.UserClass'];
/** {@link AutomateApiDomainContractsUsersUserFolder} */
export declare type AutomateApiDomainContractsUsersUserFolder = schemas['Automate.Api.Domain.Contracts.Users.UserFolder'];
/** {@link LabTechModelsExternalSystemCredentials} */
export declare type LabTechModelsExternalSystemCredentials = schemas['LabTech.Models.ExternalSystemCredentials'];
/** {@link LabTechModelsFeatureFlag} */
export declare type LabTechModelsFeatureFlag = schemas['LabTech.Models.FeatureFlag'];
/** {@link LabTechModelsLicensedProduct} */
export declare type LabTechModelsLicensedProduct = schemas['LabTech.Models.LicensedProduct'];
/** {@link LabTechModelsLink} */
export declare type LabTechModelsLink = schemas['LabTech.Models.Link'];
/** {@link LabTechModelsPatchInformation} */
export declare type LabTechModelsPatchInformation = schemas['LabTech.Models.PatchInformation'];
/** {@link LabTechModelsUserAudit} */
export declare type LabTechModelsUserAudit = schemas['LabTech.Models.UserAudit'];
/** {@link LabTechModelsUserFavorite} */
export declare type LabTechModelsUserFavorite = schemas['LabTech.Models.UserFavorite'];
/** {@link LabTechModelsUserSetting} */
export declare type LabTechModelsUserSetting = schemas['LabTech.Models.UserSetting'];
/** {@link LabTechRESTApiModelsPatchOperationArray} */
export declare type LabTechRESTApiModelsPatchOperationArray = requestBodies['LabTech.RESTApi.Models.PatchOperationArray'];
/** {@link LabTechRESTApiSecurityAuthServiceCredentials} */
export declare type LabTechRESTApiSecurityAuthServiceCredentials = schemas['LabTech.RESTApi.Security.AuthServiceCredentials'];
/**
 * @module SystemAPI
 */
/**
 * System module
 * @public
 */
export declare class SystemAPI extends Automate {
    constructor(props: CWAOptions);
    getAuthInformation(): Promise<AutomateApiDomainContractsSecurityAuthInformation>;
    postToken(TokenCredentials: AutomateApiDomainContractsSecurityTokenCredentials): Promise<AutomateApiDomainContractsSecurityTokenResult>;
    getServerInformationListAsync(params?: CommonParameters): Promise<Array<AutomateApiDomainContractsSystemServerInformation>>;
    getDatabaseServerDateTimeWithUtcOffset(): Promise<string>;
    getClientSystemCredentialsList(clientId: number, params?: CommonParameters): Promise<Array<LabTechModelsExternalSystemCredentials>>;
    getFeatureFlagList(params?: CommonParameters): Promise<object>;
    postFeatureFlag(FeatureFlag: LabTechModelsFeatureFlag): Promise<LabTechModelsFeatureFlag>;
    getLicensedProducts(params?: CommonParameters): Promise<Array<LabTechModelsLicensedProduct>>;
    getLinkList(params?: CommonParameters): Promise<Array<LabTechModelsLink>>;
    getPatchInformation(params?: CommonParameters): Promise<LabTechModelsPatchInformation>;
    getClientPermissionList(clientId: number): Promise<Array<string>>;
    getUserPermissionList(): Promise<Array<string>>;
    getPluginList(params?: CommonParameters): Promise<object>;
    getRebootPolicyListAsync(params?: CommonParameters): Promise<object>;
    getUserAuditList(params?: CommonParameters): Promise<Array<LabTechModelsUserAudit>>;
    postUserAudit(UserAudit: LabTechModelsUserAudit): Promise<LabTechModelsUserAudit>;
    getUserClassList(params?: CommonParameters): Promise<Array<AutomateApiDomainContractsUsersUserClass>>;
    getUserClass(userClassId: number, params?: CommonParameters): Promise<AutomateApiDomainContractsUsersUserClass>;
    getUserClassWebExtensionList(userClassId: number): Promise<Array<AutomateApiDomainContractsPresentationLayerWebExtensionsUserClassWebExtensionViewModel>>;
    putUserClassWebExtensionList(userClassId: number, UserClassWebExtensionRequest: AutomateApiDomainContractsPresentationLayerWebExtensionsUserClassWebExtensionRequest): Promise<Array<AutomateApiDomainContractsPresentationLayerWebExtensionsUserClassWebExtensionViewModel>>;
    getUserList(params?: CommonParameters): Promise<object>;
    addUser(User: AutomateApiDomainContractsUsersUser): Promise<AutomateApiDomainContractsUsersUser>;
    getUser(userId: number, params?: CommonParameters): Promise<AutomateApiDomainContractsUsersUser>;
    deleteUser(userId: number): Promise<NoContentResponse>;
    patchUser(userId: number, PatchOperationArray: LabTechRESTApiModelsPatchOperationArray): Promise<AutomateApiDomainContractsUsersUser>;
    postAuthorizationInitialLink(userId: number, AuthServiceCredentials: LabTechRESTApiSecurityAuthServiceCredentials): Promise<LabTechRESTApiSecurityAuthServiceCredentials>;
    changePassword(userId: number, ChangePasswordRequest: AutomateApiDomainContractsUsersChangePasswordRequest): Promise<NoContentResponse>;
    getUserFavoriteList(userId: number, params?: CommonParameters): Promise<object>;
    postUserFavorite(userId: number, UserFavorite: LabTechModelsUserFavorite): Promise<LabTechModelsUserFavorite>;
    getUserPermissionsAsync(userId: number): Promise<AutomateApiDomainContractsUsersUserAccess>;
    getUserSettingList(userId: number, params?: CommonParameters): Promise<object>;
    postUserSetting(userId: number, UserSetting: LabTechModelsUserSetting): Promise<LabTechModelsUserSetting>;
    getUserFolderList(params?: CommonParameters): Promise<object>;
    postUserFolder(UserFolder: AutomateApiDomainContractsUsersUserFolder): Promise<AutomateApiDomainContractsUsersUserFolder>;
    getUserFolder(userFolderId: number, params?: CommonParameters): Promise<AutomateApiDomainContractsUsersUserFolder>;
    deleteUserFolder(userFolderId: number): Promise<NoContentResponse>;
    patchUserFolder(userFolderId: number, PatchOperationArray: LabTechRESTApiModelsPatchOperationArray): Promise<AutomateApiDomainContractsUsersUserFolder>;
}
export {};
//# sourceMappingURL=SystemAPI.d.ts.map