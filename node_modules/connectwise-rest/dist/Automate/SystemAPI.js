"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Automate_1 = __importDefault(require("../Automate"));
/**
 * @module SystemAPI
 */
/**
 * System module
 * @public
 */
class SystemAPI extends Automate_1.default {
    constructor(props) {
        super(props);
    }
    getAuthInformation() {
        return this.request({
            path: `/api/v1/APIToken`,
            method: 'get',
        });
    }
    postToken(TokenCredentials) {
        return this.request({
            path: `/api/v1/APIToken`,
            method: 'post',
            data: TokenCredentials,
        });
    }
    getServerInformationListAsync(params = {}) {
        return this.request({
            path: `/api/v1/System/ServerInformation`,
            method: 'get',
            params,
        });
    }
    getDatabaseServerDateTimeWithUtcOffset() {
        return this.request({
            path: `/api/v1/DatabaseServerTime`,
            method: 'get',
        });
    }
    getClientSystemCredentialsList(clientId, params = {}) {
        return this.request({
            path: `/api/v1/ExternalSystemCredentials/Clients/${clientId}`,
            method: 'get',
            params,
        });
    }
    getFeatureFlagList(params = {}) {
        return this.request({
            path: `/api/v1/FeatureFlags`,
            method: 'get',
            params,
        });
    }
    postFeatureFlag(FeatureFlag) {
        return this.request({
            path: `/api/v1/FeatureFlags`,
            method: 'post',
            data: FeatureFlag,
        });
    }
    getLicensedProducts(params = {}) {
        return this.request({
            path: `/api/v1/LicensedProducts`,
            method: 'get',
            params,
        });
    }
    getLinkList(params = {}) {
        return this.request({
            path: `/api/v1/Links`,
            method: 'get',
            params,
        });
    }
    getPatchInformation(params = {}) {
        return this.request({
            path: `/api/v1/PatchInformation`,
            method: 'get',
            params,
        });
    }
    getClientPermissionList(clientId) {
        return this.request({
            path: `/api/v1/Permissions/Clients/${clientId}`,
            method: 'get',
        });
    }
    getUserPermissionList() {
        return this.request({
            path: `/api/v1/Permissions/Users`,
            method: 'get',
        });
    }
    getPluginList(params = {}) {
        return this.request({
            path: `/api/v1/Plugins`,
            method: 'get',
            params,
        });
    }
    getRebootPolicyListAsync(params = {}) {
        return this.request({
            path: `/api/v1/RebootPolicies`,
            method: 'get',
            params,
        });
    }
    getUserAuditList(params = {}) {
        return this.request({
            path: `/api/v1/UserAudits`,
            method: 'get',
            params,
        });
    }
    postUserAudit(UserAudit) {
        return this.request({
            path: `/api/v1/UserAudits`,
            method: 'post',
            data: UserAudit,
        });
    }
    getUserClassList(params = {}) {
        return this.request({
            path: `/api/v1/UserClasses`,
            method: 'get',
            params,
        });
    }
    getUserClass(userClassId, params = {}) {
        return this.request({
            path: `/api/v1/UserClasses/${userClassId}`,
            method: 'get',
            params,
        });
    }
    getUserClassWebExtensionList(userClassId) {
        return this.request({
            path: `/api/v1/UserClasses/${userClassId}/WebExtensions`,
            method: 'get',
        });
    }
    putUserClassWebExtensionList(userClassId, UserClassWebExtensionRequest) {
        return this.request({
            path: `/api/v1/UserClasses/${userClassId}/WebExtensions`,
            method: 'put',
            data: UserClassWebExtensionRequest,
        });
    }
    getUserList(params = {}) {
        return this.request({
            path: `/api/v1/Users`,
            method: 'get',
            params,
        });
    }
    addUser(User) {
        return this.request({
            path: `/api/v1/Users`,
            method: 'post',
            data: User,
        });
    }
    getUser(userId, params = {}) {
        return this.request({
            path: `/api/v1/Users/${userId}`,
            method: 'get',
            params,
        });
    }
    deleteUser(userId) {
        return this.request({
            path: `/api/v1/Users/${userId}`,
            method: 'delete',
        });
    }
    patchUser(userId, PatchOperationArray) {
        return this.request({
            path: `/api/v1/Users/${userId}`,
            method: 'patch',
            data: PatchOperationArray,
        });
    }
    postAuthorizationInitialLink(userId, AuthServiceCredentials) {
        return this.request({
            path: `/api/v1/Users/${userId}/AuthLink`,
            method: 'post',
            data: AuthServiceCredentials,
        });
    }
    changePassword(userId, ChangePasswordRequest) {
        return this.request({
            path: `/api/v1/Users/${userId}/ChangePassword`,
            method: 'post',
            data: ChangePasswordRequest,
        });
    }
    getUserFavoriteList(userId, params = {}) {
        return this.request({
            path: `/api/v1/Users/${userId}/Favorites`,
            method: 'get',
            params,
        });
    }
    postUserFavorite(userId, UserFavorite) {
        return this.request({
            path: `/api/v1/Users/${userId}/Favorites`,
            method: 'post',
            data: UserFavorite,
        });
    }
    getUserPermissionsAsync(userId) {
        return this.request({
            path: `/api/v1/Users/${userId}/UserAccess`,
            method: 'get',
        });
    }
    getUserSettingList(userId, params = {}) {
        return this.request({
            path: `/api/v1/Users/${userId}/Settings`,
            method: 'get',
            params,
        });
    }
    postUserSetting(userId, UserSetting) {
        return this.request({
            path: `/api/v1/Users/${userId}/Settings`,
            method: 'post',
            data: UserSetting,
        });
    }
    getUserFolderList(params = {}) {
        return this.request({
            path: `/api/v1/Users/Folders`,
            method: 'get',
            params,
        });
    }
    postUserFolder(UserFolder) {
        return this.request({
            path: `/api/v1/Users/Folders`,
            method: 'post',
            data: UserFolder,
        });
    }
    getUserFolder(userFolderId, params = {}) {
        return this.request({
            path: `/api/v1/Users/Folders/${userFolderId}`,
            method: 'get',
            params,
        });
    }
    deleteUserFolder(userFolderId) {
        return this.request({
            path: `/api/v1/Users/Folders/${userFolderId}`,
            method: 'delete',
        });
    }
    patchUserFolder(userFolderId, PatchOperationArray) {
        return this.request({
            path: `/api/v1/Users/Folders/${userFolderId}`,
            method: 'patch',
            data: PatchOperationArray,
        });
    }
}
exports.SystemAPI = SystemAPI;
//# sourceMappingURL=SystemAPI.js.map