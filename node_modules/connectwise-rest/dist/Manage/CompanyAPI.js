"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompanyAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module CompanyAPI
 */
/**
 * Company module
 * @public
 */
class CompanyAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getCompanyAddressFormats(params = {}) {
        return this.request({
            path: `/company/addressFormats`,
            method: 'get',
            params,
        });
    }
    postCompanyAddressFormats(addressFormat) {
        return this.request({
            path: `/company/addressFormats`,
            method: 'post',
            data: addressFormat,
        });
    }
    getCompanyAddressFormatsById(id, params = {}) {
        return this.request({
            path: `/company/addressFormats/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyAddressFormatsById(id) {
        return this.request({
            path: `/company/addressFormats/${id}`,
            method: 'delete',
        });
    }
    putCompanyAddressFormatsById(id, addressFormat) {
        return this.request({
            path: `/company/addressFormats/${id}`,
            method: 'put',
            data: addressFormat,
        });
    }
    patchCompanyAddressFormatsById(id, patchOperations) {
        return this.request({
            path: `/company/addressFormats/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyAddressFormatsByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/addressFormats/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyAddressFormatsCount(params = {}) {
        return this.request({
            path: `/company/addressFormats/count`,
            method: 'get',
            params,
        });
    }
    getCompanyAddressFormatsInfo(params = {}) {
        return this.request({
            path: `/company/addressFormats/info`,
            method: 'get',
            params,
        });
    }
    getCompanyAddressFormatsInfoCount(params = {}) {
        return this.request({
            path: `/company/addressFormats/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyBillingSetupsInfoCount(params = {}) {
        return this.request({
            path: `/company/billingSetups/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCommunicationTypes(params = {}) {
        return this.request({
            path: `/company/communicationTypes`,
            method: 'get',
            params,
        });
    }
    postCompanyCommunicationTypes(communicationType) {
        return this.request({
            path: `/company/communicationTypes`,
            method: 'post',
            data: communicationType,
        });
    }
    getCompanyCommunicationTypesById(id, params = {}) {
        return this.request({
            path: `/company/communicationTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCommunicationTypesById(id) {
        return this.request({
            path: `/company/communicationTypes/${id}`,
            method: 'delete',
        });
    }
    putCompanyCommunicationTypesById(id, communicationType) {
        return this.request({
            path: `/company/communicationTypes/${id}`,
            method: 'put',
            data: communicationType,
        });
    }
    patchCompanyCommunicationTypesById(id, patchOperations) {
        return this.request({
            path: `/company/communicationTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCommunicationTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/communicationTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyCommunicationTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/communicationTypes/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyCommunicationTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/communicationTypes/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyCommunicationTypesCount(params = {}) {
        return this.request({
            path: `/company/communicationTypes/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCommunicationTypesInfo(params = {}) {
        return this.request({
            path: `/company/communicationTypes/info`,
            method: 'get',
            params,
        });
    }
    getCompanyCommunicationTypesInfoCount(params = {}) {
        return this.request({
            path: `/company/communicationTypes/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompanies(params = {}) {
        return this.request({
            path: `/company/companies`,
            method: 'get',
            params,
        });
    }
    postCompanyCompanies(company) {
        return this.request({
            path: `/company/companies`,
            method: 'post',
            data: company,
        });
    }
    getCompanyCompaniesById(id, params = {}) {
        return this.request({
            path: `/company/companies/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesById(id) {
        return this.request({
            path: `/company/companies/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesById(id, company) {
        return this.request({
            path: `/company/companies/${id}`,
            method: 'put',
            data: company,
        });
    }
    patchCompanyCompaniesById(id, patchOperations) {
        return this.request({
            path: `/company/companies/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postCompanyCompaniesByIdMerge(id, merge) {
        return this.request({
            path: `/company/companies/${id}/merge`,
            method: 'post',
            data: merge,
        });
    }
    getCompanyCompaniesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/companies/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/companies/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdCustomStatusNotes(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/customStatusNotes`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdCustomStatusNotes(parentId, customNote) {
        return this.request({
            path: `/company/companies/${parentId}/customStatusNotes`,
            method: 'post',
            data: customNote,
        });
    }
    getCompanyCompaniesByParentIdCustomStatusNotesById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/customStatusNotes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdCustomStatusNotesById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/customStatusNotes/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdCustomStatusNotesById(id, parentId, customNote) {
        return this.request({
            path: `/company/companies/${parentId}/customStatusNotes/${id}`,
            method: 'put',
            data: customNote,
        });
    }
    patchCompanyCompaniesByParentIdCustomStatusNotesById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/customStatusNotes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdCustomStatusNotesCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/customStatusNotes/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdGroups(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/groups`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdGroups(parentId, companyGroup) {
        return this.request({
            path: `/company/companies/${parentId}/groups`,
            method: 'post',
            data: companyGroup,
        });
    }
    getCompanyCompaniesByParentIdGroupsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/groups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdGroupsById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/groups/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdGroupsById(id, parentId, companyGroup) {
        return this.request({
            path: `/company/companies/${parentId}/groups/${id}`,
            method: 'put',
            data: companyGroup,
        });
    }
    patchCompanyCompaniesByParentIdGroupsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/groups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdGroupsCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/groups/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdManagementReportNotifications(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportNotifications`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdManagementReportNotifications(parentId, managementReportNotification) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportNotifications`,
            method: 'post',
            data: managementReportNotification,
        });
    }
    getCompanyCompaniesByParentIdManagementReportNotificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportNotifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdManagementReportNotificationsById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportNotifications/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdManagementReportNotificationsById(id, parentId, managementReportNotification) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportNotifications/${id}`,
            method: 'put',
            data: managementReportNotification,
        });
    }
    patchCompanyCompaniesByParentIdManagementReportNotificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportNotifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdManagementReportNotificationsCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportNotifications/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdManagementReportSetup(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportSetup`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdManagementReportSetup(parentId, managementReportSetup) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportSetup`,
            method: 'post',
            data: managementReportSetup,
        });
    }
    putCompanyCompaniesByParentIdManagementReportSetupById(id, parentId, managementReportSetup) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportSetup/${id}`,
            method: 'put',
            data: managementReportSetup,
        });
    }
    patchCompanyCompaniesByParentIdManagementReportSetupById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/managementReportSetup/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdManagementSummaryReports(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/managementSummaryReports`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdManagementSummaryReports(parentId, managementSummary) {
        return this.request({
            path: `/company/companies/${parentId}/managementSummaryReports`,
            method: 'post',
            data: managementSummary,
        });
    }
    getCompanyCompaniesByParentIdManagementSummaryReportsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/managementSummaryReports/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdManagementSummaryReportsById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/managementSummaryReports/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdManagementSummaryReportsById(id, parentId, managementSummary) {
        return this.request({
            path: `/company/companies/${parentId}/managementSummaryReports/${id}`,
            method: 'put',
            data: managementSummary,
        });
    }
    patchCompanyCompaniesByParentIdManagementSummaryReportsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/managementSummaryReports/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdManagementSummaryReportsCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/managementSummaryReports/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdNotes(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/notes`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdNotes(parentId, companyNote) {
        return this.request({
            path: `/company/companies/${parentId}/notes`,
            method: 'post',
            data: companyNote,
        });
    }
    getCompanyCompaniesByParentIdNotesById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/notes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdNotesById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/notes/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdNotesById(id, parentId, companyNote) {
        return this.request({
            path: `/company/companies/${parentId}/notes/${id}`,
            method: 'put',
            data: companyNote,
        });
    }
    patchCompanyCompaniesByParentIdNotesById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/notes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdNotesCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/notes/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdSites(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/sites`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdSites(parentId, site) {
        return this.request({
            path: `/company/companies/${parentId}/sites`,
            method: 'post',
            data: site,
        });
    }
    getCompanyCompaniesByParentIdSitesById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/sites/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdSitesById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/sites/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdSitesById(id, parentId, site) {
        return this.request({
            path: `/company/companies/${parentId}/sites/${id}`,
            method: 'put',
            data: site,
        });
    }
    patchCompanyCompaniesByParentIdSitesById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/sites/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdSitesByIdUsages(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/sites/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdSitesByIdUsagesList(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/sites/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdSitesCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/sites/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdSurveysCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/surveys/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdTeams(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/teams`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdTeams(parentId, companyTeam) {
        return this.request({
            path: `/company/companies/${parentId}/teams`,
            method: 'post',
            data: companyTeam,
        });
    }
    getCompanyCompaniesByParentIdTeamsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/teams/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdTeamsById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/teams/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdTeamsById(id, parentId, companyTeam) {
        return this.request({
            path: `/company/companies/${parentId}/teams/${id}`,
            method: 'put',
            data: companyTeam,
        });
    }
    patchCompanyCompaniesByParentIdTeamsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/teams/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdTeamsCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/teams/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdTracks(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/tracks`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdTracks(parentId, track) {
        return this.request({
            path: `/company/companies/${parentId}/tracks`,
            method: 'post',
            data: track,
        });
    }
    getCompanyCompaniesByParentIdTracksById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/tracks/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdTracksById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/tracks/${id}`,
            method: 'delete',
        });
    }
    getCompanyCompaniesByParentIdTracksCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/tracks/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesByParentIdTypeAssociations(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/typeAssociations`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesByParentIdTypeAssociations(parentId, companyTypeAssociation) {
        return this.request({
            path: `/company/companies/${parentId}/typeAssociations`,
            method: 'post',
            data: companyTypeAssociation,
        });
    }
    getCompanyCompaniesByParentIdTypeAssociationsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/typeAssociations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesByParentIdTypeAssociationsById(id, parentId) {
        return this.request({
            path: `/company/companies/${parentId}/typeAssociations/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesByParentIdTypeAssociationsById(id, parentId, companyTypeAssociation) {
        return this.request({
            path: `/company/companies/${parentId}/typeAssociations/${id}`,
            method: 'put',
            data: companyTypeAssociation,
        });
    }
    patchCompanyCompaniesByParentIdTypeAssociationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/companies/${parentId}/typeAssociations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesByParentIdTypeAssociationsCount(parentId, params = {}) {
        return this.request({
            path: `/company/companies/${parentId}/typeAssociations/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesCount(params = {}) {
        return this.request({
            path: `/company/companies/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesDefault(params = {}) {
        return this.request({
            path: `/company/companies/default`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesInfoTypes(params = {}) {
        return this.request({
            path: `/company/companies/info/types`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesInfoTypesById(id, params = {}) {
        return this.request({
            path: `/company/companies/info/types/${id}`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesInfoTypesCount(params = {}) {
        return this.request({
            path: `/company/companies/info/types/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesStatuses(params = {}) {
        return this.request({
            path: `/company/companies/statuses`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesStatuses(companyStatus) {
        return this.request({
            path: `/company/companies/statuses`,
            method: 'post',
            data: companyStatus,
        });
    }
    getCompanyCompaniesStatusesById(id, params = {}) {
        return this.request({
            path: `/company/companies/statuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesStatusesById(id) {
        return this.request({
            path: `/company/companies/statuses/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesStatusesById(id, companyStatus) {
        return this.request({
            path: `/company/companies/statuses/${id}`,
            method: 'put',
            data: companyStatus,
        });
    }
    patchCompanyCompaniesStatusesById(id, patchOperations) {
        return this.request({
            path: `/company/companies/statuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesStatusesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/companies/statuses/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesStatusesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/companies/statuses/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesStatusesCount(params = {}) {
        return this.request({
            path: `/company/companies/statuses/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesTypes(params = {}) {
        return this.request({
            path: `/company/companies/types`,
            method: 'get',
            params,
        });
    }
    postCompanyCompaniesTypes(companyType) {
        return this.request({
            path: `/company/companies/types`,
            method: 'post',
            data: companyType,
        });
    }
    getCompanyCompaniesTypesById(id, params = {}) {
        return this.request({
            path: `/company/companies/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompaniesTypesById(id) {
        return this.request({
            path: `/company/companies/types/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompaniesTypesById(id, companyType) {
        return this.request({
            path: `/company/companies/types/${id}`,
            method: 'put',
            data: companyType,
        });
    }
    patchCompanyCompaniesTypesById(id, patchOperations) {
        return this.request({
            path: `/company/companies/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompaniesTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/companies/types/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/companies/types/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyCompaniesTypesCount(params = {}) {
        return this.request({
            path: `/company/companies/types/count`,
            method: 'get',
            params,
        });
    }
    putCompanyCompanyFinanceById(id, CompanyFinance) {
        return this.request({
            path: `/company/companyFinance/${id}`,
            method: 'put',
            data: CompanyFinance,
        });
    }
    getCompanyCompanyPickerItems(params = {}) {
        return this.request({
            path: `/company/companyPickerItems`,
            method: 'get',
            params,
        });
    }
    postCompanyCompanyPickerItems(companyPickerItem) {
        return this.request({
            path: `/company/companyPickerItems`,
            method: 'post',
            data: companyPickerItem,
        });
    }
    getCompanyCompanyPickerItemsById(id, params = {}) {
        return this.request({
            path: `/company/companyPickerItems/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompanyPickerItemsById(id) {
        return this.request({
            path: `/company/companyPickerItems/${id}`,
            method: 'delete',
        });
    }
    postCompanyCompanyPickerItemsClear(clearPickerRequest) {
        return this.request({
            path: `/company/companyPickerItems/clear`,
            method: 'post',
            data: clearPickerRequest,
        });
    }
    getCompanyCompanyPickerItemsCount(params = {}) {
        return this.request({
            path: `/company/companyPickerItems/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCompanyTypeAssociations(params = {}) {
        return this.request({
            path: `/company/companyTypeAssociations`,
            method: 'get',
            params,
        });
    }
    postCompanyCompanyTypeAssociations(companyTypeAssociation) {
        return this.request({
            path: `/company/companyTypeAssociations`,
            method: 'post',
            data: companyTypeAssociation,
        });
    }
    getCompanyCompanyTypeAssociationsById(id, params = {}) {
        return this.request({
            path: `/company/companyTypeAssociations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCompanyTypeAssociationsById(id) {
        return this.request({
            path: `/company/companyTypeAssociations/${id}`,
            method: 'delete',
        });
    }
    putCompanyCompanyTypeAssociationsById(id, companyTypeAssociation) {
        return this.request({
            path: `/company/companyTypeAssociations/${id}`,
            method: 'put',
            data: companyTypeAssociation,
        });
    }
    patchCompanyCompanyTypeAssociationsById(id, patchOperations) {
        return this.request({
            path: `/company/companyTypeAssociations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCompanyTypeAssociationsCount(params = {}) {
        return this.request({
            path: `/company/companyTypeAssociations/count`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurations(managedIdentifier, params = {}) {
        return this.request({
            path: `/company/configurations`,
            method: 'get',
            params,
        });
    }
    postCompanyConfigurations(configuration, params = {}) {
        return this.request({
            path: `/company/configurations`,
            method: 'post',
            data: configuration,
            params,
        });
    }
    getCompanyConfigurationsById(id, params = {}) {
        return this.request({
            path: `/company/configurations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyConfigurationsById(id) {
        return this.request({
            path: `/company/configurations/${id}`,
            method: 'delete',
        });
    }
    putCompanyConfigurationsById(id, configuration, params = {}) {
        return this.request({
            path: `/company/configurations/${id}`,
            method: 'put',
            data: configuration,
            params,
        });
    }
    patchCompanyConfigurationsById(id, patchOperations, params = {}) {
        return this.request({
            path: `/company/configurations/${id}`,
            method: 'patch',
            data: patchOperations,
            params,
        });
    }
    patchCompanyConfigurationsByIdChangeType(id, patchOperations) {
        return this.request({
            path: `/company/configurations/${id}/changeType`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postCompanyConfigurationsBulk(companyConfigurations) {
        return this.request({
            path: `/company/configurations/bulk`,
            method: 'post',
            data: companyConfigurations,
        });
    }
    deleteCompanyConfigurationsBulk() {
        return this.request({
            path: `/company/configurations/bulk`,
            method: 'delete',
        });
    }
    putCompanyConfigurationsBulk(companyConfigurations) {
        return this.request({
            path: `/company/configurations/bulk`,
            method: 'put',
            data: companyConfigurations,
        });
    }
    getCompanyConfigurationsCount(managedIdentifier, params = {}) {
        return this.request({
            path: `/company/configurations/count`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsStatuses(params = {}) {
        return this.request({
            path: `/company/configurations/statuses`,
            method: 'get',
            params,
        });
    }
    postCompanyConfigurationsStatuses(configurationStatus) {
        return this.request({
            path: `/company/configurations/statuses`,
            method: 'post',
            data: configurationStatus,
        });
    }
    getCompanyConfigurationsStatusesById(id, params = {}) {
        return this.request({
            path: `/company/configurations/statuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyConfigurationsStatusesById(id) {
        return this.request({
            path: `/company/configurations/statuses/${id}`,
            method: 'delete',
        });
    }
    putCompanyConfigurationsStatusesById(id, configurationStatus) {
        return this.request({
            path: `/company/configurations/statuses/${id}`,
            method: 'put',
            data: configurationStatus,
        });
    }
    patchCompanyConfigurationsStatusesById(id, patchOperations) {
        return this.request({
            path: `/company/configurations/statuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyConfigurationsStatusesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/configurations/statuses/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsStatusesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/configurations/statuses/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsStatusesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/configurations/statuses/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsStatusesCount(params = {}) {
        return this.request({
            path: `/company/configurations/statuses/count`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsStatusesInfo(params = {}) {
        return this.request({
            path: `/company/configurations/statuses/info`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsStatusesInfoCount(params = {}) {
        return this.request({
            path: `/company/configurations/statuses/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypes(params = {}) {
        return this.request({
            path: `/company/configurations/types`,
            method: 'get',
            params,
        });
    }
    postCompanyConfigurationsTypes(configurationType) {
        return this.request({
            path: `/company/configurations/types`,
            method: 'post',
            data: configurationType,
        });
    }
    getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValues(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values`,
            method: 'get',
            params,
        });
    }
    postCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValues(parentId, grandparentId, configurationTypeQuestionValue) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values`,
            method: 'post',
            data: configurationTypeQuestionValue,
        });
    }
    getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'delete',
        });
    }
    putCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId, configurationTypeQuestionValue) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'put',
            data: configurationTypeQuestionValue,
        });
    }
    patchCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdUsages(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdUsagesList(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${grandparentId}/questions/${parentId}/values/count`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypesById(id, params = {}) {
        return this.request({
            path: `/company/configurations/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyConfigurationsTypesById(id) {
        return this.request({
            path: `/company/configurations/types/${id}`,
            method: 'delete',
        });
    }
    putCompanyConfigurationsTypesById(id, configurationType) {
        return this.request({
            path: `/company/configurations/types/${id}`,
            method: 'put',
            data: configurationType,
        });
    }
    patchCompanyConfigurationsTypesById(id, patchOperations) {
        return this.request({
            path: `/company/configurations/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyConfigurationsTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/configurations/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/configurations/types/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/configurations/types/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypesByParentIdQuestions(parentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${parentId}/questions`,
            method: 'get',
            params,
        });
    }
    postCompanyConfigurationsTypesByParentIdQuestions(parentId, configurationTypeQuestion) {
        return this.request({
            path: `/company/configurations/types/${parentId}/questions`,
            method: 'post',
            data: configurationTypeQuestion,
        });
    }
    getCompanyConfigurationsTypesByParentIdQuestionsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${parentId}/questions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyConfigurationsTypesByParentIdQuestionsById(id, parentId) {
        return this.request({
            path: `/company/configurations/types/${parentId}/questions/${id}`,
            method: 'delete',
        });
    }
    putCompanyConfigurationsTypesByParentIdQuestionsById(id, parentId, configurationTypeQuestion) {
        return this.request({
            path: `/company/configurations/types/${parentId}/questions/${id}`,
            method: 'put',
            data: configurationTypeQuestion,
        });
    }
    patchCompanyConfigurationsTypesByParentIdQuestionsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/configurations/types/${parentId}/questions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyConfigurationsTypesByParentIdQuestionsCount(parentId, params = {}) {
        return this.request({
            path: `/company/configurations/types/${parentId}/questions/count`,
            method: 'get',
            params,
        });
    }
    getCompanyConfigurationsTypesCount(params = {}) {
        return this.request({
            path: `/company/configurations/types/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContacts(params = {}) {
        return this.request({
            path: `/company/contacts`,
            method: 'get',
            params,
        });
    }
    postCompanyContacts(contact) {
        return this.request({
            path: `/company/contacts`,
            method: 'post',
            data: contact,
        });
    }
    getCompanyContactsById(id, params = {}) {
        return this.request({
            path: `/company/contacts/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsById(id, transferContactId) {
        return this.request({
            path: `/company/contacts/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsById(id, contact) {
        return this.request({
            path: `/company/contacts/${id}`,
            method: 'put',
            data: contact,
        });
    }
    patchCompanyContactsById(id, patchOperations) {
        return this.request({
            path: `/company/contacts/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsByIdImage(id, useDefaultFlag, lastModified, params = {}) {
        return this.request({
            path: `/company/contacts/${id}/image`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByIdPortalSecurity(id, params = {}) {
        return this.request({
            path: `/company/contacts/${id}/portalSecurity`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/contacts/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/contacts/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByParentIdCommunications(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/communications`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsByParentIdCommunications(parentId, contactCommunication) {
        return this.request({
            path: `/company/contacts/${parentId}/communications`,
            method: 'post',
            data: contactCommunication,
        });
    }
    getCompanyContactsByParentIdCommunicationsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/communications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsByParentIdCommunicationsById(id, parentId) {
        return this.request({
            path: `/company/contacts/${parentId}/communications/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsByParentIdCommunicationsById(id, parentId, contactCommunication) {
        return this.request({
            path: `/company/contacts/${parentId}/communications/${id}`,
            method: 'put',
            data: contactCommunication,
        });
    }
    patchCompanyContactsByParentIdCommunicationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/contacts/${parentId}/communications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsByParentIdCommunicationsCount(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/communications/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByParentIdGroups(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/groups`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsByParentIdGroups(parentId, contactGroup) {
        return this.request({
            path: `/company/contacts/${parentId}/groups`,
            method: 'post',
            data: contactGroup,
        });
    }
    getCompanyContactsByParentIdGroupsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/groups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsByParentIdGroupsById(id, parentId) {
        return this.request({
            path: `/company/contacts/${parentId}/groups/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsByParentIdGroupsById(id, parentId, contactGroup) {
        return this.request({
            path: `/company/contacts/${parentId}/groups/${id}`,
            method: 'put',
            data: contactGroup,
        });
    }
    patchCompanyContactsByParentIdGroupsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/contacts/${parentId}/groups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsByParentIdGroupsCount(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/groups/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByParentIdNotes(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/notes`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsByParentIdNotes(parentId, contactNote) {
        return this.request({
            path: `/company/contacts/${parentId}/notes`,
            method: 'post',
            data: contactNote,
        });
    }
    getCompanyContactsByParentIdNotesById(id, parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/notes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsByParentIdNotesById(id, parentId) {
        return this.request({
            path: `/company/contacts/${parentId}/notes/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsByParentIdNotesById(id, parentId, contactNote) {
        return this.request({
            path: `/company/contacts/${parentId}/notes/${id}`,
            method: 'put',
            data: contactNote,
        });
    }
    patchCompanyContactsByParentIdNotesById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/contacts/${parentId}/notes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsByParentIdNotesCount(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/notes/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByParentIdTracks(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/tracks`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsByParentIdTracks(parentId, track) {
        return this.request({
            path: `/company/contacts/${parentId}/tracks`,
            method: 'post',
            data: track,
        });
    }
    getCompanyContactsByParentIdTracksById(id, parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/tracks/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsByParentIdTracksById(id, parentId) {
        return this.request({
            path: `/company/contacts/${parentId}/tracks/${id}`,
            method: 'delete',
        });
    }
    getCompanyContactsByParentIdTracksCount(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/tracks/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsByParentIdTypeAssociations(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/typeAssociations`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsByParentIdTypeAssociations(parentId, contactTypeAssociation) {
        return this.request({
            path: `/company/contacts/${parentId}/typeAssociations`,
            method: 'post',
            data: contactTypeAssociation,
        });
    }
    getCompanyContactsByParentIdTypeAssociationsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/typeAssociations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsByParentIdTypeAssociationsById(id, parentId) {
        return this.request({
            path: `/company/contacts/${parentId}/typeAssociations/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsByParentIdTypeAssociationsById(id, parentId, contactTypeAssociation) {
        return this.request({
            path: `/company/contacts/${parentId}/typeAssociations/${id}`,
            method: 'put',
            data: contactTypeAssociation,
        });
    }
    patchCompanyContactsByParentIdTypeAssociationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/contacts/${parentId}/typeAssociations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsByParentIdTypeAssociationsCount(parentId, params = {}) {
        return this.request({
            path: `/company/contacts/${parentId}/typeAssociations/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsCount(params = {}) {
        return this.request({
            path: `/company/contacts/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsDefault(companyId, params = {}) {
        return this.request({
            path: `/company/contacts/default`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsDepartments(params = {}) {
        return this.request({
            path: `/company/contacts/departments`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsDepartments(contactDepartment) {
        return this.request({
            path: `/company/contacts/departments`,
            method: 'post',
            data: contactDepartment,
        });
    }
    getCompanyContactsDepartmentsById(id, params = {}) {
        return this.request({
            path: `/company/contacts/departments/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsDepartmentsById(id) {
        return this.request({
            path: `/company/contacts/departments/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsDepartmentsById(id, contactDepartment) {
        return this.request({
            path: `/company/contacts/departments/${id}`,
            method: 'put',
            data: contactDepartment,
        });
    }
    patchCompanyContactsDepartmentsById(id, patchOperations) {
        return this.request({
            path: `/company/contacts/departments/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsDepartmentsByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/contacts/departments/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsDepartmentsByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/contacts/departments/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsDepartmentsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/contacts/departments/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsDepartmentsCount(params = {}) {
        return this.request({
            path: `/company/contacts/departments/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsDepartmentsInfo(params = {}) {
        return this.request({
            path: `/company/contacts/departments/info`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsDepartmentsInfoCount(params = {}) {
        return this.request({
            path: `/company/contacts/departments/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsRelationships(params = {}) {
        return this.request({
            path: `/company/contacts/relationships`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsRelationships(contactRelationship) {
        return this.request({
            path: `/company/contacts/relationships`,
            method: 'post',
            data: contactRelationship,
        });
    }
    getCompanyContactsRelationshipsById(id, params = {}) {
        return this.request({
            path: `/company/contacts/relationships/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsRelationshipsById(id) {
        return this.request({
            path: `/company/contacts/relationships/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsRelationshipsById(id, contactRelationship) {
        return this.request({
            path: `/company/contacts/relationships/${id}`,
            method: 'put',
            data: contactRelationship,
        });
    }
    patchCompanyContactsRelationshipsById(id, patchOperations) {
        return this.request({
            path: `/company/contacts/relationships/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsRelationshipsCount(params = {}) {
        return this.request({
            path: `/company/contacts/relationships/count`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsRequestPassword(request) {
        return this.request({
            path: `/company/contacts/requestPassword`,
            method: 'post',
            data: request,
        });
    }
    getCompanyContactsTypes(params = {}) {
        return this.request({
            path: `/company/contacts/types`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsTypes(contactType) {
        return this.request({
            path: `/company/contacts/types`,
            method: 'post',
            data: contactType,
        });
    }
    getCompanyContactsTypesById(id, params = {}) {
        return this.request({
            path: `/company/contacts/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactsTypesById(id) {
        return this.request({
            path: `/company/contacts/types/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactsTypesById(id, contactType) {
        return this.request({
            path: `/company/contacts/types/${id}`,
            method: 'put',
            data: contactType,
        });
    }
    patchCompanyContactsTypesById(id, patchOperations) {
        return this.request({
            path: `/company/contacts/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactsTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/contacts/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsTypesCount(params = {}) {
        return this.request({
            path: `/company/contacts/types/count`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsTypesCountInfo(params = {}) {
        return this.request({
            path: `/company/contacts/types/count/info`,
            method: 'get',
            params,
        });
    }
    getCompanyContactsTypesInfo(params = {}) {
        return this.request({
            path: `/company/contacts/types/info`,
            method: 'get',
            params,
        });
    }
    postCompanyContactsValidatePortalCredentials(request) {
        return this.request({
            path: `/company/contacts/validatePortalCredentials`,
            method: 'post',
            data: request,
        });
    }
    getCompanyContactTypeAssociations(params = {}) {
        return this.request({
            path: `/company/contactTypeAssociations`,
            method: 'get',
            params,
        });
    }
    postCompanyContactTypeAssociations(contactTypeAssociation) {
        return this.request({
            path: `/company/contactTypeAssociations`,
            method: 'post',
            data: contactTypeAssociation,
        });
    }
    getCompanyContactTypeAssociationsById(id, params = {}) {
        return this.request({
            path: `/company/contactTypeAssociations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyContactTypeAssociationsById(id) {
        return this.request({
            path: `/company/contactTypeAssociations/${id}`,
            method: 'delete',
        });
    }
    putCompanyContactTypeAssociationsById(id, contactTypeAssociation) {
        return this.request({
            path: `/company/contactTypeAssociations/${id}`,
            method: 'put',
            data: contactTypeAssociation,
        });
    }
    patchCompanyContactTypeAssociationsById(id, patchOperations) {
        return this.request({
            path: `/company/contactTypeAssociations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyContactTypeAssociationsCount(params = {}) {
        return this.request({
            path: `/company/contactTypeAssociations/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCountries(params = {}) {
        return this.request({
            path: `/company/countries`,
            method: 'get',
            params,
        });
    }
    postCompanyCountries(country) {
        return this.request({
            path: `/company/countries`,
            method: 'post',
            data: country,
        });
    }
    getCompanyCountriesById(id, params = {}) {
        return this.request({
            path: `/company/countries/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyCountriesById(id) {
        return this.request({
            path: `/company/countries/${id}`,
            method: 'delete',
        });
    }
    putCompanyCountriesById(id, country) {
        return this.request({
            path: `/company/countries/${id}`,
            method: 'put',
            data: country,
        });
    }
    patchCompanyCountriesById(id, patchOperations) {
        return this.request({
            path: `/company/countries/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyCountriesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/countries/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyCountriesCount(params = {}) {
        return this.request({
            path: `/company/countries/count`,
            method: 'get',
            params,
        });
    }
    getCompanyCountriesInfo(params = {}) {
        return this.request({
            path: `/company/countries/info`,
            method: 'get',
            params,
        });
    }
    getCompanyCountriesInfoCount(params = {}) {
        return this.request({
            path: `/company/countries/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyEntityTypes(params = {}) {
        return this.request({
            path: `/company/entityTypes`,
            method: 'get',
            params,
        });
    }
    getCompanyEntityTypesById(id, params = {}) {
        return this.request({
            path: `/company/entityTypes/${id}`,
            method: 'get',
            params,
        });
    }
    getCompanyEntitytypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/entitytypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyEntityTypesCount(params = {}) {
        return this.request({
            path: `/company/entityTypes/count`,
            method: 'get',
            params,
        });
    }
    getCompanyEntitytypesInfo(params = {}) {
        return this.request({
            path: `/company/entitytypes/info`,
            method: 'get',
            params,
        });
    }
    getCompanyEntityTypesInfoCount(params = {}) {
        return this.request({
            path: `/company/entityTypes/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyExpenseTypesInfoCount(params = {}) {
        return this.request({
            path: `/company/expenseTypes/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrations(params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations`,
            method: 'get',
            params,
        });
    }
    postCompanyManagedDevicesIntegrations(managedDevicesIntegration) {
        return this.request({
            path: `/company/managedDevicesIntegrations`,
            method: 'post',
            data: managedDevicesIntegration,
        });
    }
    getCompanyManagedDevicesIntegrationsById(id, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyManagedDevicesIntegrationsById(id) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${id}`,
            method: 'delete',
        });
    }
    putCompanyManagedDevicesIntegrationsById(id, managedDevicesIntegration) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${id}`,
            method: 'put',
            data: managedDevicesIntegration,
        });
    }
    patchCompanyManagedDevicesIntegrationsById(id, patchOperations) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyManagedDevicesIntegrationsByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdCrossReferences(parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/crossReferences`,
            method: 'get',
            params,
        });
    }
    postCompanyManagedDevicesIntegrationsByParentIdCrossReferences(parentId, crossReference) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/crossReferences`,
            method: 'post',
            data: crossReference,
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById(id, parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/crossReferences/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById(id, parentId, crossReference) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/crossReferences/${id}`,
            method: 'put',
            data: crossReference,
        });
    }
    patchCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/crossReferences/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById(id, parentId) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/crossReferences/${id}`,
            method: 'delete',
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdCrossReferencesCount(parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/crossReferences/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdLogins(parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/logins`,
            method: 'get',
            params,
        });
    }
    postCompanyManagedDevicesIntegrationsByParentIdLogins(parentId, login) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/logins`,
            method: 'post',
            data: login,
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdLoginsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/logins/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyManagedDevicesIntegrationsByParentIdLoginsById(id, parentId, login) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/logins/${id}`,
            method: 'put',
            data: login,
        });
    }
    patchCompanyManagedDevicesIntegrationsByParentIdLoginsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/logins/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteCompanyManagedDevicesIntegrationsByParentIdLoginsById(id, parentId) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/logins/${id}`,
            method: 'delete',
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdLoginsCount(parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/logins/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdNotifications(parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/notifications`,
            method: 'get',
            params,
        });
    }
    postCompanyManagedDevicesIntegrationsByParentIdNotifications(parentId, notification) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/notifications`,
            method: 'post',
            data: notification,
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdNotificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/notifications/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyManagedDevicesIntegrationsByParentIdNotificationsById(id, parentId, notification) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/notifications/${id}`,
            method: 'put',
            data: notification,
        });
    }
    patchCompanyManagedDevicesIntegrationsByParentIdNotificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/notifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteCompanyManagedDevicesIntegrationsByParentIdNotificationsById(id, parentId) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/notifications/${id}`,
            method: 'delete',
        });
    }
    getCompanyManagedDevicesIntegrationsByParentIdNotificationsCount(parentId, params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/${parentId}/notifications/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsCount(params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsInfo(params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/info`,
            method: 'get',
            params,
        });
    }
    getCompanyManagedDevicesIntegrationsInfoCount(params = {}) {
        return this.request({
            path: `/company/managedDevicesIntegrations/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagement(params = {}) {
        return this.request({
            path: `/company/management`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementById(id, params = {}) {
        return this.request({
            path: `/company/management/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyManagementById(id, management) {
        return this.request({
            path: `/company/management/${id}`,
            method: 'put',
            data: management,
        });
    }
    patchCompanyManagementById(id, patchOperations) {
        return this.request({
            path: `/company/management/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postCompanyManagementByIdExecuteManagedItSync(id) {
        return this.request({
            path: `/company/management/${id}/executeManagedItSync`,
            method: 'post',
        });
    }
    getCompanyManagementByIdLogDownload(id, filePath, params = {}) {
        return this.request({
            path: `/company/management/${id}/log/download`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementByIdLogs(id, params = {}) {
        return this.request({
            path: `/company/management/${id}/logs`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementByParentIdManagementReportNotifications(parentId, params = {}) {
        return this.request({
            path: `/company/management/${parentId}/managementReportNotifications`,
            method: 'get',
            params,
        });
    }
    postCompanyManagementByParentIdManagementReportNotifications(parentId, managementReportNotification) {
        return this.request({
            path: `/company/management/${parentId}/managementReportNotifications`,
            method: 'post',
            data: managementReportNotification,
        });
    }
    getCompanyManagementByParentIdManagementReportNotificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/management/${parentId}/managementReportNotifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyManagementByParentIdManagementReportNotificationsById(id, parentId) {
        return this.request({
            path: `/company/management/${parentId}/managementReportNotifications/${id}`,
            method: 'delete',
        });
    }
    putCompanyManagementByParentIdManagementReportNotificationsById(id, parentId, managementReportNotification) {
        return this.request({
            path: `/company/management/${parentId}/managementReportNotifications/${id}`,
            method: 'put',
            data: managementReportNotification,
        });
    }
    patchCompanyManagementByParentIdManagementReportNotificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/management/${parentId}/managementReportNotifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyManagementByParentIdManagementReportNotificationsCount(parentId, params = {}) {
        return this.request({
            path: `/company/management/${parentId}/managementReportNotifications/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementCount(params = {}) {
        return this.request({
            path: `/company/management/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementBackups(params = {}) {
        return this.request({
            path: `/company/managementBackups`,
            method: 'get',
            params,
        });
    }
    postCompanyManagementBackups(managementBackup) {
        return this.request({
            path: `/company/managementBackups`,
            method: 'post',
            data: managementBackup,
        });
    }
    getCompanyManagementBackupsById(id, params = {}) {
        return this.request({
            path: `/company/managementBackups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyManagementBackupsById(id) {
        return this.request({
            path: `/company/managementBackups/${id}`,
            method: 'delete',
        });
    }
    putCompanyManagementBackupsById(id, managementBackup) {
        return this.request({
            path: `/company/managementBackups/${id}`,
            method: 'put',
            data: managementBackup,
        });
    }
    patchCompanyManagementBackupsById(id, patchOperations) {
        return this.request({
            path: `/company/managementBackups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyManagementBackupsCount(params = {}) {
        return this.request({
            path: `/company/managementBackups/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementItSolutions(params = {}) {
        return this.request({
            path: `/company/managementItSolutions`,
            method: 'get',
            params,
        });
    }
    postCompanyManagementItSolutions(managementItSolution) {
        return this.request({
            path: `/company/managementItSolutions`,
            method: 'post',
            data: managementItSolution,
        });
    }
    getCompanyManagementItSolutionsById(id, params = {}) {
        return this.request({
            path: `/company/managementItSolutions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyManagementItSolutionsById(id) {
        return this.request({
            path: `/company/managementItSolutions/${id}`,
            method: 'delete',
        });
    }
    putCompanyManagementItSolutionsById(id, managementItSolution) {
        return this.request({
            path: `/company/managementItSolutions/${id}`,
            method: 'put',
            data: managementItSolution,
        });
    }
    patchCompanyManagementItSolutionsById(id, patchOperations) {
        return this.request({
            path: `/company/managementItSolutions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyManagementItSolutionsByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/managementItSolutions/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementItSolutionsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/managementItSolutions/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementItSolutionsByParentIdManagementProducts(parentId, params = {}) {
        return this.request({
            path: `/company/managementItSolutions/${parentId}/managementProducts`,
            method: 'get',
            params,
        });
    }
    postCompanyManagementItSolutionsByParentIdManagementProducts(parentId, managementProduct) {
        return this.request({
            path: `/company/managementItSolutions/${parentId}/managementProducts`,
            method: 'post',
            data: managementProduct,
        });
    }
    getCompanyManagementItSolutionsByParentIdManagementProductsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/managementItSolutions/${parentId}/managementProducts/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyManagementItSolutionsByParentIdManagementProductsById(id, parentId, managementProduct) {
        return this.request({
            path: `/company/managementItSolutions/${parentId}/managementProducts/${id}`,
            method: 'put',
            data: managementProduct,
        });
    }
    patchCompanyManagementItSolutionsByParentIdManagementProductsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/managementItSolutions/${parentId}/managementProducts/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteCompanyManagementItSolutionsByParentIdManagementProductsById(id, parentId) {
        return this.request({
            path: `/company/managementItSolutions/${parentId}/managementProducts/${id}`,
            method: 'delete',
        });
    }
    getCompanyManagementItSolutionsByParentIdManagementProductsCount(parentId, params = {}) {
        return this.request({
            path: `/company/managementItSolutions/${parentId}/managementProducts/count`,
            method: 'get',
            params,
        });
    }
    getCompanyManagementItSolutionsCount(params = {}) {
        return this.request({
            path: `/company/managementItSolutions/count`,
            method: 'get',
            params,
        });
    }
    getCompanyMarketDescriptions(params = {}) {
        return this.request({
            path: `/company/marketDescriptions`,
            method: 'get',
            params,
        });
    }
    postCompanyMarketDescriptions(marketDescription) {
        return this.request({
            path: `/company/marketDescriptions`,
            method: 'post',
            data: marketDescription,
        });
    }
    getCompanyMarketDescriptionsById(id, params = {}) {
        return this.request({
            path: `/company/marketDescriptions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyMarketDescriptionsById(id) {
        return this.request({
            path: `/company/marketDescriptions/${id}`,
            method: 'delete',
        });
    }
    putCompanyMarketDescriptionsById(id, marketDescription) {
        return this.request({
            path: `/company/marketDescriptions/${id}`,
            method: 'put',
            data: marketDescription,
        });
    }
    patchCompanyMarketDescriptionsById(id, patchOperations) {
        return this.request({
            path: `/company/marketDescriptions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyMarketDescriptionsByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/marketDescriptions/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyMarketDescriptionsByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/marketDescriptions/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyMarketDescriptionsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/marketDescriptions/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyMarketDescriptionsCount(params = {}) {
        return this.request({
            path: `/company/marketDescriptions/count`,
            method: 'get',
            params,
        });
    }
    getCompanyMarketDescriptionsInfo(params = {}) {
        return this.request({
            path: `/company/marketDescriptions/info`,
            method: 'get',
            params,
        });
    }
    getCompanyMarketDescriptionsInfoCount(params = {}) {
        return this.request({
            path: `/company/marketDescriptions/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyNoteTypes(params = {}) {
        return this.request({
            path: `/company/noteTypes`,
            method: 'get',
            params,
        });
    }
    postCompanyNoteTypes(noteType) {
        return this.request({
            path: `/company/noteTypes`,
            method: 'post',
            data: noteType,
        });
    }
    getCompanyNoteTypesById(id, params = {}) {
        return this.request({
            path: `/company/noteTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyNoteTypesById(id) {
        return this.request({
            path: `/company/noteTypes/${id}`,
            method: 'delete',
        });
    }
    putCompanyNoteTypesById(id, noteType) {
        return this.request({
            path: `/company/noteTypes/${id}`,
            method: 'put',
            data: noteType,
        });
    }
    patchCompanyNoteTypesById(id, patchOperations) {
        return this.request({
            path: `/company/noteTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyNoteTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/noteTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyNoteTypesCount(params = {}) {
        return this.request({
            path: `/company/noteTypes/count`,
            method: 'get',
            params,
        });
    }
    getCompanyNoteTypesCountInfo(params = {}) {
        return this.request({
            path: `/company/noteTypes/count/info`,
            method: 'get',
            params,
        });
    }
    getCompanyNoteTypesInfo(params = {}) {
        return this.request({
            path: `/company/noteTypes/info`,
            method: 'get',
            params,
        });
    }
    getCompanyOwnershipTypes(params = {}) {
        return this.request({
            path: `/company/ownershipTypes`,
            method: 'get',
            params,
        });
    }
    postCompanyOwnershipTypes(ownershipType) {
        return this.request({
            path: `/company/ownershipTypes`,
            method: 'post',
            data: ownershipType,
        });
    }
    getCompanyOwnershipTypesById(id, params = {}) {
        return this.request({
            path: `/company/ownershipTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyOwnershipTypesById(id) {
        return this.request({
            path: `/company/ownershipTypes/${id}`,
            method: 'delete',
        });
    }
    putCompanyOwnershipTypesById(id, ownershipType) {
        return this.request({
            path: `/company/ownershipTypes/${id}`,
            method: 'put',
            data: ownershipType,
        });
    }
    patchCompanyOwnershipTypesById(id, patchOperations) {
        return this.request({
            path: `/company/ownershipTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyOwnershipTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/ownershipTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyOwnershipTypesCount(params = {}) {
        return this.request({
            path: `/company/ownershipTypes/count`,
            method: 'get',
            params,
        });
    }
    getCompanyOwnershipTypesInfo(params = {}) {
        return this.request({
            path: `/company/ownershipTypes/info`,
            method: 'get',
            params,
        });
    }
    getCompanyOwnershipTypesInfoCount(params = {}) {
        return this.request({
            path: `/company/ownershipTypes/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyPaymentTypesInfoCount(params = {}) {
        return this.request({
            path: `/company/paymentTypes/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurations(params = {}) {
        return this.request({
            path: `/company/portalConfigurations`,
            method: 'get',
            params,
        });
    }
    postCompanyPortalConfigurations(portalConfiguration) {
        return this.request({
            path: `/company/portalConfigurations`,
            method: 'post',
            data: portalConfiguration,
        });
    }
    getCompanyPortalConfigurationsById(id, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyPortalConfigurationsById(id) {
        return this.request({
            path: `/company/portalConfigurations/${id}`,
            method: 'delete',
        });
    }
    putCompanyPortalConfigurationsById(id, portalConfiguration) {
        return this.request({
            path: `/company/portalConfigurations/${id}`,
            method: 'put',
            data: portalConfiguration,
        });
    }
    patchCompanyPortalConfigurationsById(id, patchOperations) {
        return this.request({
            path: `/company/portalConfigurations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalConfigurationsByParentIdInvoiceSetups(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/invoiceSetups`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsByParentIdInvoiceSetupsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/invoiceSetups/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalConfigurationsByParentIdInvoiceSetupsById(id, parentId, portalConfigurationInvoiceSetup) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/invoiceSetups/${id}`,
            method: 'put',
            data: portalConfigurationInvoiceSetup,
        });
    }
    patchCompanyPortalConfigurationsByParentIdInvoiceSetupsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/invoiceSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postCompanyPortalConfigurationsByParentIdInvoiceSetupsByIdTestTransaction(id, parentId, portalConfigurationInvoiceSetup) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/invoiceSetups/${id}/testTransaction`,
            method: 'post',
            data: portalConfigurationInvoiceSetup,
        });
    }
    getCompanyPortalConfigurationsByParentIdInvoiceSetupsCount(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/invoiceSetups/count`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsByParentIdOpportunitySetups(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/opportunitySetups`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalConfigurationsByParentIdOpportunitySetups(parentId, opportunitySetup) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/opportunitySetups`,
            method: 'put',
            data: opportunitySetup,
        });
    }
    patchCompanyPortalConfigurationsByParentIdOpportunitySetups(parentId, patchOperations) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/opportunitySetups`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalConfigurationsByParentIdOpportunitySetupsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/opportunitySetups/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalConfigurationsByParentIdOpportunitySetupsById(id, parentId, opportunitySetup) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/opportunitySetups/${id}`,
            method: 'put',
            data: opportunitySetup,
        });
    }
    patchCompanyPortalConfigurationsByParentIdOpportunitySetupsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/opportunitySetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalConfigurationsByParentIdPasswordEmailSetups(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/passwordEmailSetups`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/passwordEmailSetups/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById(id, parentId, passwordEmailSetup) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/passwordEmailSetups/${id}`,
            method: 'put',
            data: passwordEmailSetup,
        });
    }
    patchCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/passwordEmailSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalConfigurationsByParentIdProjectSetups(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/projectSetups`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsByParentIdProjectSetupsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/projectSetups/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalConfigurationsByParentIdProjectSetupsById(id, parentId, portalConfigurationProjectSetup) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/projectSetups/${id}`,
            method: 'put',
            data: portalConfigurationProjectSetup,
        });
    }
    patchCompanyPortalConfigurationsByParentIdProjectSetupsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/projectSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalConfigurationsByParentIdProjectSetupsCount(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/projectSetups/count`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsByParentIdServiceSetups(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/serviceSetups`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsByParentIdServiceSetupsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/serviceSetups/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalConfigurationsByParentIdServiceSetupsById(id, parentId, portalConfigurationServiceSetup) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/serviceSetups/${id}`,
            method: 'put',
            data: portalConfigurationServiceSetup,
        });
    }
    patchCompanyPortalConfigurationsByParentIdServiceSetupsById(id, parentId, patchOperations) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/serviceSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalConfigurationsByParentIdServiceSetupsCount(parentId, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/${parentId}/serviceSetups/count`,
            method: 'get',
            params,
        });
    }
    postCompanyPortalConfigurationsCopy(copy) {
        return this.request({
            path: `/company/portalConfigurations/copy`,
            method: 'post',
            data: copy,
        });
    }
    getCompanyPortalConfigurationsCount(params = {}) {
        return this.request({
            path: `/company/portalConfigurations/count`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsInvoiceSetupPaymentProcessors(params = {}) {
        return this.request({
            path: `/company/portalConfigurations/invoiceSetup/paymentProcessors`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsInvoiceSetupPaymentProcessorsById(id, params = {}) {
        return this.request({
            path: `/company/portalConfigurations/invoiceSetup/paymentProcessors/${id}`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalConfigurationsInvoiceSetupPaymentProcessorsCount(params = {}) {
        return this.request({
            path: `/company/portalConfigurations/invoiceSetup/paymentProcessors/count`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalSecurityLevels(params = {}) {
        return this.request({
            path: `/company/portalSecurityLevels`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalSecurityLevelsById(id, params = {}) {
        return this.request({
            path: `/company/portalSecurityLevels/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalSecurityLevelsById(id, _portalSecurityLevel) {
        return this.request({
            path: `/company/portalSecurityLevels/${id}`,
            method: 'put',
            data: _portalSecurityLevel,
        });
    }
    patchCompanyPortalSecurityLevelsById(id, patchOperations) {
        return this.request({
            path: `/company/portalSecurityLevels/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalSecurityLevelsCount(params = {}) {
        return this.request({
            path: `/company/portalSecurityLevels/count`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalSecuritySettings(params = {}) {
        return this.request({
            path: `/company/portalSecuritySettings`,
            method: 'get',
            params,
        });
    }
    getCompanyPortalSecuritySettingsById(id, params = {}) {
        return this.request({
            path: `/company/portalSecuritySettings/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyPortalSecuritySettingsById(id, portalSecurity) {
        return this.request({
            path: `/company/portalSecuritySettings/${id}`,
            method: 'put',
            data: portalSecurity,
        });
    }
    patchCompanyPortalSecuritySettingsById(id, patchOperations) {
        return this.request({
            path: `/company/portalSecuritySettings/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyPortalSecuritySettingsCount(params = {}) {
        return this.request({
            path: `/company/portalSecuritySettings/count`,
            method: 'get',
            params,
        });
    }
    getCompanyStates(params = {}) {
        return this.request({
            path: `/company/states`,
            method: 'get',
            params,
        });
    }
    postCompanyStates(state) {
        return this.request({
            path: `/company/states`,
            method: 'post',
            data: state,
        });
    }
    getCompanyStatesById(id, params = {}) {
        return this.request({
            path: `/company/states/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyStatesById(id, state) {
        return this.request({
            path: `/company/states/${id}`,
            method: 'put',
            data: state,
        });
    }
    patchCompanyStatesById(id, patchOperations) {
        return this.request({
            path: `/company/states/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteCompanyStatesById(id) {
        return this.request({
            path: `/company/states/${id}`,
            method: 'delete',
        });
    }
    getCompanyStatesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/states/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyStatesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/states/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyStatesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/states/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyStatesCount(params = {}) {
        return this.request({
            path: `/company/states/count`,
            method: 'get',
            params,
        });
    }
    getCompanyStatesInfo(params = {}) {
        return this.request({
            path: `/company/states/info`,
            method: 'get',
            params,
        });
    }
    getCompanyStatesInfoCount(params = {}) {
        return this.request({
            path: `/company/states/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyTeamRoles(params = {}) {
        return this.request({
            path: `/company/teamRoles`,
            method: 'get',
            params,
        });
    }
    postCompanyTeamRoles(teamRole) {
        return this.request({
            path: `/company/teamRoles`,
            method: 'post',
            data: teamRole,
        });
    }
    getCompanyTeamRolesById(id, params = {}) {
        return this.request({
            path: `/company/teamRoles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyTeamRolesById(id) {
        return this.request({
            path: `/company/teamRoles/${id}`,
            method: 'delete',
        });
    }
    putCompanyTeamRolesById(id, teamRole) {
        return this.request({
            path: `/company/teamRoles/${id}`,
            method: 'put',
            data: teamRole,
        });
    }
    patchCompanyTeamRolesById(id, patchOperations) {
        return this.request({
            path: `/company/teamRoles/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyTeamRolesByIdInfo(id, params = {}) {
        return this.request({
            path: `/company/teamRoles/${id}/info`,
            method: 'get',
            params,
        });
    }
    getCompanyTeamRolesByIdUsages(id, params = {}) {
        return this.request({
            path: `/company/teamRoles/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getCompanyTeamRolesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/company/teamRoles/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getCompanyTeamRolesCount(params = {}) {
        return this.request({
            path: `/company/teamRoles/count`,
            method: 'get',
            params,
        });
    }
    getCompanyTeamRolesInfo(params = {}) {
        return this.request({
            path: `/company/teamRoles/info`,
            method: 'get',
            params,
        });
    }
    getCompanyTeamRolesInfoCount(params = {}) {
        return this.request({
            path: `/company/teamRoles/info/count`,
            method: 'get',
            params,
        });
    }
    getCompanyTracks(params = {}) {
        return this.request({
            path: `/company/tracks`,
            method: 'get',
            params,
        });
    }
    postCompanyTracks(track) {
        return this.request({
            path: `/company/tracks`,
            method: 'post',
            data: track,
        });
    }
    getCompanyTracksById(id, params = {}) {
        return this.request({
            path: `/company/tracks/${id}`,
            method: 'get',
            params,
        });
    }
    deleteCompanyTracksById(id) {
        return this.request({
            path: `/company/tracks/${id}`,
            method: 'delete',
        });
    }
    putCompanyTracksById(id, track) {
        return this.request({
            path: `/company/tracks/${id}`,
            method: 'put',
            data: track,
        });
    }
    patchCompanyTracksById(id, patchOperations) {
        return this.request({
            path: `/company/tracks/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getCompanyTracksByParentIdActions(parentId, params = {}) {
        return this.request({
            path: `/company/tracks/${parentId}/actions`,
            method: 'get',
            params,
        });
    }
    postCompanyTracksByParentIdActions(parentId, trackAction) {
        return this.request({
            path: `/company/tracks/${parentId}/actions`,
            method: 'post',
            data: trackAction,
        });
    }
    getCompanyTracksByParentIdActionsById(id, parentId, params = {}) {
        return this.request({
            path: `/company/tracks/${parentId}/actions/${id}`,
            method: 'get',
            params,
        });
    }
    putCompanyTracksByParentIdActionsById(id, parentId, trackAction) {
        return this.request({
            path: `/company/tracks/${parentId}/actions/${id}`,
            method: 'put',
            data: trackAction,
        });
    }
    patchCompanyTracksByParentIdActionsById(id, parentId) {
        return this.request({
            path: `/company/tracks/${parentId}/actions/${id}`,
            method: 'patch',
        });
    }
    deleteCompanyTracksByParentIdActionsById(id, parentId) {
        return this.request({
            path: `/company/tracks/${parentId}/actions/${id}`,
            method: 'delete',
        });
    }
    getCompanyTracksByParentIdActionsCount(parentId, params = {}) {
        return this.request({
            path: `/company/tracks/${parentId}/actions/count`,
            method: 'get',
            params,
        });
    }
    getCompanyTracksCount(params = {}) {
        return this.request({
            path: `/company/tracks/count`,
            method: 'get',
            params,
        });
    }
}
exports.CompanyAPI = CompanyAPI;
//# sourceMappingURL=CompanyAPI.js.map