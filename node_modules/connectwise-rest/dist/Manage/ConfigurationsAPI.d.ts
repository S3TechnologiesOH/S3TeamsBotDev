import Manage from '../Manage';
import { components } from '../ManageTypes';
import { CommonParameters, CWMOptions } from '../ManageAPI';
declare type schemas = components['schemas'];
/** {@link ConfigurationTypeInfo} */
export declare type ConfigurationTypeInfo = schemas['ConfigurationTypeInfo'];
/** {@link ConfigurationTypeQuestionInfo} */
export declare type ConfigurationTypeQuestionInfo = schemas['ConfigurationTypeQuestionInfo'];
/** {@link ConfigurationTypeQuestionValueInfo} */
export declare type ConfigurationTypeQuestionValueInfo = schemas['ConfigurationTypeQuestionValueInfo'];
/** {@link Count} */
export declare type Count = schemas['Count'];
/**
 * @module ConfigurationsAPI
 */
/**
 * Configurations module
 * @public
 */
export declare class ConfigurationsAPI extends Manage {
    constructor(props: CWMOptions);
    getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdInfo(grandparentId: number, parentId: number, id: number, params?: CommonParameters): Promise<ConfigurationTypeQuestionInfo>;
    getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesInfo(grandparentId: number, parentId: number, params?: CommonParameters): Promise<Array<ConfigurationTypeQuestionValueInfo>>;
    getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesInfoCount(grandparentId: number, parentId: number, params?: CommonParameters): Promise<Count>;
    getConfigurationsTypesByParentIdQuestionsByIdInfo(id: number, parentId: number, params?: CommonParameters): Promise<ConfigurationTypeQuestionInfo>;
    getConfigurationsTypesByParentIdQuestionsInfo(parentId: number, params?: CommonParameters): Promise<Array<ConfigurationTypeQuestionInfo>>;
    getConfigurationsTypesByParentIdQuestionsInfoCount(parentId: number, params?: CommonParameters): Promise<Count>;
    getConfigurationsTypesInfo(params?: CommonParameters): Promise<Array<ConfigurationTypeInfo>>;
    getConfigurationsTypesInfoCount(params?: CommonParameters): Promise<Count>;
}
export {};
//# sourceMappingURL=ConfigurationsAPI.d.ts.map