"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpenseAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module ExpenseAPI
 */
/**
 * Expense module
 * @public
 */
class ExpenseAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getExpenseClassifications(params = {}) {
        return this.request({
            path: `/expense/classifications`,
            method: 'get',
            params,
        });
    }
    getExpenseClassificationsById(id, params = {}) {
        return this.request({
            path: `/expense/classifications/${id}`,
            method: 'get',
            params,
        });
    }
    getExpenseClassificationsCount(params = {}) {
        return this.request({
            path: `/expense/classifications/count`,
            method: 'get',
            params,
        });
    }
    getExpenseEntries(params = {}) {
        return this.request({
            path: `/expense/entries`,
            method: 'get',
            params,
        });
    }
    postExpenseEntries(expenseEntry) {
        return this.request({
            path: `/expense/entries`,
            method: 'post',
            data: expenseEntry,
        });
    }
    getExpenseEntriesById(id, params = {}) {
        return this.request({
            path: `/expense/entries/${id}`,
            method: 'get',
            params,
        });
    }
    deleteExpenseEntriesById(id) {
        return this.request({
            path: `/expense/entries/${id}`,
            method: 'delete',
        });
    }
    putExpenseEntriesById(id, expenseEntry) {
        return this.request({
            path: `/expense/entries/${id}`,
            method: 'put',
            data: expenseEntry,
        });
    }
    patchExpenseEntriesById(id, patchOperations) {
        return this.request({
            path: `/expense/entries/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getExpenseEntriesByParentIdAudits(parentId, params = {}) {
        return this.request({
            path: `/expense/entries/${parentId}/audits`,
            method: 'get',
            params,
        });
    }
    getExpenseEntriesByParentIdAuditsById(id, parentId, params = {}) {
        return this.request({
            path: `/expense/entries/${parentId}/audits/${id}`,
            method: 'get',
            params,
        });
    }
    getExpenseEntriesByParentIdAuditsCount(parentId, params = {}) {
        return this.request({
            path: `/expense/entries/${parentId}/audits/count`,
            method: 'get',
            params,
        });
    }
    getExpenseEntriesCount(params = {}) {
        return this.request({
            path: `/expense/entries/count`,
            method: 'get',
            params,
        });
    }
    getExpenseInfoTaxTypes(params = {}) {
        return this.request({
            path: `/expense/info/taxTypes`,
            method: 'get',
            params,
        });
    }
    getExpenseInfoTaxTypesById(id, params = {}) {
        return this.request({
            path: `/expense/info/taxTypes/${id}`,
            method: 'get',
            params,
        });
    }
    getExpenseInfoTaxTypesCount(params = {}) {
        return this.request({
            path: `/expense/info/taxTypes/count`,
            method: 'get',
            params,
        });
    }
    getExpensePaymentTypes(params = {}) {
        return this.request({
            path: `/expense/paymentTypes`,
            method: 'get',
            params,
        });
    }
    postExpensePaymentTypes(paymentType) {
        return this.request({
            path: `/expense/paymentTypes`,
            method: 'post',
            data: paymentType,
        });
    }
    getExpensePaymentTypesById(id, params = {}) {
        return this.request({
            path: `/expense/paymentTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteExpensePaymentTypesById(id) {
        return this.request({
            path: `/expense/paymentTypes/${id}`,
            method: 'delete',
        });
    }
    putExpensePaymentTypesById(id, paymentType) {
        return this.request({
            path: `/expense/paymentTypes/${id}`,
            method: 'put',
            data: paymentType,
        });
    }
    patchExpensePaymentTypesById(id, patchOperations) {
        return this.request({
            path: `/expense/paymentTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getExpensePaymentTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/expense/paymentTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getExpensePaymentTypesCount(params = {}) {
        return this.request({
            path: `/expense/paymentTypes/count`,
            method: 'get',
            params,
        });
    }
    getExpensePaymentTypesInfo(params = {}) {
        return this.request({
            path: `/expense/paymentTypes/info`,
            method: 'get',
            params,
        });
    }
    getExpenseReports(params = {}) {
        return this.request({
            path: `/expense/reports`,
            method: 'get',
            params,
        });
    }
    getExpenseReportsById(id, params = {}) {
        return this.request({
            path: `/expense/reports/${id}`,
            method: 'get',
            params,
        });
    }
    postExpenseReportsByIdReverse(id) {
        return this.request({
            path: `/expense/reports/${id}/reverse`,
            method: 'post',
        });
    }
    postExpenseReportsByIdSubmit(id) {
        return this.request({
            path: `/expense/reports/${id}/submit`,
            method: 'post',
        });
    }
    getExpenseReportsByParentIdAudits(parentId, params = {}) {
        return this.request({
            path: `/expense/reports/${parentId}/audits`,
            method: 'get',
            params,
        });
    }
    getExpenseReportsByParentIdAuditsById(id, parentId, params = {}) {
        return this.request({
            path: `/expense/reports/${parentId}/audits/${id}`,
            method: 'get',
            params,
        });
    }
    getExpenseReportsByParentIdAuditsCount(parentId, params = {}) {
        return this.request({
            path: `/expense/reports/${parentId}/audits/count`,
            method: 'get',
            params,
        });
    }
    getExpenseReportsCount(params = {}) {
        return this.request({
            path: `/expense/reports/count`,
            method: 'get',
            params,
        });
    }
    getExpenseTypes(params = {}) {
        return this.request({
            path: `/expense/types`,
            method: 'get',
            params,
        });
    }
    postExpenseTypes(expenseType) {
        return this.request({
            path: `/expense/types`,
            method: 'post',
            data: expenseType,
        });
    }
    getExpenseTypesById(id, params = {}) {
        return this.request({
            path: `/expense/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteExpenseTypesById(id) {
        return this.request({
            path: `/expense/types/${id}`,
            method: 'delete',
        });
    }
    putExpenseTypesById(id, expenseType) {
        return this.request({
            path: `/expense/types/${id}`,
            method: 'put',
            data: expenseType,
        });
    }
    patchExpenseTypesById(id, patchOperations) {
        return this.request({
            path: `/expense/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getExpenseTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/expense/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getExpenseTypesCount(params = {}) {
        return this.request({
            path: `/expense/types/count`,
            method: 'get',
            params,
        });
    }
    getExpenseTypesInfo(params = {}) {
        return this.request({
            path: `/expense/types/info`,
            method: 'get',
            params,
        });
    }
}
exports.ExpenseAPI = ExpenseAPI;
//# sourceMappingURL=ExpenseAPI.js.map