"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FinanceAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module FinanceAPI
 */
/**
 * Finance module
 * @public
 */
class FinanceAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getFinanceAccountingBatches(params = {}) {
        return this.request({
            path: `/finance/accounting/batches`,
            method: 'get',
            params,
        });
    }
    postFinanceAccountingBatches(accountingBatchParameters) {
        return this.request({
            path: `/finance/accounting/batches`,
            method: 'post',
            data: accountingBatchParameters,
        });
    }
    getFinanceAccountingBatchesById(id, params = {}) {
        return this.request({
            path: `/finance/accounting/batches/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAccountingBatchesById(id) {
        return this.request({
            path: `/finance/accounting/batches/${id}`,
            method: 'delete',
        });
    }
    postFinanceAccountingBatchesByIdExport(id, batchExportParameters) {
        return this.request({
            path: `/finance/accounting/batches/${id}/export`,
            method: 'post',
            data: batchExportParameters,
        });
    }
    getFinanceAccountingBatchesByParentIdEntries(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/batches/${parentId}/entries`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingBatchesByParentIdEntriesById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/batches/${parentId}/entries/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingBatchesByParentIdEntriesCount(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/batches/${parentId}/entries/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingBatchesCount(params = {}) {
        return this.request({
            path: `/finance/accounting/batches/count`,
            method: 'get',
            params,
        });
    }
    postFinanceAccountingExport(batchExportParameters) {
        return this.request({
            path: `/finance/accounting/export`,
            method: 'post',
            data: batchExportParameters,
        });
    }
    getFinanceAccountingUnpostedexpenses(params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedexpenses`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedexpensesById(id, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedexpenses/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedexpensesByParentIdTaxableLevels(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedexpenses/${parentId}/taxableLevels`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedexpensesByParentIdTaxableLevelsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedexpenses/${parentId}/taxableLevels/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedexpensesByParentIdTaxableLevelsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedexpenses/${parentId}/taxableLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedexpensesCount(params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedexpenses/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedinvoices(params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedinvoices`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedinvoicesById(id, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedinvoices/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevels(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedinvoices/${parentId}/taxableLevels`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevelsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedinvoices/${parentId}/taxableLevels/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevelsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedinvoices/${parentId}/taxableLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedinvoicesCount(params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedinvoices/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedprocurement(params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedprocurement`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedprocurementById(id, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedprocurement/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedprocurementByParentIdTaxableLevels(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedprocurement/${parentId}/taxableLevels`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedprocurementByParentIdTaxableLevelsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedprocurement/${parentId}/taxableLevels/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedprocurementByParentIdTaxableLevelsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedprocurement/${parentId}/taxableLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingUnpostedprocurementCount(params = {}) {
        return this.request({
            path: `/finance/accounting/unpostedprocurement/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingPackages(params = {}) {
        return this.request({
            path: `/finance/accountingPackages`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingPackagesById(id, params = {}) {
        return this.request({
            path: `/finance/accountingPackages/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingPackagesCount(params = {}) {
        return this.request({
            path: `/finance/accountingPackages/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingPackageSetup(params = {}) {
        return this.request({
            path: `/finance/accountingPackageSetup`,
            method: 'get',
            params,
        });
    }
    getFinanceAccountingPackageSetupById(id, params = {}) {
        return this.request({
            path: `/finance/accountingPackageSetup/${id}`,
            method: 'get',
            params,
        });
    }
    putFinanceAccountingPackageSetupById(id, accountingPackageSetup) {
        return this.request({
            path: `/finance/accountingPackageSetup/${id}`,
            method: 'put',
            data: accountingPackageSetup,
        });
    }
    patchFinanceAccountingPackageSetupById(id, patchOperations) {
        return this.request({
            path: `/finance/accountingPackageSetup/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAccountingPackageSetupCount(params = {}) {
        return this.request({
            path: `/finance/accountingPackageSetup/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreements(params = {}) {
        return this.request({
            path: `/finance/agreements`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreements(agreement) {
        return this.request({
            path: `/finance/agreements`,
            method: 'post',
            data: agreement,
        });
    }
    getFinanceAgreementsById(id, params = {}) {
        return this.request({
            path: `/finance/agreements/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsById(id) {
        return this.request({
            path: `/finance/agreements/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsById(id, agreement) {
        return this.request({
            path: `/finance/agreements/${id}`,
            method: 'put',
            data: agreement,
        });
    }
    patchFinanceAgreementsById(id, patchOperations) {
        return this.request({
            path: `/finance/agreements/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsByParentIdAdditions(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/additions`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdAdditions(parentId, addition) {
        return this.request({
            path: `/finance/agreements/${parentId}/additions`,
            method: 'post',
            data: addition,
        });
    }
    getFinanceAgreementsByParentIdAdditionsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/additions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsByParentIdAdditionsById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/additions/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsByParentIdAdditionsById(id, parentId, addition) {
        return this.request({
            path: `/finance/agreements/${parentId}/additions/${id}`,
            method: 'put',
            data: addition,
        });
    }
    patchFinanceAgreementsByParentIdAdditionsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreements/${parentId}/additions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsByParentIdAdditionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/additions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdAdjustments(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/adjustments`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdAdjustments(parentId, adjustment) {
        return this.request({
            path: `/finance/agreements/${parentId}/adjustments`,
            method: 'post',
            data: adjustment,
        });
    }
    getFinanceAgreementsByParentIdAdjustmentsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/adjustments/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsByParentIdAdjustmentsById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/adjustments/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsByParentIdAdjustmentsById(id, parentId, adjustment) {
        return this.request({
            path: `/finance/agreements/${parentId}/adjustments/${id}`,
            method: 'put',
            data: adjustment,
        });
    }
    patchFinanceAgreementsByParentIdAdjustmentsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreements/${parentId}/adjustments/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsByParentIdAdjustmentsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/adjustments/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdBoardDefaults(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/boardDefaults`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdBoardDefaults(parentId, boardDefault) {
        return this.request({
            path: `/finance/agreements/${parentId}/boardDefaults`,
            method: 'post',
            data: boardDefault,
        });
    }
    getFinanceAgreementsByParentIdBoardDefaultsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/boardDefaults/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsByParentIdBoardDefaultsById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/boardDefaults/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsByParentIdBoardDefaultsById(id, parentId, boardDefault) {
        return this.request({
            path: `/finance/agreements/${parentId}/boardDefaults/${id}`,
            method: 'put',
            data: boardDefault,
        });
    }
    patchFinanceAgreementsByParentIdBoardDefaultsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreements/${parentId}/boardDefaults/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsByParentIdBoardDefaultsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/boardDefaults/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdConfigurations(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/configurations`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdConfigurations(parentId, configuration) {
        return this.request({
            path: `/finance/agreements/${parentId}/configurations`,
            method: 'post',
            data: configuration,
        });
    }
    getFinanceAgreementsByParentIdConfigurationsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/configurations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsByParentIdConfigurationsById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/configurations/${id}`,
            method: 'delete',
        });
    }
    getFinanceAgreementsByParentIdConfigurationsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/configurations/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdSites(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/sites`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdSites(parentId, site) {
        return this.request({
            path: `/finance/agreements/${parentId}/sites`,
            method: 'post',
            data: site,
        });
    }
    getFinanceAgreementsByParentIdSitesById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/sites/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsByParentIdSitesById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/sites/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsByParentIdSitesById(id, parentId, site) {
        return this.request({
            path: `/finance/agreements/${parentId}/sites/${id}`,
            method: 'put',
            data: site,
        });
    }
    patchFinanceAgreementsByParentIdSitesById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreements/${parentId}/sites/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsByParentIdSitesCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/sites/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdWorkRoleExclusions(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/workRoleExclusions`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdWorkRoleExclusions(parentId, workRoleExclusion) {
        return this.request({
            path: `/finance/agreements/${parentId}/workRoleExclusions`,
            method: 'post',
            data: workRoleExclusion,
        });
    }
    deleteFinanceAgreementsByParentIdWorkRoleExclusionsById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/workRoleExclusions/${id}`,
            method: 'delete',
        });
    }
    getFinanceAgreementsByParentIdWorkRoleExclusionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/workRoleExclusions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdWorkroles(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/workroles`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdWorkroles(parentId, workRole) {
        return this.request({
            path: `/finance/agreements/${parentId}/workroles`,
            method: 'post',
            data: workRole,
        });
    }
    getFinanceAgreementsByParentIdWorkrolesById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/workroles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsByParentIdWorkrolesById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/workroles/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsByParentIdWorkrolesById(id, parentId, workRole) {
        return this.request({
            path: `/finance/agreements/${parentId}/workroles/${id}`,
            method: 'put',
            data: workRole,
        });
    }
    patchFinanceAgreementsByParentIdWorkrolesById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreements/${parentId}/workroles/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsByParentIdWorkrolesCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/workroles/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdWorkTypeExclusions(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/workTypeExclusions`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdWorkTypeExclusions(parentId, workTypeExclusion) {
        return this.request({
            path: `/finance/agreements/${parentId}/workTypeExclusions`,
            method: 'post',
            data: workTypeExclusion,
        });
    }
    deleteFinanceAgreementsByParentIdWorkTypeExclusionsById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/workTypeExclusions/${id}`,
            method: 'delete',
        });
    }
    getFinanceAgreementsByParentIdWorkTypeExclusionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/workTypeExclusions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsByParentIdWorktypes(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/worktypes`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsByParentIdWorktypes(parentId, workType) {
        return this.request({
            path: `/finance/agreements/${parentId}/worktypes`,
            method: 'post',
            data: workType,
        });
    }
    getFinanceAgreementsByParentIdWorktypesById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/worktypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsByParentIdWorktypesById(id, parentId) {
        return this.request({
            path: `/finance/agreements/${parentId}/worktypes/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsByParentIdWorktypesById(id, parentId, workType) {
        return this.request({
            path: `/finance/agreements/${parentId}/worktypes/${id}`,
            method: 'put',
            data: workType,
        });
    }
    patchFinanceAgreementsByParentIdWorktypesById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreements/${parentId}/worktypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsByParentIdWorktypesCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreements/${parentId}/worktypes/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsCount(params = {}) {
        return this.request({
            path: `/finance/agreements/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsTypes(params = {}) {
        return this.request({
            path: `/finance/agreements/types`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementsTypes(agreementType) {
        return this.request({
            path: `/finance/agreements/types`,
            method: 'post',
            data: agreementType,
        });
    }
    getFinanceAgreementsTypesById(id, params = {}) {
        return this.request({
            path: `/finance/agreements/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementsTypesById(id) {
        return this.request({
            path: `/finance/agreements/types/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementsTypesById(id, agreementType) {
        return this.request({
            path: `/finance/agreements/types/${id}`,
            method: 'put',
            data: agreementType,
        });
    }
    patchFinanceAgreementsTypesById(id, patchOperations) {
        return this.request({
            path: `/finance/agreements/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementsTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/agreements/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/agreements/types/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/agreements/types/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsTypesCount(params = {}) {
        return this.request({
            path: `/finance/agreements/types/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsTypesInfo(params = {}) {
        return this.request({
            path: `/finance/agreements/types/info`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementsTypesInfoCount(params = {}) {
        return this.request({
            path: `/finance/agreements/types/info/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdBoardDefaults(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/boardDefaults`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementTypesByParentIdBoardDefaults(parentId, boardDefault) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/boardDefaults`,
            method: 'post',
            data: boardDefault,
        });
    }
    getFinanceAgreementTypesByParentIdBoardDefaultsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/boardDefaults/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementTypesByParentIdBoardDefaultsById(id, parentId) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/boardDefaults/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementTypesByParentIdBoardDefaultsById(id, parentId, boardDefault) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/boardDefaults/${id}`,
            method: 'put',
            data: boardDefault,
        });
    }
    patchFinanceAgreementTypesByParentIdBoardDefaultsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/boardDefaults/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementTypesByParentIdBoardDefaultsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/boardDefaults/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdWorkRoleExclusions(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workRoleExclusions`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementTypesByParentIdWorkRoleExclusions(parentId, workRoleExclusion) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workRoleExclusions`,
            method: 'post',
            data: workRoleExclusion,
        });
    }
    getFinanceAgreementTypesByParentIdWorkRoleExclusionsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workRoleExclusions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementTypesByParentIdWorkRoleExclusionsById(id, parentId) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workRoleExclusions/${id}`,
            method: 'delete',
        });
    }
    getFinanceAgreementTypesByParentIdWorkRoleExclusionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workRoleExclusions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdWorkroles(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementTypesByParentIdWorkroles(parentId, workRole) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles`,
            method: 'post',
            data: workRole,
        });
    }
    getFinanceAgreementTypesByParentIdWorkrolesById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementTypesByParentIdWorkrolesById(id, parentId) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementTypesByParentIdWorkrolesById(id, parentId, workRole) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/${id}`,
            method: 'put',
            data: workRole,
        });
    }
    patchFinanceAgreementTypesByParentIdWorkrolesById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementTypesByParentIdWorkrolesCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdWorkrolesInfo(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/info`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdWorkrolesInfoById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/info/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdWorkrolesInfoCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workroles/info/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdWorkTypeExclusions(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workTypeExclusions`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementTypesByParentIdWorkTypeExclusions(parentId, workTypeExclusion) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workTypeExclusions`,
            method: 'post',
            data: workTypeExclusion,
        });
    }
    getFinanceAgreementTypesByParentIdWorkTypeExclusionsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workTypeExclusions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementTypesByParentIdWorkTypeExclusionsById(id, parentId) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workTypeExclusions/${id}`,
            method: 'delete',
        });
    }
    getFinanceAgreementTypesByParentIdWorkTypeExclusionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/workTypeExclusions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceAgreementTypesByParentIdWorktypes(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/worktypes`,
            method: 'get',
            params,
        });
    }
    postFinanceAgreementTypesByParentIdWorktypes(parentId, workType) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/worktypes`,
            method: 'post',
            data: workType,
        });
    }
    getFinanceAgreementTypesByParentIdWorktypesById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/worktypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceAgreementTypesByParentIdWorktypesById(id, parentId) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/worktypes/${id}`,
            method: 'delete',
        });
    }
    putFinanceAgreementTypesByParentIdWorktypesById(id, parentId, workType) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/worktypes/${id}`,
            method: 'put',
            data: workType,
        });
    }
    patchFinanceAgreementTypesByParentIdWorktypesById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/worktypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceAgreementTypesByParentIdWorktypesCount(parentId, params = {}) {
        return this.request({
            path: `/finance/agreementTypes/${parentId}/worktypes/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBatchSetups(params = {}) {
        return this.request({
            path: `/finance/batchSetups`,
            method: 'get',
            params,
        });
    }
    getFinanceBatchSetupsById(id, params = {}) {
        return this.request({
            path: `/finance/batchSetups/${id}`,
            method: 'get',
            params,
        });
    }
    putFinanceBatchSetupsById(id, batchSetup) {
        return this.request({
            path: `/finance/batchSetups/${id}`,
            method: 'put',
            data: batchSetup,
        });
    }
    patchFinanceBatchSetupsById(id, patchOperations) {
        return this.request({
            path: `/finance/batchSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceBatchSetupsCount(params = {}) {
        return this.request({
            path: `/finance/batchSetups/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingCycles(params = {}) {
        return this.request({
            path: `/finance/billingCycles`,
            method: 'get',
            params,
        });
    }
    postFinanceBillingCycles(billingCycle) {
        return this.request({
            path: `/finance/billingCycles`,
            method: 'post',
            data: billingCycle,
        });
    }
    getFinanceBillingCyclesById(id, params = {}) {
        return this.request({
            path: `/finance/billingCycles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceBillingCyclesById(id) {
        return this.request({
            path: `/finance/billingCycles/${id}`,
            method: 'delete',
        });
    }
    putFinanceBillingCyclesById(id, billingCycle) {
        return this.request({
            path: `/finance/billingCycles/${id}`,
            method: 'put',
            data: billingCycle,
        });
    }
    patchFinanceBillingCyclesById(id, patchOperations) {
        return this.request({
            path: `/finance/billingCycles/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceBillingCyclesByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/billingCycles/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingCyclesByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/billingCycles/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingCyclesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/billingCycles/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingCyclesCount(params = {}) {
        return this.request({
            path: `/finance/billingCycles/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingCyclesInfo(params = {}) {
        return this.request({
            path: `/finance/billingCycles/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingCyclesInfoCount(params = {}) {
        return this.request({
            path: `/finance/billingCycles/info/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingSetups(params = {}) {
        return this.request({
            path: `/finance/billingSetups`,
            method: 'get',
            params,
        });
    }
    postFinanceBillingSetups(billingSetup) {
        return this.request({
            path: `/finance/billingSetups`,
            method: 'post',
            data: billingSetup,
        });
    }
    getFinanceBillingSetupsById(id, params = {}) {
        return this.request({
            path: `/finance/billingSetups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceBillingSetupsById(id) {
        return this.request({
            path: `/finance/billingSetups/${id}`,
            method: 'delete',
        });
    }
    putFinanceBillingSetupsById(id, billingSetup) {
        return this.request({
            path: `/finance/billingSetups/${id}`,
            method: 'put',
            data: billingSetup,
        });
    }
    patchFinanceBillingSetupsById(id, patchOperations) {
        return this.request({
            path: `/finance/billingSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceBillingSetupsByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/billingSetups/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingSetupsByParentIdRoutings(parentId, params = {}) {
        return this.request({
            path: `/finance/billingSetups/${parentId}/routings`,
            method: 'get',
            params,
        });
    }
    postFinanceBillingSetupsByParentIdRoutings(parentId, billingSetupRouting) {
        return this.request({
            path: `/finance/billingSetups/${parentId}/routings`,
            method: 'post',
            data: billingSetupRouting,
        });
    }
    getFinanceBillingSetupsByParentIdRoutingsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/billingSetups/${parentId}/routings/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceBillingSetupsByParentIdRoutingsById(id, parentId) {
        return this.request({
            path: `/finance/billingSetups/${parentId}/routings/${id}`,
            method: 'delete',
        });
    }
    putFinanceBillingSetupsByParentIdRoutingsById(id, parentId, billingSetupRouting) {
        return this.request({
            path: `/finance/billingSetups/${parentId}/routings/${id}`,
            method: 'put',
            data: billingSetupRouting,
        });
    }
    patchFinanceBillingSetupsByParentIdRoutingsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/billingSetups/${parentId}/routings/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceBillingSetupsByParentIdRoutingsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/billingSetups/${parentId}/routings/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingSetupsCount(params = {}) {
        return this.request({
            path: `/finance/billingSetups/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingSetupsInfo(params = {}) {
        return this.request({
            path: `/finance/billingSetups/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingStatuses(params = {}) {
        return this.request({
            path: `/finance/billingStatuses`,
            method: 'get',
            params,
        });
    }
    postFinanceBillingStatuses(billingStatus) {
        return this.request({
            path: `/finance/billingStatuses`,
            method: 'post',
            data: billingStatus,
        });
    }
    getFinanceBillingStatusesById(id, params = {}) {
        return this.request({
            path: `/finance/billingStatuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceBillingStatusesById(id) {
        return this.request({
            path: `/finance/billingStatuses/${id}`,
            method: 'delete',
        });
    }
    putFinanceBillingStatusesById(id, billingStatus) {
        return this.request({
            path: `/finance/billingStatuses/${id}`,
            method: 'put',
            data: billingStatus,
        });
    }
    patchFinanceBillingStatusesById(id, patchOperations) {
        return this.request({
            path: `/finance/billingStatuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceBillingStatusesByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/billingStatuses/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingStatusesByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/billingStatuses/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingStatusesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/billingStatuses/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingStatusesCount(params = {}) {
        return this.request({
            path: `/finance/billingStatuses/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingStatusesInfo(params = {}) {
        return this.request({
            path: `/finance/billingStatuses/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingStatusesInfoCount(params = {}) {
        return this.request({
            path: `/finance/billingStatuses/info/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingTerms(params = {}) {
        return this.request({
            path: `/finance/billingTerms`,
            method: 'get',
            params,
        });
    }
    postFinanceBillingTerms(billingTerms) {
        return this.request({
            path: `/finance/billingTerms`,
            method: 'post',
            data: billingTerms,
        });
    }
    getFinanceBillingTermsById(id, params = {}) {
        return this.request({
            path: `/finance/billingTerms/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceBillingTermsById(id) {
        return this.request({
            path: `/finance/billingTerms/${id}`,
            method: 'delete',
        });
    }
    putFinanceBillingTermsById(id, billingTerms) {
        return this.request({
            path: `/finance/billingTerms/${id}`,
            method: 'put',
            data: billingTerms,
        });
    }
    patchFinanceBillingTermsById(id, patchOperations) {
        return this.request({
            path: `/finance/billingTerms/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceBillingTermsByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/billingTerms/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingTermsByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/billingTerms/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingTermsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/billingTerms/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingTermsCount(params = {}) {
        return this.request({
            path: `/finance/billingTerms/count`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingTermsInfo(params = {}) {
        return this.request({
            path: `/finance/billingTerms/info`,
            method: 'get',
            params,
        });
    }
    getFinanceBillingTermsInfoCount(params = {}) {
        return this.request({
            path: `/finance/billingTerms/info/count`,
            method: 'get',
            params,
        });
    }
    putFinanceClosedInvoicesById(id, closedInvoice) {
        return this.request({
            path: `/finance/closedInvoices/${id}`,
            method: 'put',
            data: closedInvoice,
        });
    }
    patchFinanceClosedInvoicesById(id, patchOperations) {
        return this.request({
            path: `/finance/closedInvoices/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceCompanyFinance(params = {}) {
        return this.request({
            path: `/finance/companyFinance/`,
            method: 'get',
            params,
        });
    }
    getFinanceCompanyFinanceById(id, params = {}) {
        return this.request({
            path: `/finance/companyFinance/${id}`,
            method: 'get',
            params,
        });
    }
    patchFinanceCompanyFinanceById(id, patchOperations) {
        return this.request({
            path: `/finance/companyFinance/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceCompanyFinanceCount(params = {}) {
        return this.request({
            path: `/finance/companyFinance/count`,
            method: 'get',
            params,
        });
    }
    getFinanceCurrencies(params = {}) {
        return this.request({
            path: `/finance/currencies`,
            method: 'get',
            params,
        });
    }
    postFinanceCurrencies(currency) {
        return this.request({
            path: `/finance/currencies`,
            method: 'post',
            data: currency,
        });
    }
    getFinanceCurrenciesById(id, params = {}) {
        return this.request({
            path: `/finance/currencies/${id}`,
            method: 'get',
            params,
        });
    }
    putFinanceCurrenciesById(id, currency) {
        return this.request({
            path: `/finance/currencies/${id}`,
            method: 'put',
            data: currency,
        });
    }
    patchFinanceCurrenciesById(id, patchOperations) {
        return this.request({
            path: `/finance/currencies/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteFinanceCurrenciesById(id) {
        return this.request({
            path: `/finance/currencies/${id}`,
            method: 'delete',
        });
    }
    getFinanceCurrenciesByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/currencies/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceCurrenciesByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/currencies/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceCurrenciesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/currencies/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceCurrenciesCount(params = {}) {
        return this.request({
            path: `/finance/currencies/count`,
            method: 'get',
            params,
        });
    }
    getFinanceCurrenciesInfo(params = {}) {
        return this.request({
            path: `/finance/currencies/info`,
            method: 'get',
            params,
        });
    }
    getFinanceCurrenciesInfoCount(params = {}) {
        return this.request({
            path: `/finance/currencies/info/count`,
            method: 'get',
            params,
        });
    }
    getFinanceDeliveryMethods(params = {}) {
        return this.request({
            path: `/finance/deliveryMethods`,
            method: 'get',
            params,
        });
    }
    postFinanceDeliveryMethods(deliveryMethod) {
        return this.request({
            path: `/finance/deliveryMethods`,
            method: 'post',
            data: deliveryMethod,
        });
    }
    getFinanceDeliveryMethodsById(id, params = {}) {
        return this.request({
            path: `/finance/deliveryMethods/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceDeliveryMethodsById(id) {
        return this.request({
            path: `/finance/deliveryMethods/${id}`,
            method: 'delete',
        });
    }
    putFinanceDeliveryMethodsById(id, deliveryMethod) {
        return this.request({
            path: `/finance/deliveryMethods/${id}`,
            method: 'put',
            data: deliveryMethod,
        });
    }
    patchFinanceDeliveryMethodsById(id, patchOperations) {
        return this.request({
            path: `/finance/deliveryMethods/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceDeliveryMethodsCount(params = {}) {
        return this.request({
            path: `/finance/deliveryMethods/count`,
            method: 'get',
            params,
        });
    }
    getFinanceGlAccounts(params = {}) {
        return this.request({
            path: `/finance/glAccounts`,
            method: 'get',
            params,
        });
    }
    postFinanceGlAccounts(glAccount) {
        return this.request({
            path: `/finance/glAccounts`,
            method: 'post',
            data: glAccount,
        });
    }
    getFinanceGlAccountsById(id, params = {}) {
        return this.request({
            path: `/finance/glAccounts/${id}`,
            method: 'get',
            params,
        });
    }
    putFinanceGlAccountsById(id, glAccount) {
        return this.request({
            path: `/finance/glAccounts/${id}`,
            method: 'put',
            data: glAccount,
        });
    }
    patchFinanceGlAccountsById(id, patchOperations) {
        return this.request({
            path: `/finance/glAccounts/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteFinanceGlAccountsById(id) {
        return this.request({
            path: `/finance/glAccounts/${id}`,
            method: 'delete',
        });
    }
    getFinanceGlAccountsCount(params = {}) {
        return this.request({
            path: `/finance/glAccounts/count`,
            method: 'get',
            params,
        });
    }
    getFinanceGlAccountsMappedTypes(params = {}) {
        return this.request({
            path: `/finance/glAccounts/mappedTypes`,
            method: 'get',
            params,
        });
    }
    getFinanceGlAccountsMappedTypesCount(params = {}) {
        return this.request({
            path: `/finance/glAccounts/mappedTypes/count`,
            method: 'get',
            params,
        });
    }
    getFinanceGlCaptions(params = {}) {
        return this.request({
            path: `/finance/glCaptions`,
            method: 'get',
            params,
        });
    }
    getFinanceGlCaptionsById(id, params = {}) {
        return this.request({
            path: `/finance/glCaptions/${id}`,
            method: 'get',
            params,
        });
    }
    putFinanceGlCaptionsById(id, glCaption) {
        return this.request({
            path: `/finance/glCaptions/${id}`,
            method: 'put',
            data: glCaption,
        });
    }
    patchFinanceGlCaptionsById(id, patchOperations) {
        return this.request({
            path: `/finance/glCaptions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceGlCaptionsCount(params = {}) {
        return this.request({
            path: `/finance/glCaptions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceGlpaths(params = {}) {
        return this.request({
            path: `/finance/glpaths`,
            method: 'get',
            params,
        });
    }
    postFinanceGlpaths(gLPath) {
        return this.request({
            path: `/finance/glpaths`,
            method: 'post',
            data: gLPath,
        });
    }
    getFinanceGlpathsById(id, params = {}) {
        return this.request({
            path: `/finance/glpaths/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceGlpathsById(id) {
        return this.request({
            path: `/finance/glpaths/${id}`,
            method: 'delete',
        });
    }
    putFinanceGlpathsById(id, gLPath) {
        return this.request({
            path: `/finance/glpaths/${id}`,
            method: 'put',
            data: gLPath,
        });
    }
    patchFinanceGlpathsById(id, patchOperations) {
        return this.request({
            path: `/finance/glpaths/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceGlpathsCount(params = {}) {
        return this.request({
            path: `/finance/glpaths/count`,
            method: 'get',
            params,
        });
    }
    getFinanceInfoCurrencyCodes(params = {}) {
        return this.request({
            path: `/finance/info/currencyCodes`,
            method: 'get',
            params,
        });
    }
    getFinanceInfoCurrencyCodesById(id, params = {}) {
        return this.request({
            path: `/finance/info/currencyCodes/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceInfoCurrencyCodesCount(params = {}) {
        return this.request({
            path: `/finance/info/currencyCodes/count`,
            method: 'get',
            params,
        });
    }
    getFinanceInfoInvoiceById(id, params = {}) {
        return this.request({
            path: `/finance/info/invoice/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceInfoTaxIntegrations(params = {}) {
        return this.request({
            path: `/finance/info/taxIntegrations`,
            method: 'get',
            params,
        });
    }
    getFinanceInfoTaxIntegrationsById(id, params = {}) {
        return this.request({
            path: `/finance/info/taxIntegrations/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceInfoTaxIntegrationsCount(params = {}) {
        return this.request({
            path: `/finance/info/taxIntegrations/count`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceEmailTemplates(params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates`,
            method: 'get',
            params,
        });
    }
    postFinanceInvoiceEmailTemplates(invoiceEmailTemplate) {
        return this.request({
            path: `/finance/invoiceEmailTemplates`,
            method: 'post',
            data: invoiceEmailTemplate,
        });
    }
    getFinanceInvoiceEmailTemplatesById(id, params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceInvoiceEmailTemplatesById(id) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/${id}`,
            method: 'delete',
        });
    }
    putFinanceInvoiceEmailTemplatesById(id, invoiceEmailTemplate) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/${id}`,
            method: 'put',
            data: invoiceEmailTemplate,
        });
    }
    patchFinanceInvoiceEmailTemplatesById(id, patchOperations) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceInvoiceEmailTemplatesByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceEmailTemplatesByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceEmailTemplatesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceEmailTemplatesCount(params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/count`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceEmailTemplatesInfo(params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/info`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceEmailTemplatesInfoCount(params = {}) {
        return this.request({
            path: `/finance/invoiceEmailTemplates/info/count`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoices(params = {}) {
        return this.request({
            path: `/finance/invoices`,
            method: 'get',
            params,
        });
    }
    postFinanceInvoices(invoice) {
        return this.request({
            path: `/finance/invoices`,
            method: 'post',
            data: invoice,
        });
    }
    getFinanceInvoicesById(id, params = {}) {
        return this.request({
            path: `/finance/invoices/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceInvoicesById(id) {
        return this.request({
            path: `/finance/invoices/${id}`,
            method: 'delete',
        });
    }
    putFinanceInvoicesById(id, invoice) {
        return this.request({
            path: `/finance/invoices/${id}`,
            method: 'put',
            data: invoice,
        });
    }
    patchFinanceInvoicesById(id, patchOperations) {
        return this.request({
            path: `/finance/invoices/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceInvoicesByIdPdf(id, params = {}) {
        return this.request({
            path: `/finance/invoices/${id}/pdf`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoicesByParentIdPayments(parentId, params = {}) {
        return this.request({
            path: `/finance/invoices/${parentId}/payments`,
            method: 'get',
            params,
        });
    }
    postFinanceInvoicesByParentIdPayments(parentId, payment) {
        return this.request({
            path: `/finance/invoices/${parentId}/payments`,
            method: 'post',
            data: payment,
        });
    }
    getFinanceInvoicesByParentIdPaymentsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/invoices/${parentId}/payments/${id}`,
            method: 'get',
            params,
        });
    }
    patchFinanceInvoicesByParentIdPaymentsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/invoices/${parentId}/payments/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    putFinanceInvoicesByParentIdPaymentsById(id, parentId, payment) {
        return this.request({
            path: `/finance/invoices/${parentId}/payments/${id}`,
            method: 'put',
            data: payment,
        });
    }
    deleteFinanceInvoicesByParentIdPaymentsById(id, parentId) {
        return this.request({
            path: `/finance/invoices/${parentId}/payments/${id}`,
            method: 'delete',
        });
    }
    getFinanceInvoicesCount(params = {}) {
        return this.request({
            path: `/finance/invoices/count`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceTemplates(params = {}) {
        return this.request({
            path: `/finance/invoiceTemplates`,
            method: 'get',
            params,
        });
    }
    postFinanceInvoiceTemplates(invoiceTemplate) {
        return this.request({
            path: `/finance/invoiceTemplates`,
            method: 'post',
            data: invoiceTemplate,
        });
    }
    getFinanceInvoiceTemplatesById(id, params = {}) {
        return this.request({
            path: `/finance/invoiceTemplates/${id}`,
            method: 'get',
            params,
        });
    }
    patchFinanceInvoiceTemplatesById(id, patchOperations) {
        return this.request({
            path: `/finance/invoiceTemplates/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    putFinanceInvoiceTemplatesById(id, invoiceTemplate) {
        return this.request({
            path: `/finance/invoiceTemplates/${id}`,
            method: 'put',
            data: invoiceTemplate,
        });
    }
    deleteFinanceInvoiceTemplatesById(id) {
        return this.request({
            path: `/finance/invoiceTemplates/${id}`,
            method: 'delete',
        });
    }
    getFinanceInvoiceTemplatesByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/invoiceTemplates/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceTemplatesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/invoiceTemplates/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceTemplatesCount(params = {}) {
        return this.request({
            path: `/finance/invoiceTemplates/count`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceTemplateSetups(params = {}) {
        return this.request({
            path: `/finance/invoiceTemplateSetups`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceTemplateSetupsById(id, params = {}) {
        return this.request({
            path: `/finance/invoiceTemplateSetups/${id}`,
            method: 'get',
            params,
        });
    }
    getFinanceInvoiceTemplateSetupsCount(params = {}) {
        return this.request({
            path: `/finance/invoiceTemplateSetups/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodes(params = {}) {
        return this.request({
            path: `/finance/taxCodes`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodes(taxCode) {
        return this.request({
            path: `/finance/taxCodes`,
            method: 'post',
            data: taxCode,
        });
    }
    getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevels(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/expenseTypeExemptions/${parentId}/taxableExpenseTypeLevels`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevels(parentId, grandparentId, taxableExpenseTypeLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/expenseTypeExemptions/${parentId}/taxableExpenseTypeLevels`,
            method: 'post',
            data: taxableExpenseTypeLevel,
        });
    }
    getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/expenseTypeExemptions/${parentId}/taxableExpenseTypeLevels/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById(id, parentId, grandparentId) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/expenseTypeExemptions/${parentId}/taxableExpenseTypeLevels/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById(id, parentId, grandparentId, taxableExpenseTypeLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/expenseTypeExemptions/${parentId}/taxableExpenseTypeLevels/${id}`,
            method: 'put',
            data: taxableExpenseTypeLevel,
        });
    }
    patchFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/expenseTypeExemptions/${parentId}/taxableExpenseTypeLevels/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/expenseTypeExemptions/${parentId}/taxableExpenseTypeLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevels(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/productTypeExemptions/${parentId}/taxableProductTypeLevels`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevels(parentId, grandparentId, taxableProductTypeLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/productTypeExemptions/${parentId}/taxableProductTypeLevels`,
            method: 'post',
            data: taxableProductTypeLevel,
        });
    }
    getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/productTypeExemptions/${parentId}/taxableProductTypeLevels/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById(id, parentId, grandparentId) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/productTypeExemptions/${parentId}/taxableProductTypeLevels/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById(id, parentId, grandparentId, taxableProductTypeLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/productTypeExemptions/${parentId}/taxableProductTypeLevels/${id}`,
            method: 'put',
            data: taxableProductTypeLevel,
        });
    }
    patchFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/productTypeExemptions/${parentId}/taxableProductTypeLevels/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/productTypeExemptions/${parentId}/taxableProductTypeLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevels(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/taxCodeXRefs/${parentId}/taxableXRefLevels`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevels(parentId, grandparentId, taxableXRefLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/taxCodeXRefs/${parentId}/taxableXRefLevels`,
            method: 'post',
            data: taxableXRefLevel,
        });
    }
    getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/taxCodeXRefs/${parentId}/taxableXRefLevels/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById(id, parentId, grandparentId) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/taxCodeXRefs/${parentId}/taxableXRefLevels/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById(id, parentId, grandparentId, taxableXRefLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/taxCodeXRefs/${parentId}/taxableXRefLevels/${id}`,
            method: 'put',
            data: taxableXRefLevel,
        });
    }
    patchFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/taxCodeXRefs/${parentId}/taxableXRefLevels/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/taxCodeXRefs/${parentId}/taxableXRefLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevels(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/workRoleExemptions/${parentId}/taxableWorkRoleLevels`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevels(parentId, grandparentId, taxableWorkRoleLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/workRoleExemptions/${parentId}/taxableWorkRoleLevels`,
            method: 'post',
            data: taxableWorkRoleLevel,
        });
    }
    getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/workRoleExemptions/${parentId}/taxableWorkRoleLevels/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById(id, parentId, grandparentId) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/workRoleExemptions/${parentId}/taxableWorkRoleLevels/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById(id, parentId, grandparentId, taxableWorkRoleLevel) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/workRoleExemptions/${parentId}/taxableWorkRoleLevels/${id}`,
            method: 'put',
            data: taxableWorkRoleLevel,
        });
    }
    patchFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/workRoleExemptions/${parentId}/taxableWorkRoleLevels/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${grandparentId}/workRoleExemptions/${parentId}/taxableWorkRoleLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesById(id, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesById(id) {
        return this.request({
            path: `/finance/taxCodes/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesById(id, taxCode) {
        return this.request({
            path: `/finance/taxCodes/${id}`,
            method: 'put',
            data: taxCode,
        });
    }
    patchFinanceTaxCodesById(id, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postFinanceTaxCodesByIdCopy(id) {
        return this.request({
            path: `/finance/taxCodes/${id}/copy`,
            method: 'post',
        });
    }
    getFinanceTaxCodesByIdInfo(id, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByIdUsages(id, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByParentIdExpenseTypeExemptions(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/expenseTypeExemptions`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByParentIdExpenseTypeExemptions(parentId, expenseTypeExemption) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/expenseTypeExemptions`,
            method: 'post',
            data: expenseTypeExemption,
        });
    }
    getFinanceTaxCodesByParentIdExpenseTypeExemptionsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/expenseTypeExemptions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByParentIdExpenseTypeExemptionsById(id, parentId) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/expenseTypeExemptions/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByParentIdExpenseTypeExemptionsById(id, parentId, expenseTypeExemption) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/expenseTypeExemptions/${id}`,
            method: 'put',
            data: expenseTypeExemption,
        });
    }
    patchFinanceTaxCodesByParentIdExpenseTypeExemptionsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/expenseTypeExemptions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByParentIdExpenseTypeExemptionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/expenseTypeExemptions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByParentIdProductTypeExemptions(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/productTypeExemptions`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByParentIdProductTypeExemptions(parentId, productTypeExemption) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/productTypeExemptions`,
            method: 'post',
            data: productTypeExemption,
        });
    }
    getFinanceTaxCodesByParentIdProductTypeExemptionsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/productTypeExemptions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByParentIdProductTypeExemptionsById(id, parentId) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/productTypeExemptions/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByParentIdProductTypeExemptionsById(id, parentId, productTypeExemption) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/productTypeExemptions/${id}`,
            method: 'put',
            data: productTypeExemption,
        });
    }
    patchFinanceTaxCodesByParentIdProductTypeExemptionsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/productTypeExemptions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByParentIdProductTypeExemptionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/productTypeExemptions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByParentIdTaxCodeLevels(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeLevels`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByParentIdTaxCodeLevels(parentId, taxCodeLevel) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeLevels`,
            method: 'post',
            data: taxCodeLevel,
        });
    }
    getFinanceTaxCodesByParentIdTaxCodeLevelsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeLevels/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByParentIdTaxCodeLevelsById(id, parentId) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeLevels/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByParentIdTaxCodeLevelsById(id, parentId, taxCodeLevel) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeLevels/${id}`,
            method: 'put',
            data: taxCodeLevel,
        });
    }
    patchFinanceTaxCodesByParentIdTaxCodeLevelsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeLevels/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByParentIdTaxCodeLevelsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeLevels/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByParentIdTaxCodeXRefs(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeXRefs`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByParentIdTaxCodeXRefs(parentId, taxCodeXRef) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeXRefs`,
            method: 'post',
            data: taxCodeXRef,
        });
    }
    getFinanceTaxCodesByParentIdTaxCodeXRefsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeXRefs/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByParentIdTaxCodeXRefsById(id, parentId) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeXRefs/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByParentIdTaxCodeXRefsById(id, parentId, taxCodeXRef) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeXRefs/${id}`,
            method: 'put',
            data: taxCodeXRef,
        });
    }
    patchFinanceTaxCodesByParentIdTaxCodeXRefsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeXRefs/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByParentIdTaxCodeXRefsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/taxCodeXRefs/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesByParentIdWorkRoleExemptions(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/workRoleExemptions`,
            method: 'get',
            params,
        });
    }
    postFinanceTaxCodesByParentIdWorkRoleExemptions(parentId, workRoleExemption) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/workRoleExemptions`,
            method: 'post',
            data: workRoleExemption,
        });
    }
    getFinanceTaxCodesByParentIdWorkRoleExemptionsById(id, parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/workRoleExemptions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteFinanceTaxCodesByParentIdWorkRoleExemptionsById(id, parentId) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/workRoleExemptions/${id}`,
            method: 'delete',
        });
    }
    putFinanceTaxCodesByParentIdWorkRoleExemptionsById(id, parentId, workRoleExemption) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/workRoleExemptions/${id}`,
            method: 'put',
            data: workRoleExemption,
        });
    }
    patchFinanceTaxCodesByParentIdWorkRoleExemptionsById(id, parentId, patchOperations) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/workRoleExemptions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxCodesByParentIdWorkRoleExemptionsCount(parentId, params = {}) {
        return this.request({
            path: `/finance/taxCodes/${parentId}/workRoleExemptions/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesCount(params = {}) {
        return this.request({
            path: `/finance/taxCodes/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesInfo(params = {}) {
        return this.request({
            path: `/finance/taxCodes/info`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxCodesInfoCount(params = {}) {
        return this.request({
            path: `/finance/taxCodes/info/count`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxIntegrations(params = {}) {
        return this.request({
            path: `/finance/taxIntegrations`,
            method: 'get',
            params,
        });
    }
    getFinanceTaxIntegrationsById(id, params = {}) {
        return this.request({
            path: `/finance/taxIntegrations/${id}`,
            method: 'get',
            params,
        });
    }
    putFinanceTaxIntegrationsById(id, taxIntegration) {
        return this.request({
            path: `/finance/taxIntegrations/${id}`,
            method: 'put',
            data: taxIntegration,
        });
    }
    patchFinanceTaxIntegrationsById(id, patchOperations) {
        return this.request({
            path: `/finance/taxIntegrations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getFinanceTaxIntegrationsCount(params = {}) {
        return this.request({
            path: `/finance/taxIntegrations/count`,
            method: 'get',
            params,
        });
    }
}
exports.FinanceAPI = FinanceAPI;
//# sourceMappingURL=FinanceAPI.js.map