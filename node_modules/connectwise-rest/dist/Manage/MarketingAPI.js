"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MarketingAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module MarketingAPI
 */
/**
 * Marketing module
 * @public
 */
class MarketingAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getMarketingCampaigns(params = {}) {
        return this.request({
            path: `/marketing/campaigns`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaigns(campaign) {
        return this.request({
            path: `/marketing/campaigns`,
            method: 'post',
            data: campaign,
        });
    }
    getMarketingCampaignsById(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsById(id) {
        return this.request({
            path: `/marketing/campaigns/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsById(id, campaign) {
        return this.request({
            path: `/marketing/campaigns/${id}`,
            method: 'put',
            data: campaign,
        });
    }
    patchMarketingCampaignsById(id, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsByIdActivities(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${id}/activities`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsByIdActivitiesCount(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${id}/activities/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsByIdOpportunities(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${id}/opportunities`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsByIdOpportunitiesCount(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${id}/opportunities/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsByParentIdAudits(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/audits`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaignsByParentIdAudits(parentId, campaignAudit) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/audits`,
            method: 'post',
            data: campaignAudit,
        });
    }
    getMarketingCampaignsByParentIdAuditsById(id, parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/audits/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsByParentIdAuditsById(id, parentId) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/audits/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsByParentIdAuditsById(id, parentId, campaignAudit) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/audits/${id}`,
            method: 'put',
            data: campaignAudit,
        });
    }
    patchMarketingCampaignsByParentIdAuditsById(id, parentId, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/audits/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsByParentIdAuditsCount(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/audits/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsByParentIdEmailsOpened(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/emailsOpened`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaignsByParentIdEmailsOpened(parentId, emailOpened) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/emailsOpened`,
            method: 'post',
            data: emailOpened,
        });
    }
    getMarketingCampaignsByParentIdEmailsOpenedById(id, parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/emailsOpened/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsByParentIdEmailsOpenedById(id, parentId) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/emailsOpened/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsByParentIdEmailsOpenedById(id, parentId, emailOpened) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/emailsOpened/${id}`,
            method: 'put',
            data: emailOpened,
        });
    }
    patchMarketingCampaignsByParentIdEmailsOpenedById(id, parentId, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/emailsOpened/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsByParentIdEmailsOpenedCount(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/emailsOpened/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsByParentIdFormsSubmitted(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/formsSubmitted`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaignsByParentIdFormsSubmitted(parentId, formSubmitted) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/formsSubmitted`,
            method: 'post',
            data: formSubmitted,
        });
    }
    getMarketingCampaignsByParentIdFormsSubmittedById(id, parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/formsSubmitted/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsByParentIdFormsSubmittedById(id, parentId) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/formsSubmitted/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsByParentIdFormsSubmittedById(id, parentId, formSubmitted) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/formsSubmitted/${id}`,
            method: 'put',
            data: formSubmitted,
        });
    }
    patchMarketingCampaignsByParentIdFormsSubmittedById(id, parentId, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/formsSubmitted/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsByParentIdFormsSubmittedCount(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/formsSubmitted/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsByParentIdLinksClicked(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/linksClicked`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaignsByParentIdLinksClicked(parentId, linkClicked) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/linksClicked`,
            method: 'post',
            data: linkClicked,
        });
    }
    getMarketingCampaignsByParentIdLinksClickedById(id, parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/linksClicked/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsByParentIdLinksClickedById(id, parentId) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/linksClicked/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsByParentIdLinksClickedById(id, parentId, linkClicked) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/linksClicked/${id}`,
            method: 'put',
            data: linkClicked,
        });
    }
    patchMarketingCampaignsByParentIdLinksClickedById(id, parentId, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/linksClicked/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsByParentIdLinksClickedCount(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/${parentId}/linksClicked/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsCount(params = {}) {
        return this.request({
            path: `/marketing/campaigns/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsStatuses(params = {}) {
        return this.request({
            path: `/marketing/campaigns/statuses`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaignsStatuses(campaignStatus) {
        return this.request({
            path: `/marketing/campaigns/statuses`,
            method: 'post',
            data: campaignStatus,
        });
    }
    getMarketingCampaignsStatusesById(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/statuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsStatusesById(id) {
        return this.request({
            path: `/marketing/campaigns/statuses/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsStatusesById(id, campaignStatus) {
        return this.request({
            path: `/marketing/campaigns/statuses/${id}`,
            method: 'put',
            data: campaignStatus,
        });
    }
    patchMarketingCampaignsStatusesById(id, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/statuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsStatusesCount(params = {}) {
        return this.request({
            path: `/marketing/campaigns/statuses/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsSubTypes(params = {}) {
        return this.request({
            path: `/marketing/campaigns/subTypes`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaignsSubTypes(campaignSubType) {
        return this.request({
            path: `/marketing/campaigns/subTypes`,
            method: 'post',
            data: campaignSubType,
        });
    }
    getMarketingCampaignsSubTypesById(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/subTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsSubTypesById(id) {
        return this.request({
            path: `/marketing/campaigns/subTypes/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsSubTypesById(id, campaignSubType) {
        return this.request({
            path: `/marketing/campaigns/subTypes/${id}`,
            method: 'put',
            data: campaignSubType,
        });
    }
    patchMarketingCampaignsSubTypesById(id, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/subTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsSubTypesCount(params = {}) {
        return this.request({
            path: `/marketing/campaigns/subTypes/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsTypes(params = {}) {
        return this.request({
            path: `/marketing/campaigns/types`,
            method: 'get',
            params,
        });
    }
    postMarketingCampaignsTypes(campaignType) {
        return this.request({
            path: `/marketing/campaigns/types`,
            method: 'post',
            data: campaignType,
        });
    }
    getMarketingCampaignsTypesById(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingCampaignsTypesById(id) {
        return this.request({
            path: `/marketing/campaigns/types/${id}`,
            method: 'delete',
        });
    }
    putMarketingCampaignsTypesById(id, campaignType) {
        return this.request({
            path: `/marketing/campaigns/types/${id}`,
            method: 'put',
            data: campaignType,
        });
    }
    patchMarketingCampaignsTypesById(id, patchOperations) {
        return this.request({
            path: `/marketing/campaigns/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingCampaignsTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsTypesByParentIdSubTypes(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/${parentId}/subTypes`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsTypesByParentIdSubTypesById(id, parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/${parentId}/subTypes/${id}`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsTypesByParentIdSubTypesCount(parentId, params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/${parentId}/subTypes/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsTypesCount(params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/count`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsTypesInfo(params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/info`,
            method: 'get',
            params,
        });
    }
    getMarketingCampaignsTypesInfoCount(params = {}) {
        return this.request({
            path: `/marketing/campaigns/types/info/count`,
            method: 'get',
            params,
        });
    }
    getMarketingGroups(params = {}) {
        return this.request({
            path: `/marketing/groups`,
            method: 'get',
            params,
        });
    }
    postMarketingGroups(group) {
        return this.request({
            path: `/marketing/groups`,
            method: 'post',
            data: group,
        });
    }
    getMarketingGroupsById(id, params = {}) {
        return this.request({
            path: `/marketing/groups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingGroupsById(id) {
        return this.request({
            path: `/marketing/groups/${id}`,
            method: 'delete',
        });
    }
    putMarketingGroupsById(id, group) {
        return this.request({
            path: `/marketing/groups/${id}`,
            method: 'put',
            data: group,
        });
    }
    patchMarketingGroupsById(id, patchOperations) {
        return this.request({
            path: `/marketing/groups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingGroupsByIdUsages(id, params = {}) {
        return this.request({
            path: `/marketing/groups/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getMarketingGroupsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/marketing/groups/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getMarketingGroupsByParentIdCompanies(parentId, params = {}) {
        return this.request({
            path: `/marketing/groups/${parentId}/companies`,
            method: 'get',
            params,
        });
    }
    postMarketingGroupsByParentIdCompanies(parentId, marketingCompany) {
        return this.request({
            path: `/marketing/groups/${parentId}/companies`,
            method: 'post',
            data: marketingCompany,
        });
    }
    getMarketingGroupsByParentIdCompaniesById(id, parentId, params = {}) {
        return this.request({
            path: `/marketing/groups/${parentId}/companies/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingGroupsByParentIdCompaniesById(id, parentId) {
        return this.request({
            path: `/marketing/groups/${parentId}/companies/${id}`,
            method: 'delete',
        });
    }
    putMarketingGroupsByParentIdCompaniesById(id, parentId, marketingCompany) {
        return this.request({
            path: `/marketing/groups/${parentId}/companies/${id}`,
            method: 'put',
            data: marketingCompany,
        });
    }
    patchMarketingGroupsByParentIdCompaniesById(id, parentId, patchOperations) {
        return this.request({
            path: `/marketing/groups/${parentId}/companies/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingGroupsByParentIdCompaniesCount(parentId, params = {}) {
        return this.request({
            path: `/marketing/groups/${parentId}/companies/count`,
            method: 'get',
            params,
        });
    }
    getMarketingGroupsByParentIdContacts(parentId, params = {}) {
        return this.request({
            path: `/marketing/groups/${parentId}/contacts`,
            method: 'get',
            params,
        });
    }
    postMarketingGroupsByParentIdContacts(parentId, marketingContact) {
        return this.request({
            path: `/marketing/groups/${parentId}/contacts`,
            method: 'post',
            data: marketingContact,
        });
    }
    getMarketingGroupsByParentIdContactsById(id, parentId, params = {}) {
        return this.request({
            path: `/marketing/groups/${parentId}/contacts/${id}`,
            method: 'get',
            params,
        });
    }
    deleteMarketingGroupsByParentIdContactsById(id, parentId) {
        return this.request({
            path: `/marketing/groups/${parentId}/contacts/${id}`,
            method: 'delete',
        });
    }
    putMarketingGroupsByParentIdContactsById(id, parentId, marketingContact) {
        return this.request({
            path: `/marketing/groups/${parentId}/contacts/${id}`,
            method: 'put',
            data: marketingContact,
        });
    }
    patchMarketingGroupsByParentIdContactsById(id, parentId, patchOperations) {
        return this.request({
            path: `/marketing/groups/${parentId}/contacts/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getMarketingGroupsByParentIdContactsCount(parentId, params = {}) {
        return this.request({
            path: `/marketing/groups/${parentId}/contacts/count`,
            method: 'get',
            params,
        });
    }
    getMarketingGroupsCount(params = {}) {
        return this.request({
            path: `/marketing/groups/count`,
            method: 'get',
            params,
        });
    }
}
exports.MarketingAPI = MarketingAPI;
//# sourceMappingURL=MarketingAPI.js.map