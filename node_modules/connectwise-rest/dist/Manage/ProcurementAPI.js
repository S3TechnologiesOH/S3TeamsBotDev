"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProcurementAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module ProcurementAPI
 */
/**
 * Procurement module
 * @public
 */
class ProcurementAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getProcurementAdjustments(params = {}) {
        return this.request({
            path: `/procurement/adjustments`,
            method: 'get',
            params,
        });
    }
    postProcurementAdjustments(adjustment) {
        return this.request({
            path: `/procurement/adjustments`,
            method: 'post',
            data: adjustment,
        });
    }
    getProcurementAdjustmentsById(id, params = {}) {
        return this.request({
            path: `/procurement/adjustments/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementAdjustmentsById(id) {
        return this.request({
            path: `/procurement/adjustments/${id}`,
            method: 'delete',
        });
    }
    putProcurementAdjustmentsById(id, adjustment) {
        return this.request({
            path: `/procurement/adjustments/${id}`,
            method: 'put',
            data: adjustment,
        });
    }
    patchProcurementAdjustmentsById(id, patchOperations) {
        return this.request({
            path: `/procurement/adjustments/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementAdjustmentsByParentIdDetails(parentId, params = {}) {
        return this.request({
            path: `/procurement/adjustments/${parentId}/details`,
            method: 'get',
            params,
        });
    }
    postProcurementAdjustmentsByParentIdDetails(parentId, adjustmentDetail) {
        return this.request({
            path: `/procurement/adjustments/${parentId}/details`,
            method: 'post',
            data: adjustmentDetail,
        });
    }
    getProcurementAdjustmentsByParentIdDetailsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/adjustments/${parentId}/details/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementAdjustmentsByParentIdDetailsById(id, parentId) {
        return this.request({
            path: `/procurement/adjustments/${parentId}/details/${id}`,
            method: 'delete',
        });
    }
    getProcurementAdjustmentsByParentIdDetailsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/adjustments/${parentId}/details/count`,
            method: 'get',
            params,
        });
    }
    getProcurementAdjustmentsCount(params = {}) {
        return this.request({
            path: `/procurement/adjustments/count`,
            method: 'get',
            params,
        });
    }
    getProcurementAdjustmentsTypes(params = {}) {
        return this.request({
            path: `/procurement/adjustments/types`,
            method: 'get',
            params,
        });
    }
    postProcurementAdjustmentsTypes(adjustmentTypes) {
        return this.request({
            path: `/procurement/adjustments/types`,
            method: 'post',
            data: adjustmentTypes,
        });
    }
    getProcurementAdjustmentsTypesById(id, params = {}) {
        return this.request({
            path: `/procurement/adjustments/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementAdjustmentsTypesById(id) {
        return this.request({
            path: `/procurement/adjustments/types/${id}`,
            method: 'delete',
        });
    }
    putProcurementAdjustmentsTypesById(id, adjustmentTypes) {
        return this.request({
            path: `/procurement/adjustments/types/${id}`,
            method: 'put',
            data: adjustmentTypes,
        });
    }
    patchProcurementAdjustmentsTypesById(id, patchOperations) {
        return this.request({
            path: `/procurement/adjustments/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementAdjustmentsTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/adjustments/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementAdjustmentsTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/procurement/adjustments/types/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getProcurementAdjustmentsTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/procurement/adjustments/types/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getProcurementAdjustmentsTypesCount(params = {}) {
        return this.request({
            path: `/procurement/adjustments/types/count`,
            method: 'get',
            params,
        });
    }
    getProcurementAdjustmentsTypesInfo(params = {}) {
        return this.request({
            path: `/procurement/adjustments/types/info`,
            method: 'get',
            params,
        });
    }
    getProcurementAdjustmentsTypesInfoCount(params = {}) {
        return this.request({
            path: `/procurement/adjustments/types/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalog(params = {}) {
        return this.request({
            path: `/procurement/catalog`,
            method: 'get',
            params,
        });
    }
    postProcurementCatalog(catalogItem) {
        return this.request({
            path: `/procurement/catalog`,
            method: 'post',
            data: catalogItem,
        });
    }
    getProcurementCatalogByCatalogItemIdentifierQuantityOnHand(catalogItemIdentifier, warehouseBinId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${catalogItemIdentifier}/quantityOnHand`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogById(id, params = {}) {
        return this.request({
            path: `/procurement/catalog/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementCatalogById(id) {
        return this.request({
            path: `/procurement/catalog/${id}`,
            method: 'delete',
        });
    }
    putProcurementCatalogById(id, catalogItem) {
        return this.request({
            path: `/procurement/catalog/${id}`,
            method: 'put',
            data: catalogItem,
        });
    }
    patchProcurementCatalogById(id, patchOperations) {
        return this.request({
            path: `/procurement/catalog/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementCatalogByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/catalog/${id}/info`,
            method: 'get',
            params,
        });
    }
    postProcurementCatalogByIdPricing(id, catalogPricing) {
        return this.request({
            path: `/procurement/catalog/${id}/pricing`,
            method: 'post',
            data: catalogPricing,
        });
    }
    getProcurementCatalogByParentIdComponents(parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/components`,
            method: 'get',
            params,
        });
    }
    postProcurementCatalogByParentIdComponents(parentId, catalogComponent) {
        return this.request({
            path: `/procurement/catalog/${parentId}/components`,
            method: 'post',
            data: catalogComponent,
        });
    }
    getProcurementCatalogByParentIdComponentsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/components/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementCatalogByParentIdComponentsById(id, parentId) {
        return this.request({
            path: `/procurement/catalog/${parentId}/components/${id}`,
            method: 'delete',
        });
    }
    putProcurementCatalogByParentIdComponentsById(id, parentId, catalogComponent) {
        return this.request({
            path: `/procurement/catalog/${parentId}/components/${id}`,
            method: 'put',
            data: catalogComponent,
        });
    }
    patchProcurementCatalogByParentIdComponentsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/catalog/${parentId}/components/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementCatalogByParentIdComponentsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/components/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogByParentIdInventory(parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/inventory`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogByParentIdInventoryById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/inventory/${id}`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogByParentIdInventoryCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/inventory/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogByParentIdMinimumStockByWarehouse(parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/minimumStockByWarehouse`,
            method: 'get',
            params,
        });
    }
    postProcurementCatalogByParentIdMinimumStockByWarehouse(parentId, minimumStockByWarehouse) {
        return this.request({
            path: `/procurement/catalog/${parentId}/minimumStockByWarehouse`,
            method: 'post',
            data: minimumStockByWarehouse,
        });
    }
    getProcurementCatalogByParentIdMinimumStockByWarehouseById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/minimumStockByWarehouse/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementCatalogByParentIdMinimumStockByWarehouseById(id, parentId) {
        return this.request({
            path: `/procurement/catalog/${parentId}/minimumStockByWarehouse/${id}`,
            method: 'delete',
        });
    }
    putProcurementCatalogByParentIdMinimumStockByWarehouseById(id, parentId, minimumStockByWarehouse) {
        return this.request({
            path: `/procurement/catalog/${parentId}/minimumStockByWarehouse/${id}`,
            method: 'put',
            data: minimumStockByWarehouse,
        });
    }
    patchProcurementCatalogByParentIdMinimumStockByWarehouseById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/catalog/${parentId}/minimumStockByWarehouse/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementCatalogByParentIdMinimumStockByWarehouseCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/catalog/${parentId}/minimumStockByWarehouse/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogCount(params = {}) {
        return this.request({
            path: `/procurement/catalog/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogInfo(params = {}) {
        return this.request({
            path: `/procurement/catalog/info`,
            method: 'get',
            params,
        });
    }
    getProcurementCatalogInfoCount(params = {}) {
        return this.request({
            path: `/procurement/catalog/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCategories(params = {}) {
        return this.request({
            path: `/procurement/categories`,
            method: 'get',
            params,
        });
    }
    postProcurementCategories(category) {
        return this.request({
            path: `/procurement/categories`,
            method: 'post',
            data: category,
        });
    }
    getProcurementCategoriesById(id, params = {}) {
        return this.request({
            path: `/procurement/categories/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementCategoriesById(id) {
        return this.request({
            path: `/procurement/categories/${id}`,
            method: 'delete',
        });
    }
    putProcurementCategoriesById(id, category) {
        return this.request({
            path: `/procurement/categories/${id}`,
            method: 'put',
            data: category,
        });
    }
    patchProcurementCategoriesById(id, patchOperations) {
        return this.request({
            path: `/procurement/categories/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementCategoriesByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/categories/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementCategoriesByParentIdSubcategories(parentId, params = {}) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/`,
            method: 'get',
            params,
        });
    }
    postProcurementCategoriesByParentIdSubcategories(parentId, subCategory) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/`,
            method: 'post',
            data: subCategory,
        });
    }
    getProcurementCategoriesByParentIdSubcategoriesById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementCategoriesByParentIdSubcategoriesById(id, parentId) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/${id}`,
            method: 'delete',
        });
    }
    putProcurementCategoriesByParentIdSubcategoriesById(id, parentId, subCategory) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/${id}`,
            method: 'put',
            data: subCategory,
        });
    }
    patchProcurementCategoriesByParentIdSubcategoriesById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementCategoriesByParentIdSubcategoriesByIdInfo(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementCategoriesByParentIdSubcategoriesCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCategoriesByParentIdSubcategoriesInfo(parentId, params = {}) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/info`,
            method: 'get',
            params,
        });
    }
    getProcurementCategoriesByParentIdSubcategoriesInfoCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/categories/${parentId}/subcategories/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCategoriesCount(params = {}) {
        return this.request({
            path: `/procurement/categories/count`,
            method: 'get',
            params,
        });
    }
    getProcurementCategoriesInfo(params = {}) {
        return this.request({
            path: `/procurement/categories/info`,
            method: 'get',
            params,
        });
    }
    getProcurementCategoriesInfoCount(params = {}) {
        return this.request({
            path: `/procurement/categories/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementManufacturers(params = {}) {
        return this.request({
            path: `/procurement/manufacturers`,
            method: 'get',
            params,
        });
    }
    postProcurementManufacturers(manufacturer) {
        return this.request({
            path: `/procurement/manufacturers`,
            method: 'post',
            data: manufacturer,
        });
    }
    getProcurementManufacturersById(id, params = {}) {
        return this.request({
            path: `/procurement/manufacturers/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementManufacturersById(id) {
        return this.request({
            path: `/procurement/manufacturers/${id}`,
            method: 'delete',
        });
    }
    putProcurementManufacturersById(id, manufacturer) {
        return this.request({
            path: `/procurement/manufacturers/${id}`,
            method: 'put',
            data: manufacturer,
        });
    }
    patchProcurementManufacturersById(id, patchOperations) {
        return this.request({
            path: `/procurement/manufacturers/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementManufacturersByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/manufacturers/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementManufacturersCount(params = {}) {
        return this.request({
            path: `/procurement/manufacturers/count`,
            method: 'get',
            params,
        });
    }
    getProcurementManufacturersCountInfo(params = {}) {
        return this.request({
            path: `/procurement/manufacturers/count/info`,
            method: 'get',
            params,
        });
    }
    getProcurementManufacturersInfo(params = {}) {
        return this.request({
            path: `/procurement/manufacturers/info`,
            method: 'get',
            params,
        });
    }
    getProcurementOnhandserialnumbers(params = {}) {
        return this.request({
            path: `/procurement/onhandserialnumbers`,
            method: 'get',
            params,
        });
    }
    getProcurementOnhandserialnumbersById(id, params = {}) {
        return this.request({
            path: `/procurement/onhandserialnumbers/${id}`,
            method: 'get',
            params,
        });
    }
    getProcurementOnhandserialnumbersCount(params = {}) {
        return this.request({
            path: `/procurement/onhandserialnumbers/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPricingschedules(params = {}) {
        return this.request({
            path: `/procurement/pricingschedules`,
            method: 'get',
            params,
        });
    }
    postProcurementPricingschedules(pricingSchedule) {
        return this.request({
            path: `/procurement/pricingschedules`,
            method: 'post',
            data: pricingSchedule,
        });
    }
    getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaks(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/${grandparentId}/details/${parentId}/breaks`,
            method: 'get',
            params,
        });
    }
    postProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaks(parentId, grandparentId, pricingBreak) {
        return this.request({
            path: `/procurement/pricingschedules/${grandparentId}/details/${parentId}/breaks`,
            method: 'post',
            data: pricingBreak,
        });
    }
    getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/${grandparentId}/details/${parentId}/breaks/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById(id, parentId, grandparentId) {
        return this.request({
            path: `/procurement/pricingschedules/${grandparentId}/details/${parentId}/breaks/${id}`,
            method: 'delete',
        });
    }
    putProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById(id, parentId, grandparentId, pricingBreak) {
        return this.request({
            path: `/procurement/pricingschedules/${grandparentId}/details/${parentId}/breaks/${id}`,
            method: 'put',
            data: pricingBreak,
        });
    }
    patchProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/procurement/pricingschedules/${grandparentId}/details/${parentId}/breaks/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/${grandparentId}/details/${parentId}/breaks/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPricingschedulesById(id, params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPricingschedulesById(id) {
        return this.request({
            path: `/procurement/pricingschedules/${id}`,
            method: 'delete',
        });
    }
    putProcurementPricingschedulesById(id, pricingSchedule) {
        return this.request({
            path: `/procurement/pricingschedules/${id}`,
            method: 'put',
            data: pricingSchedule,
        });
    }
    patchProcurementPricingschedulesById(id, patchOperations) {
        return this.request({
            path: `/procurement/pricingschedules/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementPricingschedulesByParentIdDetails(parentId, params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/${parentId}/details`,
            method: 'get',
            params,
        });
    }
    postProcurementPricingschedulesByParentIdDetails(parentId, pricingDetail) {
        return this.request({
            path: `/procurement/pricingschedules/${parentId}/details`,
            method: 'post',
            data: pricingDetail,
        });
    }
    getProcurementPricingschedulesByParentIdDetailsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/${parentId}/details/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPricingschedulesByParentIdDetailsById(id, parentId) {
        return this.request({
            path: `/procurement/pricingschedules/${parentId}/details/${id}`,
            method: 'delete',
        });
    }
    putProcurementPricingschedulesByParentIdDetailsById(id, parentId, pricingDetail) {
        return this.request({
            path: `/procurement/pricingschedules/${parentId}/details/${id}`,
            method: 'put',
            data: pricingDetail,
        });
    }
    patchProcurementPricingschedulesByParentIdDetailsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/pricingschedules/${parentId}/details/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementPricingschedulesByParentIdDetailsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/${parentId}/details/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPricingschedulesCount(params = {}) {
        return this.request({
            path: `/procurement/pricingschedules/count`,
            method: 'get',
            params,
        });
    }
    getProcurementProducts(params = {}) {
        return this.request({
            path: `/procurement/products`,
            method: 'get',
            params,
        });
    }
    postProcurementProducts(productItem) {
        return this.request({
            path: `/procurement/products`,
            method: 'post',
            data: productItem,
        });
    }
    getProcurementProductsById(id, params = {}) {
        return this.request({
            path: `/procurement/products/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementProductsById(id) {
        return this.request({
            path: `/procurement/products/${id}`,
            method: 'delete',
        });
    }
    putProcurementProductsById(id, productItem) {
        return this.request({
            path: `/procurement/products/${id}`,
            method: 'put',
            data: productItem,
        });
    }
    patchProcurementProductsById(id, patchOperations) {
        return this.request({
            path: `/procurement/products/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postProcurementProductsByIdDetach(id, detach) {
        return this.request({
            path: `/procurement/products/${id}/detach`,
            method: 'post',
            data: detach,
        });
    }
    getProcurementProductsByParentIdComponents(parentId, params = {}) {
        return this.request({
            path: `/procurement/products/${parentId}/components`,
            method: 'get',
            params,
        });
    }
    postProcurementProductsByParentIdComponents(parentId, productComponent) {
        return this.request({
            path: `/procurement/products/${parentId}/components`,
            method: 'post',
            data: productComponent,
        });
    }
    getProcurementProductsByParentIdComponentsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/products/${parentId}/components/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementProductsByParentIdComponentsById(id, parentId) {
        return this.request({
            path: `/procurement/products/${parentId}/components/${id}`,
            method: 'delete',
        });
    }
    putProcurementProductsByParentIdComponentsById(id, parentId, productComponent) {
        return this.request({
            path: `/procurement/products/${parentId}/components/${id}`,
            method: 'put',
            data: productComponent,
        });
    }
    patchProcurementProductsByParentIdComponentsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/products/${parentId}/components/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementProductsByParentIdComponentsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/products/${parentId}/components/count`,
            method: 'get',
            params,
        });
    }
    getProcurementProductsByParentIdPickingShippingDetails(parentId, params = {}) {
        return this.request({
            path: `/procurement/products/${parentId}/pickingShippingDetails`,
            method: 'get',
            params,
        });
    }
    postProcurementProductsByParentIdPickingShippingDetails(parentId, productPickingShippingDetails) {
        return this.request({
            path: `/procurement/products/${parentId}/pickingShippingDetails`,
            method: 'post',
            data: productPickingShippingDetails,
        });
    }
    getProcurementProductsByParentIdPickingShippingDetailsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/products/${parentId}/pickingShippingDetails/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementProductsByParentIdPickingShippingDetailsById(id, parentId) {
        return this.request({
            path: `/procurement/products/${parentId}/pickingShippingDetails/${id}`,
            method: 'delete',
        });
    }
    putProcurementProductsByParentIdPickingShippingDetailsById(id, parentId, productPickingShippingDetails) {
        return this.request({
            path: `/procurement/products/${parentId}/pickingShippingDetails/${id}`,
            method: 'put',
            data: productPickingShippingDetails,
        });
    }
    patchProcurementProductsByParentIdPickingShippingDetailsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/products/${parentId}/pickingShippingDetails/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementProductsByParentIdPickingShippingDetailsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/products/${parentId}/pickingShippingDetails/count`,
            method: 'get',
            params,
        });
    }
    getProcurementProductsCount(params = {}) {
        return this.request({
            path: `/procurement/products/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPurchaseorders(params = {}) {
        return this.request({
            path: `/procurement/purchaseorders`,
            method: 'get',
            params,
        });
    }
    postProcurementPurchaseorders(purchaseOrder) {
        return this.request({
            path: `/procurement/purchaseorders`,
            method: 'post',
            data: purchaseOrder,
        });
    }
    getProcurementPurchaseordersById(id, params = {}) {
        return this.request({
            path: `/procurement/purchaseorders/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPurchaseordersById(id) {
        return this.request({
            path: `/procurement/purchaseorders/${id}`,
            method: 'delete',
        });
    }
    putProcurementPurchaseordersById(id, purchaseOrder) {
        return this.request({
            path: `/procurement/purchaseorders/${id}`,
            method: 'put',
            data: purchaseOrder,
        });
    }
    patchProcurementPurchaseordersById(id, patchOperations) {
        return this.request({
            path: `/procurement/purchaseorders/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementPurchaseordersByParentIdLineitems(parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems`,
            method: 'get',
            params,
        });
    }
    postProcurementPurchaseordersByParentIdLineitems(parentId, purchaseOrderLineItem) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems`,
            method: 'post',
            data: purchaseOrderLineItem,
        });
    }
    getProcurementPurchaseordersByParentIdLineitemsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPurchaseordersByParentIdLineitemsById(id, parentId) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/${id}`,
            method: 'delete',
        });
    }
    putProcurementPurchaseordersByParentIdLineitemsById(id, parentId, purchaseOrderLineItem) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/${id}`,
            method: 'put',
            data: purchaseOrderLineItem,
        });
    }
    patchProcurementPurchaseordersByParentIdLineitemsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postProcurementPurchaseordersByParentIdLineitemsBulk(parentId, purchaseOrderLineItems) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/bulk`,
            method: 'post',
            data: purchaseOrderLineItems,
        });
    }
    deleteProcurementPurchaseordersByParentIdLineitemsBulk(parentId, purchaseOrderLineItems) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/bulk`,
            method: 'delete',
            data: purchaseOrderLineItems,
        });
    }
    putProcurementPurchaseordersByParentIdLineitemsBulk(parentId, purchaseOrderLineItems) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/bulk`,
            method: 'put',
            data: purchaseOrderLineItems,
        });
    }
    getProcurementPurchaseordersByParentIdLineitemsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorders/${parentId}/lineitems/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPurchaseordersCount(params = {}) {
        return this.request({
            path: `/procurement/purchaseorders/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPurchaseorderstatuses(params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses`,
            method: 'get',
            params,
        });
    }
    postProcurementPurchaseorderstatuses(poStatus) {
        return this.request({
            path: `/procurement/purchaseorderstatuses`,
            method: 'post',
            data: poStatus,
        });
    }
    getProcurementPurchaseorderstatusesById(id, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPurchaseorderstatusesById(id) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${id}`,
            method: 'delete',
        });
    }
    patchProcurementPurchaseorderstatusesById(id, patchOperations) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    putProcurementPurchaseorderstatusesById(id, purchaseOrderStatus) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${id}`,
            method: 'put',
            data: purchaseOrderStatus,
        });
    }
    getProcurementPurchaseorderstatusesByIdUsages(id, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getProcurementPurchaseorderstatusesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getProcurementPurchaseorderstatusesByParentIdEmailtemplates(parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/emailtemplates/`,
            method: 'get',
            params,
        });
    }
    postProcurementPurchaseorderstatusesByParentIdEmailtemplates(parentId, purchaseOrderStatusEmailTemplate) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/emailtemplates/`,
            method: 'post',
            data: purchaseOrderStatusEmailTemplate,
        });
    }
    getProcurementPurchaseorderstatusesByParentIdEmailtemplatesById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/emailtemplates/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPurchaseorderstatusesByParentIdEmailtemplatesById(id, parentId) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/emailtemplates/${id}`,
            method: 'delete',
        });
    }
    putProcurementPurchaseorderstatusesByParentIdEmailtemplatesById(id, parentId, purchaseOrderStatusEmailTemplate) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/emailtemplates/${id}`,
            method: 'put',
            data: purchaseOrderStatusEmailTemplate,
        });
    }
    patchProcurementPurchaseorderstatusesByParentIdEmailtemplatesById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/emailtemplates/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementPurchaseorderstatusesByParentIdEmailtemplatesCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/emailtemplates/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPurchaseorderstatusesByParentIdNotifications(parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/notifications`,
            method: 'get',
            params,
        });
    }
    postProcurementPurchaseorderstatusesByParentIdNotifications(parentId, purchaseOrderStatusNotification) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/notifications`,
            method: 'post',
            data: purchaseOrderStatusNotification,
        });
    }
    getProcurementPurchaseorderstatusesByParentIdNotificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/notifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementPurchaseorderstatusesByParentIdNotificationsById(id, parentId) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/notifications/${id}`,
            method: 'delete',
        });
    }
    putProcurementPurchaseorderstatusesByParentIdNotificationsById(id, parentId, purchaseOrderStatusNotification) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/notifications/${id}`,
            method: 'put',
            data: purchaseOrderStatusNotification,
        });
    }
    patchProcurementPurchaseorderstatusesByParentIdNotificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/notifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementPurchaseorderstatusesByParentIdNotificationsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/${parentId}/notifications/count`,
            method: 'get',
            params,
        });
    }
    getProcurementPurchaseorderstatusesCount(params = {}) {
        return this.request({
            path: `/procurement/purchaseorderstatuses/count`,
            method: 'get',
            params,
        });
    }
    postProcurementPurchasingDemands(purchasingDemand) {
        return this.request({
            path: `/procurement/purchasingDemands`,
            method: 'post',
            data: purchasingDemand,
        });
    }
    getProcurementRmaActions(params = {}) {
        return this.request({
            path: `/procurement/rmaActions`,
            method: 'get',
            params,
        });
    }
    postProcurementRmaActions(rmaAction) {
        return this.request({
            path: `/procurement/rmaActions`,
            method: 'post',
            data: rmaAction,
        });
    }
    getProcurementRmaActionsById(id, params = {}) {
        return this.request({
            path: `/procurement/rmaActions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementRmaActionsById(id) {
        return this.request({
            path: `/procurement/rmaActions/${id}`,
            method: 'delete',
        });
    }
    putProcurementRmaActionsById(id, rmaAction) {
        return this.request({
            path: `/procurement/rmaActions/${id}`,
            method: 'put',
            data: rmaAction,
        });
    }
    patchProcurementRmaActionsById(id, patchOperations) {
        return this.request({
            path: `/procurement/rmaActions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementRmaActionsByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/rmaActions/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaActionsCount(params = {}) {
        return this.request({
            path: `/procurement/rmaActions/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaActionsInfo(params = {}) {
        return this.request({
            path: `/procurement/rmaActions/info`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaActionsInfoCount(params = {}) {
        return this.request({
            path: `/procurement/rmaActions/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRMADispositions(params = {}) {
        return this.request({
            path: `/procurement/RMADispositions`,
            method: 'get',
            params,
        });
    }
    postProcurementRMADispositions(rmaDisposition) {
        return this.request({
            path: `/procurement/RMADispositions`,
            method: 'post',
            data: rmaDisposition,
        });
    }
    getProcurementRMADispositionsById(id, params = {}) {
        return this.request({
            path: `/procurement/RMADispositions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementRMADispositionsById(id) {
        return this.request({
            path: `/procurement/RMADispositions/${id}`,
            method: 'delete',
        });
    }
    putProcurementRMADispositionsById(id, rmaDisposition) {
        return this.request({
            path: `/procurement/RMADispositions/${id}`,
            method: 'put',
            data: rmaDisposition,
        });
    }
    patchProcurementRMADispositionsById(id, patchOperations) {
        return this.request({
            path: `/procurement/RMADispositions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementRMADispositionsByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/RMADispositions/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementRMADispositionsCount(params = {}) {
        return this.request({
            path: `/procurement/RMADispositions/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRMADispositionsInfo(params = {}) {
        return this.request({
            path: `/procurement/RMADispositions/info`,
            method: 'get',
            params,
        });
    }
    getProcurementRMADispositionsInfoCount(params = {}) {
        return this.request({
            path: `/procurement/RMADispositions/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatuses(params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses`,
            method: 'get',
            params,
        });
    }
    postProcurementRmaStatuses(rmaStatus) {
        return this.request({
            path: `/procurement/rmaStatuses`,
            method: 'post',
            data: rmaStatus,
        });
    }
    getProcurementRmaStatusesById(id, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementRmaStatusesById(id) {
        return this.request({
            path: `/procurement/rmaStatuses/${id}`,
            method: 'delete',
        });
    }
    putProcurementRmaStatusesById(id, rmaStatus) {
        return this.request({
            path: `/procurement/rmaStatuses/${id}`,
            method: 'put',
            data: rmaStatus,
        });
    }
    patchProcurementRmaStatusesById(id, patchOperations) {
        return this.request({
            path: `/procurement/rmaStatuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementRmaStatusesByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatusesByIdUsages(id, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatusesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    postProcurementRmaStatusesByParentIdEmailtemplates(parentId, rmaStatusEmailTemplate) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/emailtemplates/`,
            method: 'post',
            data: rmaStatusEmailTemplate,
        });
    }
    getProcurementRmaStatusesByParentIdEmailTemplates(parentId, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/emailTemplates/`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatusesByParentIdEmailtemplatesById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/emailtemplates/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementRmaStatusesByParentIdEmailtemplatesById(id, parentId) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/emailtemplates/${id}`,
            method: 'delete',
        });
    }
    putProcurementRmaStatusesByParentIdEmailtemplatesById(id, parentId, rmaStatusEmailTemplate) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/emailtemplates/${id}`,
            method: 'put',
            data: rmaStatusEmailTemplate,
        });
    }
    patchProcurementRmaStatusesByParentIdEmailtemplatesById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/emailtemplates/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementRmaStatusesByParentIdEmailtemplatesCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/emailtemplates/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatusesByParentIdNotifications(parentId, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/notifications`,
            method: 'get',
            params,
        });
    }
    postProcurementRmaStatusesByParentIdNotifications(parentId, rmaStatusNotification) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/notifications`,
            method: 'post',
            data: rmaStatusNotification,
        });
    }
    getProcurementRmaStatusesByParentIdNotificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/notifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementRmaStatusesByParentIdNotificationsById(id, parentId) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/notifications/${id}`,
            method: 'delete',
        });
    }
    putProcurementRmaStatusesByParentIdNotificationsById(id, parentId, rmaStatusNotification) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/notifications/${id}`,
            method: 'put',
            data: rmaStatusNotification,
        });
    }
    patchProcurementRmaStatusesByParentIdNotificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/notifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementRmaStatusesByParentIdNotificationsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/${parentId}/notifications/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatusesCount(params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatusesInfo(params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/info`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaStatusesInfoCount(params = {}) {
        return this.request({
            path: `/procurement/rmaStatuses/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaTags(params = {}) {
        return this.request({
            path: `/procurement/rmaTags`,
            method: 'get',
            params,
        });
    }
    postProcurementRmaTags(rmaTag) {
        return this.request({
            path: `/procurement/rmaTags`,
            method: 'post',
            data: rmaTag,
        });
    }
    getProcurementRmaTagsById(id, params = {}) {
        return this.request({
            path: `/procurement/rmaTags/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementRmaTagsById(id) {
        return this.request({
            path: `/procurement/rmaTags/${id}`,
            method: 'delete',
        });
    }
    putProcurementRmaTagsById(id, rmaTag) {
        return this.request({
            path: `/procurement/rmaTags/${id}`,
            method: 'put',
            data: rmaTag,
        });
    }
    patchProcurementRmaTagsById(id, patchOperations) {
        return this.request({
            path: `/procurement/rmaTags/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementRmaTagsCount(params = {}) {
        return this.request({
            path: `/procurement/rmaTags/count`,
            method: 'get',
            params,
        });
    }
    getProcurementRmaTagsDefault(productId, billingLogId, ticketId, projectId, salesOrderId, companyId, params = {}) {
        return this.request({
            path: `/procurement/rmaTags/default`,
            method: 'get',
            params,
        });
    }
    getProcurementSettings(params = {}) {
        return this.request({
            path: `/procurement/settings`,
            method: 'get',
            params,
        });
    }
    getProcurementSettingsById(id, params = {}) {
        return this.request({
            path: `/procurement/settings/${id}`,
            method: 'get',
            params,
        });
    }
    putProcurementSettingsById(id, procurementSetting) {
        return this.request({
            path: `/procurement/settings/${id}`,
            method: 'put',
            data: procurementSetting,
        });
    }
    patchProcurementSettingsById(id, patchOperations) {
        return this.request({
            path: `/procurement/settings/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementSettingsCount(params = {}) {
        return this.request({
            path: `/procurement/settings/count`,
            method: 'get',
            params,
        });
    }
    getProcurementShipmentmethods(params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods`,
            method: 'get',
            params,
        });
    }
    postProcurementShipmentmethods(shipmentMethod) {
        return this.request({
            path: `/procurement/shipmentmethods`,
            method: 'post',
            data: shipmentMethod,
        });
    }
    getProcurementShipmentmethodsById(id, params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementShipmentmethodsById(id) {
        return this.request({
            path: `/procurement/shipmentmethods/${id}`,
            method: 'delete',
        });
    }
    putProcurementShipmentmethodsById(id, shipmentMethod) {
        return this.request({
            path: `/procurement/shipmentmethods/${id}`,
            method: 'put',
            data: shipmentMethod,
        });
    }
    patchProcurementShipmentmethodsById(id, patchOperations) {
        return this.request({
            path: `/procurement/shipmentmethods/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementShipmentmethodsByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementShipmentmethodsByIdUsages(id, params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getProcurementShipmentmethodsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getProcurementShipmentmethodsCount(params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods/count`,
            method: 'get',
            params,
        });
    }
    getProcurementShipmentmethodsInfo(params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods/info`,
            method: 'get',
            params,
        });
    }
    getProcurementShipmentmethodsInfoCount(params = {}) {
        return this.request({
            path: `/procurement/shipmentmethods/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementSubcategories(params = {}) {
        return this.request({
            path: `/procurement/subcategories/`,
            method: 'get',
            params,
        });
    }
    postProcurementSubcategories(subCategory) {
        return this.request({
            path: `/procurement/subcategories/`,
            method: 'post',
            data: subCategory,
        });
    }
    getProcurementSubcategoriesById(id, params = {}) {
        return this.request({
            path: `/procurement/subcategories/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementSubcategoriesById(id) {
        return this.request({
            path: `/procurement/subcategories/${id}`,
            method: 'delete',
        });
    }
    putProcurementSubcategoriesById(id, subCategory) {
        return this.request({
            path: `/procurement/subcategories/${id}`,
            method: 'put',
            data: subCategory,
        });
    }
    patchProcurementSubcategoriesById(id, patchOperations) {
        return this.request({
            path: `/procurement/subcategories/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementSubcategoriesByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/subcategories/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementSubcategoriesByIdUsages(id, params = {}) {
        return this.request({
            path: `/procurement/subcategories/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getProcurementSubcategoriesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/procurement/subcategories/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getProcurementSubcategoriesCount(params = {}) {
        return this.request({
            path: `/procurement/subcategories/count`,
            method: 'get',
            params,
        });
    }
    getProcurementSubcategoriesInfo(params = {}) {
        return this.request({
            path: `/procurement/subcategories/info/`,
            method: 'get',
            params,
        });
    }
    getProcurementSubcategoriesInfoCount(params = {}) {
        return this.request({
            path: `/procurement/subcategories/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementTypes(params = {}) {
        return this.request({
            path: `/procurement/types`,
            method: 'get',
            params,
        });
    }
    postProcurementTypes(productTypes) {
        return this.request({
            path: `/procurement/types`,
            method: 'post',
            data: productTypes,
        });
    }
    getProcurementTypesById(id, params = {}) {
        return this.request({
            path: `/procurement/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementTypesById(id) {
        return this.request({
            path: `/procurement/types/${id}`,
            method: 'delete',
        });
    }
    putProcurementTypesById(id, productTypes) {
        return this.request({
            path: `/procurement/types/${id}`,
            method: 'put',
            data: productTypes,
        });
    }
    patchProcurementTypesById(id, patchOperations) {
        return this.request({
            path: `/procurement/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/procurement/types/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getProcurementTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/procurement/types/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getProcurementTypesCount(params = {}) {
        return this.request({
            path: `/procurement/types/count`,
            method: 'get',
            params,
        });
    }
    getProcurementTypesInfo(params = {}) {
        return this.request({
            path: `/procurement/types/info`,
            method: 'get',
            params,
        });
    }
    getProcurementTypesInfoCount(params = {}) {
        return this.request({
            path: `/procurement/types/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementUnitOfMeasures(params = {}) {
        return this.request({
            path: `/procurement/unitOfMeasures`,
            method: 'get',
            params,
        });
    }
    postProcurementUnitOfMeasures(unitOfMeasure) {
        return this.request({
            path: `/procurement/unitOfMeasures`,
            method: 'post',
            data: unitOfMeasure,
        });
    }
    getProcurementUnitOfMeasuresById(id, params = {}) {
        return this.request({
            path: `/procurement/unitOfMeasures/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementUnitOfMeasuresById(id) {
        return this.request({
            path: `/procurement/unitOfMeasures/${id}`,
            method: 'delete',
        });
    }
    putProcurementUnitOfMeasuresById(id, unitOfMeasure) {
        return this.request({
            path: `/procurement/unitOfMeasures/${id}`,
            method: 'put',
            data: unitOfMeasure,
        });
    }
    patchProcurementUnitOfMeasuresById(id, patchOperations) {
        return this.request({
            path: `/procurement/unitOfMeasures/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementUnitOfMeasuresByParentIdConversions(parentId, params = {}) {
        return this.request({
            path: `/procurement/unitOfMeasures/${parentId}/conversions`,
            method: 'get',
            params,
        });
    }
    postProcurementUnitOfMeasuresByParentIdConversions(parentId, conversion) {
        return this.request({
            path: `/procurement/unitOfMeasures/${parentId}/conversions`,
            method: 'post',
            data: conversion,
        });
    }
    getProcurementUnitOfMeasuresByParentIdConversionsById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/unitOfMeasures/${parentId}/conversions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementUnitOfMeasuresByParentIdConversionsById(id, parentId) {
        return this.request({
            path: `/procurement/unitOfMeasures/${parentId}/conversions/${id}`,
            method: 'delete',
        });
    }
    putProcurementUnitOfMeasuresByParentIdConversionsById(id, parentId, conversion) {
        return this.request({
            path: `/procurement/unitOfMeasures/${parentId}/conversions/${id}`,
            method: 'put',
            data: conversion,
        });
    }
    patchProcurementUnitOfMeasuresByParentIdConversionsById(id, parentId, patchOperations) {
        return this.request({
            path: `/procurement/unitOfMeasures/${parentId}/conversions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementUnitOfMeasuresByParentIdConversionsCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/unitOfMeasures/${parentId}/conversions/count`,
            method: 'get',
            params,
        });
    }
    getProcurementUnitOfMeasuresCount(params = {}) {
        return this.request({
            path: `/procurement/unitOfMeasures/count`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouseBins(params = {}) {
        return this.request({
            path: `/procurement/warehouseBins`,
            method: 'get',
            params,
        });
    }
    postProcurementWarehouseBins(warehouseBin) {
        return this.request({
            path: `/procurement/warehouseBins`,
            method: 'post',
            data: warehouseBin,
        });
    }
    getProcurementWarehouseBinsById(id, params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementWarehouseBinsById(id) {
        return this.request({
            path: `/procurement/warehouseBins/${id}`,
            method: 'delete',
        });
    }
    putProcurementWarehouseBinsById(id, warehouseBin) {
        return this.request({
            path: `/procurement/warehouseBins/${id}`,
            method: 'put',
            data: warehouseBin,
        });
    }
    patchProcurementWarehouseBinsById(id, patchOperations) {
        return this.request({
            path: `/procurement/warehouseBins/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementWarehouseBinsByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouseBinsByParentIdInventoryOnHand(parentId, params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/${parentId}/inventoryOnHand`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouseBinsByParentIdInventoryOnHandById(id, parentId, params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/${parentId}/inventoryOnHand/${id}`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouseBinsByParentIdInventoryOnHandCount(parentId, params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/${parentId}/inventoryOnHand/count`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouseBinsCount(params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/count`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouseBinsInfo(params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/info`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouseBinsInfoCount(params = {}) {
        return this.request({
            path: `/procurement/warehouseBins/info/count`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehouses(params = {}) {
        return this.request({
            path: `/procurement/warehouses`,
            method: 'get',
            params,
        });
    }
    postProcurementWarehouses(warehouse) {
        return this.request({
            path: `/procurement/warehouses`,
            method: 'post',
            data: warehouse,
        });
    }
    getProcurementWarehousesById(id, params = {}) {
        return this.request({
            path: `/procurement/warehouses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteProcurementWarehousesById(id) {
        return this.request({
            path: `/procurement/warehouses/${id}`,
            method: 'delete',
        });
    }
    putProcurementWarehousesById(id, warehouse) {
        return this.request({
            path: `/procurement/warehouses/${id}`,
            method: 'put',
            data: warehouse,
        });
    }
    patchProcurementWarehousesById(id, patchOperations) {
        return this.request({
            path: `/procurement/warehouses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getProcurementWarehousesByIdInfo(id, params = {}) {
        return this.request({
            path: `/procurement/warehouses/${id}/info`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehousesCount(params = {}) {
        return this.request({
            path: `/procurement/warehouses/count`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehousesInfo(params = {}) {
        return this.request({
            path: `/procurement/warehouses/info`,
            method: 'get',
            params,
        });
    }
    getProcurementWarehousesInfoCount(params = {}) {
        return this.request({
            path: `/procurement/warehouses/info/count`,
            method: 'get',
            params,
        });
    }
}
exports.ProcurementAPI = ProcurementAPI;
//# sourceMappingURL=ProcurementAPI.js.map