"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module SalesAPI
 */
/**
 * Sales module
 * @public
 */
class SalesAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getSalesActivities(params = {}) {
        return this.request({
            path: `/sales/activities`,
            method: 'get',
            params,
        });
    }
    postSalesActivities(activity) {
        return this.request({
            path: `/sales/activities`,
            method: 'post',
            data: activity,
        });
    }
    getSalesActivitiesById(id, params = {}) {
        return this.request({
            path: `/sales/activities/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesActivitiesById(id) {
        return this.request({
            path: `/sales/activities/${id}`,
            method: 'delete',
        });
    }
    putSalesActivitiesById(id, activity) {
        return this.request({
            path: `/sales/activities/${id}`,
            method: 'put',
            data: activity,
        });
    }
    patchSalesActivitiesById(id, patchOperations) {
        return this.request({
            path: `/sales/activities/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesActivitiesCount(params = {}) {
        return this.request({
            path: `/sales/activities/count`,
            method: 'get',
            params,
        });
    }
    getSalesActivitiesStatuses(params = {}) {
        return this.request({
            path: `/sales/activities/statuses`,
            method: 'get',
            params,
        });
    }
    postSalesActivitiesStatuses(activityStatus) {
        return this.request({
            path: `/sales/activities/statuses`,
            method: 'post',
            data: activityStatus,
        });
    }
    getSalesActivitiesStatusesById(id, params = {}) {
        return this.request({
            path: `/sales/activities/statuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesActivitiesStatusesById(id) {
        return this.request({
            path: `/sales/activities/statuses/${id}`,
            method: 'delete',
        });
    }
    putSalesActivitiesStatusesById(id, activityStatus) {
        return this.request({
            path: `/sales/activities/statuses/${id}`,
            method: 'put',
            data: activityStatus,
        });
    }
    patchSalesActivitiesStatusesById(id, patchOperations) {
        return this.request({
            path: `/sales/activities/statuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesActivitiesStatusesByIdInfo(id, params = {}) {
        return this.request({
            path: `/sales/activities/statuses/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSalesActivitiesStatusesCount(params = {}) {
        return this.request({
            path: `/sales/activities/statuses/count`,
            method: 'get',
            params,
        });
    }
    getSalesActivitiesStatusesInfo(params = {}) {
        return this.request({
            path: `/sales/activities/statuses/info`,
            method: 'get',
            params,
        });
    }
    getSalesActivitiesStatusesInfoCount(params = {}) {
        return this.request({
            path: `/sales/activities/statuses/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesActivitiesTypes(params = {}) {
        return this.request({
            path: `/sales/activities/types`,
            method: 'get',
            params,
        });
    }
    postSalesActivitiesTypes(activityType) {
        return this.request({
            path: `/sales/activities/types`,
            method: 'post',
            data: activityType,
        });
    }
    getSalesActivitiesTypesById(id, params = {}) {
        return this.request({
            path: `/sales/activities/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesActivitiesTypesById(id) {
        return this.request({
            path: `/sales/activities/types/${id}`,
            method: 'delete',
        });
    }
    putSalesActivitiesTypesById(id, activityType) {
        return this.request({
            path: `/sales/activities/types/${id}`,
            method: 'put',
            data: activityType,
        });
    }
    patchSalesActivitiesTypesById(id, patchOperations) {
        return this.request({
            path: `/sales/activities/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesActivitiesTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/sales/activities/types/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSalesActivitiesTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/sales/activities/types/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSalesActivitiesTypesCount(params = {}) {
        return this.request({
            path: `/sales/activities/types/count`,
            method: 'get',
            params,
        });
    }
    getSalesCommissions(params = {}) {
        return this.request({
            path: `/sales/commissions`,
            method: 'get',
            params,
        });
    }
    postSalesCommissions(commission) {
        return this.request({
            path: `/sales/commissions`,
            method: 'post',
            data: commission,
        });
    }
    getSalesCommissionsById(id, params = {}) {
        return this.request({
            path: `/sales/commissions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesCommissionsById(id) {
        return this.request({
            path: `/sales/commissions/${id}`,
            method: 'delete',
        });
    }
    putSalesCommissionsById(id, commission) {
        return this.request({
            path: `/sales/commissions/${id}`,
            method: 'put',
            data: commission,
        });
    }
    patchSalesCommissionsById(id, patchOperations) {
        return this.request({
            path: `/sales/commissions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesCommissionsByIdUsages(id, params = {}) {
        return this.request({
            path: `/sales/commissions/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSalesCommissionsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/sales/commissions/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSalesCommissionsCount(params = {}) {
        return this.request({
            path: `/sales/commissions/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunities(params = {}) {
        return this.request({
            path: `/sales/opportunities`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunities(opportunity) {
        return this.request({
            path: `/sales/opportunities`,
            method: 'post',
            data: opportunity,
        });
    }
    getSalesOpportunitiesById(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOpportunitiesById(id) {
        return this.request({
            path: `/sales/opportunities/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesById(id, opportunity) {
        return this.request({
            path: `/sales/opportunities/${id}`,
            method: 'put',
            data: opportunity,
        });
    }
    patchSalesOpportunitiesById(id, patchOperations) {
        return this.request({
            path: `/sales/opportunities/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSalesOpportunitiesByIdConvertToAgreement(id, conversion) {
        return this.request({
            path: `/sales/opportunities/${id}/convertToAgreement`,
            method: 'post',
            data: conversion,
        });
    }
    postSalesOpportunitiesByIdConvertToProject(id, conversion) {
        return this.request({
            path: `/sales/opportunities/${id}/convertToProject`,
            method: 'post',
            data: conversion,
        });
    }
    postSalesOpportunitiesByIdConvertToSalesOrder(id, conversion) {
        return this.request({
            path: `/sales/opportunities/${id}/convertToSalesOrder`,
            method: 'post',
            data: conversion,
        });
    }
    postSalesOpportunitiesByIdConvertToServiceTicket(id, conversion) {
        return this.request({
            path: `/sales/opportunities/${id}/convertToServiceTicket`,
            method: 'post',
            data: conversion,
        });
    }
    getSalesOpportunitiesByParentIdContacts(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/contacts`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesByParentIdContacts(parentId, opportunityContact) {
        return this.request({
            path: `/sales/opportunities/${parentId}/contacts`,
            method: 'post',
            data: opportunityContact,
        });
    }
    getSalesOpportunitiesByParentIdContactsById(id, parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/contacts/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOpportunitiesByParentIdContactsById(id, parentId) {
        return this.request({
            path: `/sales/opportunities/${parentId}/contacts/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesByParentIdContactsById(id, parentId, opportunityContact) {
        return this.request({
            path: `/sales/opportunities/${parentId}/contacts/${id}`,
            method: 'put',
            data: opportunityContact,
        });
    }
    patchSalesOpportunitiesByParentIdContactsById(id, parentId, patchOperations) {
        return this.request({
            path: `/sales/opportunities/${parentId}/contacts/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOpportunitiesByParentIdContactsCount(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/contacts/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesByParentIdForecast(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesByParentIdForecast(parentId, forecast) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast`,
            method: 'post',
            data: forecast,
        });
    }
    deleteSalesOpportunitiesByParentIdForecast(parentId) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesByParentIdForecast(parentId, forecast) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/`,
            method: 'put',
            data: forecast,
        });
    }
    patchSalesOpportunitiesByParentIdForecast(parentId, patchOperations) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOpportunitiesByParentIdForecastById(id, parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/${id}`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesByParentIdForecastById(id, parentId, forecast) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/${id}`,
            method: 'post',
            data: forecast,
        });
    }
    deleteSalesOpportunitiesByParentIdForecastById(id, parentId) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesByParentIdForecastById(id, parentId, forecast) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/${id}`,
            method: 'put',
            data: forecast,
        });
    }
    patchSalesOpportunitiesByParentIdForecastById(id, parentId, patchOperations) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSalesOpportunitiesByParentIdForecastCopyById(id, parentId) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/copy/${id}`,
            method: 'post',
        });
    }
    getSalesOpportunitiesByParentIdForecastCount(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/forecast/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesByParentIdNotes(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/notes`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesByParentIdNotes(parentId, note) {
        return this.request({
            path: `/sales/opportunities/${parentId}/notes`,
            method: 'post',
            data: note,
        });
    }
    getSalesOpportunitiesByParentIdNotesById(id, parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/notes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOpportunitiesByParentIdNotesById(id, parentId) {
        return this.request({
            path: `/sales/opportunities/${parentId}/notes/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesByParentIdNotesById(id, parentId, note) {
        return this.request({
            path: `/sales/opportunities/${parentId}/notes/${id}`,
            method: 'put',
            data: note,
        });
    }
    patchSalesOpportunitiesByParentIdNotesById(id, parentId, patchOperations) {
        return this.request({
            path: `/sales/opportunities/${parentId}/notes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOpportunitiesByParentIdNotesCount(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/notes/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesByParentIdTeam(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/team`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesByParentIdTeam(parentId, team) {
        return this.request({
            path: `/sales/opportunities/${parentId}/team`,
            method: 'post',
            data: team,
        });
    }
    getSalesOpportunitiesByParentIdTeamById(id, parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/team/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOpportunitiesByParentIdTeamById(id, parentId) {
        return this.request({
            path: `/sales/opportunities/${parentId}/team/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesByParentIdTeamById(id, parentId, team) {
        return this.request({
            path: `/sales/opportunities/${parentId}/team/${id}`,
            method: 'put',
            data: team,
        });
    }
    patchSalesOpportunitiesByParentIdTeamById(id, parentId, patchOperations) {
        return this.request({
            path: `/sales/opportunities/${parentId}/team/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOpportunitiesByParentIdTeamCount(parentId, params = {}) {
        return this.request({
            path: `/sales/opportunities/${parentId}/team/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesCount(params = {}) {
        return this.request({
            path: `/sales/opportunities/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesDefault(params = {}) {
        return this.request({
            path: `/sales/opportunities/default`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesRatings(params = {}) {
        return this.request({
            path: `/sales/opportunities/ratings`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesRatings(opportunityRating) {
        return this.request({
            path: `/sales/opportunities/ratings`,
            method: 'post',
            data: opportunityRating,
        });
    }
    getSalesOpportunitiesRatingsById(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/ratings/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOpportunitiesRatingsById(id) {
        return this.request({
            path: `/sales/opportunities/ratings/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesRatingsById(id, opportunityRating) {
        return this.request({
            path: `/sales/opportunities/ratings/${id}`,
            method: 'put',
            data: opportunityRating,
        });
    }
    patchSalesOpportunitiesRatingsById(id, patchOperations) {
        return this.request({
            path: `/sales/opportunities/ratings/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOpportunitiesRatingsByIdInfo(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/ratings/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesRatingsCount(params = {}) {
        return this.request({
            path: `/sales/opportunities/ratings/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesRatingsInfo(params = {}) {
        return this.request({
            path: `/sales/opportunities/ratings/info`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesRatingsInfoCount(params = {}) {
        return this.request({
            path: `/sales/opportunities/ratings/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesStatuses(params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesStatuses(status) {
        return this.request({
            path: `/sales/opportunities/statuses`,
            method: 'post',
            data: status,
        });
    }
    getSalesOpportunitiesStatusesById(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOpportunitiesStatusesById(id) {
        return this.request({
            path: `/sales/opportunities/statuses/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesStatusesById(id, status) {
        return this.request({
            path: `/sales/opportunities/statuses/${id}`,
            method: 'put',
            data: status,
        });
    }
    patchSalesOpportunitiesStatusesById(id, patchOperations) {
        return this.request({
            path: `/sales/opportunities/statuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOpportunitiesStatusesByIdInfo(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesStatusesByIdUsages(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesStatusesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesStatusesCount(params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesStatusesInfo(params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses/info`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesStatusesInfoCount(params = {}) {
        return this.request({
            path: `/sales/opportunities/statuses/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesTypes(params = {}) {
        return this.request({
            path: `/sales/opportunities/types`,
            method: 'get',
            params,
        });
    }
    postSalesOpportunitiesTypes(opportunityType) {
        return this.request({
            path: `/sales/opportunities/types`,
            method: 'post',
            data: opportunityType,
        });
    }
    getSalesOpportunitiesTypesById(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOpportunitiesTypesById(id) {
        return this.request({
            path: `/sales/opportunities/types/${id}`,
            method: 'delete',
        });
    }
    putSalesOpportunitiesTypesById(id, opportunityType) {
        return this.request({
            path: `/sales/opportunities/types/${id}`,
            method: 'put',
            data: opportunityType,
        });
    }
    patchSalesOpportunitiesTypesById(id, patchOperations) {
        return this.request({
            path: `/sales/opportunities/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOpportunitiesTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/types/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/sales/opportunities/types/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesTypesCount(params = {}) {
        return this.request({
            path: `/sales/opportunities/types/count`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesTypesInfo(params = {}) {
        return this.request({
            path: `/sales/opportunities/types/info`,
            method: 'get',
            params,
        });
    }
    getSalesOpportunitiesTypesInfoCount(params = {}) {
        return this.request({
            path: `/sales/opportunities/types/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesOrders(params = {}) {
        return this.request({
            path: `/sales/orders`,
            method: 'get',
            params,
        });
    }
    postSalesOrders(order) {
        return this.request({
            path: `/sales/orders`,
            method: 'post',
            data: order,
        });
    }
    getSalesOrdersById(id, params = {}) {
        return this.request({
            path: `/sales/orders/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOrdersById(id) {
        return this.request({
            path: `/sales/orders/${id}`,
            method: 'delete',
        });
    }
    putSalesOrdersById(id, order) {
        return this.request({
            path: `/sales/orders/${id}`,
            method: 'put',
            data: order,
        });
    }
    patchSalesOrdersById(id, patchOperations) {
        return this.request({
            path: `/sales/orders/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSalesOrdersByIdConvertToServiceTicket(id) {
        return this.request({
            path: `/sales/orders/${id}/convertToServiceTicket`,
            method: 'post',
        });
    }
    getSalesOrdersCount(params = {}) {
        return this.request({
            path: `/sales/orders/count`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatuses(params = {}) {
        return this.request({
            path: `/sales/orders/statuses`,
            method: 'get',
            params,
        });
    }
    postSalesOrdersStatuses(status) {
        return this.request({
            path: `/sales/orders/statuses`,
            method: 'post',
            data: status,
        });
    }
    getSalesOrdersStatusesById(id, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOrdersStatusesById(id) {
        return this.request({
            path: `/sales/orders/statuses/${id}`,
            method: 'delete',
        });
    }
    putSalesOrdersStatusesById(id, status) {
        return this.request({
            path: `/sales/orders/statuses/${id}`,
            method: 'put',
            data: status,
        });
    }
    patchSalesOrdersStatusesById(id, patchOperations) {
        return this.request({
            path: `/sales/orders/statuses/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOrdersStatusesByIdInfo(id, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatusesByIdUsages(id, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatusesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatusesByParentIdEmailtemplates(parentId, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/emailtemplates/`,
            method: 'get',
            params,
        });
    }
    postSalesOrdersStatusesByParentIdEmailtemplates(parentId, orderStatusEmailTemplate) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/emailtemplates/`,
            method: 'post',
            data: orderStatusEmailTemplate,
        });
    }
    getSalesOrdersStatusesByParentIdEmailtemplatesById(id, parentId, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/emailtemplates/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOrdersStatusesByParentIdEmailtemplatesById(id, parentId) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/emailtemplates/${id}`,
            method: 'delete',
        });
    }
    putSalesOrdersStatusesByParentIdEmailtemplatesById(id, parentId, orderStatusEmailTemplate) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/emailtemplates/${id}`,
            method: 'put',
            data: orderStatusEmailTemplate,
        });
    }
    patchSalesOrdersStatusesByParentIdEmailtemplatesById(id, parentId, patchOperations) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/emailtemplates/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOrdersStatusesByParentIdEmailtemplatesCount(parentId, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/emailtemplates/count`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatusesByParentIdNotifications(parentId, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/notifications`,
            method: 'get',
            params,
        });
    }
    postSalesOrdersStatusesByParentIdNotifications(parentId, orderStatusNotification) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/notifications`,
            method: 'post',
            data: orderStatusNotification,
        });
    }
    getSalesOrdersStatusesByParentIdNotificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/notifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesOrdersStatusesByParentIdNotificationsById(id, parentId) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/notifications/${id}`,
            method: 'delete',
        });
    }
    putSalesOrdersStatusesByParentIdNotificationsById(id, parentId, orderStatusNotification) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/notifications/${id}`,
            method: 'put',
            data: orderStatusNotification,
        });
    }
    patchSalesOrdersStatusesByParentIdNotificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/notifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesOrdersStatusesByParentIdNotificationsCount(parentId, params = {}) {
        return this.request({
            path: `/sales/orders/statuses/${parentId}/notifications/count`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatusesCount(params = {}) {
        return this.request({
            path: `/sales/orders/statuses/count`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatusesInfo(params = {}) {
        return this.request({
            path: `/sales/orders/statuses/info`,
            method: 'get',
            params,
        });
    }
    getSalesOrdersStatusesInfoCount(params = {}) {
        return this.request({
            path: `/sales/orders/statuses/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesProbabilities(params = {}) {
        return this.request({
            path: `/sales/probabilities`,
            method: 'get',
            params,
        });
    }
    postSalesProbabilities(probability) {
        return this.request({
            path: `/sales/probabilities`,
            method: 'post',
            data: probability,
        });
    }
    getSalesProbabilitiesById(id, params = {}) {
        return this.request({
            path: `/sales/probabilities/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesProbabilitiesById(id) {
        return this.request({
            path: `/sales/probabilities/${id}`,
            method: 'delete',
        });
    }
    putSalesProbabilitiesById(id, probability) {
        return this.request({
            path: `/sales/probabilities/${id}`,
            method: 'put',
            data: probability,
        });
    }
    patchSalesProbabilitiesById(id, patchOperations) {
        return this.request({
            path: `/sales/probabilities/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesProbabilitiesByIdInfo(id, params = {}) {
        return this.request({
            path: `/sales/probabilities/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSalesProbabilitiesCount(params = {}) {
        return this.request({
            path: `/sales/probabilities/count`,
            method: 'get',
            params,
        });
    }
    getSalesProbabilitiesInfo(params = {}) {
        return this.request({
            path: `/sales/probabilities/info`,
            method: 'get',
            params,
        });
    }
    getSalesProbabilitiesInfoCount(params = {}) {
        return this.request({
            path: `/sales/probabilities/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesQuotas(params = {}) {
        return this.request({
            path: `/sales/quotas`,
            method: 'get',
            params,
        });
    }
    postSalesQuotas(salesQuota) {
        return this.request({
            path: `/sales/quotas`,
            method: 'post',
            data: salesQuota,
        });
    }
    getSalesQuotasById(id, params = {}) {
        return this.request({
            path: `/sales/quotas/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesQuotasById(id) {
        return this.request({
            path: `/sales/quotas/${id}`,
            method: 'delete',
        });
    }
    putSalesQuotasById(id, salesQuota) {
        return this.request({
            path: `/sales/quotas/${id}`,
            method: 'put',
            data: salesQuota,
        });
    }
    patchSalesQuotasById(id, patchOperations) {
        return this.request({
            path: `/sales/quotas/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesQuotasCount(params = {}) {
        return this.request({
            path: `/sales/quotas/count`,
            method: 'get',
            params,
        });
    }
    getSalesRoles(params = {}) {
        return this.request({
            path: `/sales/roles`,
            method: 'get',
            params,
        });
    }
    postSalesRoles(role) {
        return this.request({
            path: `/sales/roles`,
            method: 'post',
            data: role,
        });
    }
    getSalesRolesById(id, params = {}) {
        return this.request({
            path: `/sales/roles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesRolesById(id) {
        return this.request({
            path: `/sales/roles/${id}`,
            method: 'delete',
        });
    }
    putSalesRolesById(id, role) {
        return this.request({
            path: `/sales/roles/${id}`,
            method: 'put',
            data: role,
        });
    }
    patchSalesRolesById(id, patchOperations) {
        return this.request({
            path: `/sales/roles/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesRolesCount(params = {}) {
        return this.request({
            path: `/sales/roles/count`,
            method: 'get',
            params,
        });
    }
    getSalesSalesTeams(params = {}) {
        return this.request({
            path: `/sales/salesTeams`,
            method: 'get',
            params,
        });
    }
    postSalesSalesTeams(salesTeam) {
        return this.request({
            path: `/sales/salesTeams`,
            method: 'post',
            data: salesTeam,
        });
    }
    getSalesSalesTeamsById(id, params = {}) {
        return this.request({
            path: `/sales/salesTeams/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesSalesTeamsById(id) {
        return this.request({
            path: `/sales/salesTeams/${id}`,
            method: 'delete',
        });
    }
    putSalesSalesTeamsById(id, salesTeam) {
        return this.request({
            path: `/sales/salesTeams/${id}`,
            method: 'put',
            data: salesTeam,
        });
    }
    patchSalesSalesTeamsById(id, patchOperations) {
        return this.request({
            path: `/sales/salesTeams/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesSalesTeamsByParentIdMembers(parentId, params = {}) {
        return this.request({
            path: `/sales/salesTeams/${parentId}/members`,
            method: 'get',
            params,
        });
    }
    postSalesSalesTeamsByParentIdMembers(parentId, salesTeamMember) {
        return this.request({
            path: `/sales/salesTeams/${parentId}/members`,
            method: 'post',
            data: salesTeamMember,
        });
    }
    getSalesSalesTeamsByParentIdMembersById(id, parentId, params = {}) {
        return this.request({
            path: `/sales/salesTeams/${parentId}/members/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesSalesTeamsByParentIdMembersById(id, parentId) {
        return this.request({
            path: `/sales/salesTeams/${parentId}/members/${id}`,
            method: 'delete',
        });
    }
    putSalesSalesTeamsByParentIdMembersById(id, parentId, salesTeamMember) {
        return this.request({
            path: `/sales/salesTeams/${parentId}/members/${id}`,
            method: 'put',
            data: salesTeamMember,
        });
    }
    patchSalesSalesTeamsByParentIdMembersById(id, parentId, patchOperations) {
        return this.request({
            path: `/sales/salesTeams/${parentId}/members/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesSalesTeamsByParentIdMembersCount(parentId, params = {}) {
        return this.request({
            path: `/sales/salesTeams/${parentId}/members/count`,
            method: 'get',
            params,
        });
    }
    getSalesSalesTeamsCount(params = {}) {
        return this.request({
            path: `/sales/salesTeams/count`,
            method: 'get',
            params,
        });
    }
    getSalesScheduleHolidaylistsInfoCount(params = {}) {
        return this.request({
            path: `/sales/schedule/holidaylists/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesServicePriorityInfoCount(params = {}) {
        return this.request({
            path: `/sales/service/priority/info/count`,
            method: 'get',
            params,
        });
    }
    getSalesStages(params = {}) {
        return this.request({
            path: `/sales/stages`,
            method: 'get',
            params,
        });
    }
    postSalesStages(stage) {
        return this.request({
            path: `/sales/stages`,
            method: 'post',
            data: stage,
        });
    }
    getSalesStagesById(id, params = {}) {
        return this.request({
            path: `/sales/stages/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSalesStagesById(id) {
        return this.request({
            path: `/sales/stages/${id}`,
            method: 'delete',
        });
    }
    putSalesStagesById(id, stage) {
        return this.request({
            path: `/sales/stages/${id}`,
            method: 'put',
            data: stage,
        });
    }
    patchSalesStagesById(id, patchOperations) {
        return this.request({
            path: `/sales/stages/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSalesStagesByIdInfo(id, params = {}) {
        return this.request({
            path: `/sales/stages/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSalesStagesByIdUsages(id, params = {}) {
        return this.request({
            path: `/sales/stages/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSalesStagesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/sales/stages/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSalesStagesCount(params = {}) {
        return this.request({
            path: `/sales/stages/count`,
            method: 'get',
            params,
        });
    }
    getSalesStagesInfo(params = {}) {
        return this.request({
            path: `/sales/stages/info`,
            method: 'get',
            params,
        });
    }
    getSalesStagesInfoCount(params = {}) {
        return this.request({
            path: `/sales/stages/info/count`,
            method: 'get',
            params,
        });
    }
}
exports.SalesAPI = SalesAPI;
//# sourceMappingURL=SalesAPI.js.map