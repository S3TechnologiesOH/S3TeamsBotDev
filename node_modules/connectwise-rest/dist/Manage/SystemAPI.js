"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module SystemAPI
 */
/**
 * System module
 * @public
 */
class SystemAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getSystemAllowedfiletypes(params = {}) {
        return this.request({
            path: `/system/allowedfiletypes/`,
            method: 'get',
            params,
        });
    }
    postSystemAllowedFileTypes(allowedFileType) {
        return this.request({
            path: `/system/AllowedFileTypes/`,
            method: 'post',
            data: allowedFileType,
        });
    }
    getSystemAllowedfiletypesById(id, params = {}) {
        return this.request({
            path: `/system/allowedfiletypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemAllowedfiletypesById(id) {
        return this.request({
            path: `/system/allowedfiletypes/${id}`,
            method: 'delete',
        });
    }
    putSystemAllowedfiletypesById(id, AllowedFileType) {
        return this.request({
            path: `/system/allowedfiletypes/${id}`,
            method: 'put',
            data: AllowedFileType,
        });
    }
    patchSystemAllowedfiletypesById(id, patchOperations) {
        return this.request({
            path: `/system/allowedfiletypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemAllowedfiletypesCount(params = {}) {
        return this.request({
            path: `/system/allowedfiletypes/count`,
            method: 'get',
            params,
        });
    }
    getSystemAllowedorigins(params = {}) {
        return this.request({
            path: `/system/allowedorigins`,
            method: 'get',
            params,
        });
    }
    postSystemAllowedorigins(origin) {
        return this.request({
            path: `/system/allowedorigins`,
            method: 'post',
            data: origin,
        });
    }
    getSystemAllowedoriginsById(id, params = {}) {
        return this.request({
            path: `/system/allowedorigins/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemAllowedoriginsById(id) {
        return this.request({
            path: `/system/allowedorigins/${id}`,
            method: 'delete',
        });
    }
    putSystemAllowedoriginsById(id, origin) {
        return this.request({
            path: `/system/allowedorigins/${id}`,
            method: 'put',
            data: origin,
        });
    }
    patchSystemAllowedoriginsById(id, patchOperations) {
        return this.request({
            path: `/system/allowedorigins/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemAllowedoriginsCount(params = {}) {
        return this.request({
            path: `/system/allowedorigins/count`,
            method: 'get',
            params,
        });
    }
    getSystemApiMembers(params = {}) {
        return this.request({
            path: `/system/apiMembers`,
            method: 'get',
            params,
        });
    }
    postSystemApiMembers(apiMember) {
        return this.request({
            path: `/system/apiMembers`,
            method: 'post',
            data: apiMember,
        });
    }
    getSystemApiMembersById(id, params = {}) {
        return this.request({
            path: `/system/apiMembers/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemApiMembersById(id, apiMember) {
        return this.request({
            path: `/system/apiMembers/${id}`,
            method: 'put',
            data: apiMember,
        });
    }
    patchSystemApiMembersById(id, patchOperations) {
        return this.request({
            path: `/system/apiMembers/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemApiMembersCount(params = {}) {
        return this.request({
            path: `/system/apiMembers/count`,
            method: 'get',
            params,
        });
    }
    getSystemApiMembersDefault(params = {}) {
        return this.request({
            path: `/system/apiMembers/default`,
            method: 'get',
            params,
        });
    }
    getSystemAudittrail(params = {}) {
        return this.request({
            path: `/system/audittrail`,
            method: 'get',
            params,
        });
    }
    getSystemAudittrailCount(params = {}) {
        return this.request({
            path: `/system/audittrail/count`,
            method: 'get',
            params,
        });
    }
    getSystemAuthAnvils(params = {}) {
        return this.request({
            path: `/system/authAnvils`,
            method: 'get',
            params,
        });
    }
    getSystemAuthAnvilsById(id, params = {}) {
        return this.request({
            path: `/system/authAnvils/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemAuthAnvilsById(id, authAnvil) {
        return this.request({
            path: `/system/authAnvils/${id}`,
            method: 'put',
            data: authAnvil,
        });
    }
    patchSystemAuthAnvilsById(id, patchOperations) {
        return this.request({
            path: `/system/authAnvils/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemAuthAnvilsCount(params = {}) {
        return this.request({
            path: `/system/authAnvils/count`,
            method: 'get',
            params,
        });
    }
    getSystemAuthAnvilsTestConnection(params = {}) {
        return this.request({
            path: `/system/authAnvils/testConnection`,
            method: 'get',
            params,
        });
    }
    getSystemAutoSyncTime(params = {}) {
        return this.request({
            path: `/system/autoSyncTime`,
            method: 'get',
            params,
        });
    }
    postSystemAutoSyncTime(autoSyncTime) {
        return this.request({
            path: `/system/autoSyncTime`,
            method: 'post',
            data: autoSyncTime,
        });
    }
    getSystemAutoSyncTimeById(id, params = {}) {
        return this.request({
            path: `/system/autoSyncTime/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemAutoSyncTimeById(id) {
        return this.request({
            path: `/system/autoSyncTime/${id}`,
            method: 'delete',
        });
    }
    putSystemAutoSyncTimeById(id, autoSyncTime) {
        return this.request({
            path: `/system/autoSyncTime/${id}`,
            method: 'put',
            data: autoSyncTime,
        });
    }
    patchSystemAutoSyncTimeById(id, patchOperations) {
        return this.request({
            path: `/system/autoSyncTime/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemAutoSyncTimeCount(params = {}) {
        return this.request({
            path: `/system/autoSyncTime/count`,
            method: 'get',
            params,
        });
    }
    postSystemBundles(requests) {
        return this.request({
            path: `/system/bundles`,
            method: 'post',
            data: requests,
        });
    }
    postSystemBundlesCount(requests) {
        return this.request({
            path: `/system/bundles/count`,
            method: 'post',
            data: requests,
        });
    }
    getSystemCallbacks(params = {}) {
        return this.request({
            path: `/system/callbacks`,
            method: 'get',
            params,
        });
    }
    postSystemCallbacks(callbackEntry) {
        return this.request({
            path: `/system/callbacks`,
            method: 'post',
            data: callbackEntry,
        });
    }
    getSystemCallbacksById(id, params = {}) {
        return this.request({
            path: `/system/callbacks/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemCallbacksById(id) {
        return this.request({
            path: `/system/callbacks/${id}`,
            method: 'delete',
        });
    }
    putSystemCallbacksById(id, callbackEntry) {
        return this.request({
            path: `/system/callbacks/${id}`,
            method: 'put',
            data: callbackEntry,
        });
    }
    patchSystemCallbacksById(id, patchOperations) {
        return this.request({
            path: `/system/callbacks/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemCallbacksCount(params = {}) {
        return this.request({
            path: `/system/callbacks/count`,
            method: 'get',
            params,
        });
    }
    getSystemCertifications(params = {}) {
        return this.request({
            path: `/system/certifications`,
            method: 'get',
            params,
        });
    }
    postSystemCertifications(certification) {
        return this.request({
            path: `/system/certifications`,
            method: 'post',
            data: certification,
        });
    }
    getSystemCertificationsById(id, params = {}) {
        return this.request({
            path: `/system/certifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemCertificationsById(id) {
        return this.request({
            path: `/system/certifications/${id}`,
            method: 'delete',
        });
    }
    putSystemCertificationsById(id, certification) {
        return this.request({
            path: `/system/certifications/${id}`,
            method: 'put',
            data: certification,
        });
    }
    patchSystemCertificationsById(id, patchOperations) {
        return this.request({
            path: `/system/certifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemCertificationsByIdUsages(id, params = {}) {
        return this.request({
            path: `/system/certifications/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSystemCertificationsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/system/certifications/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSystemCertificationsCount(params = {}) {
        return this.request({
            path: `/system/certifications/count`,
            method: 'get',
            params,
        });
    }
    getSystemConnectWiseHostedScreens(params = {}) {
        return this.request({
            path: `/system/connectWiseHostedScreens`,
            method: 'get',
            params,
        });
    }
    getSystemConnectWiseHostedScreensById(id, params = {}) {
        return this.request({
            path: `/system/connectWiseHostedScreens/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemConnectWiseHostedScreensCount(params = {}) {
        return this.request({
            path: `/system/connectWiseHostedScreens/count`,
            method: 'get',
            params,
        });
    }
    getSystemConnectwisehostedsetups(params = {}) {
        return this.request({
            path: `/system/connectwisehostedsetups`,
            method: 'get',
            params,
        });
    }
    postSystemConnectwisehostedsetups(connectWiseHostedSetup) {
        return this.request({
            path: `/system/connectwisehostedsetups`,
            method: 'post',
            data: connectWiseHostedSetup,
        });
    }
    getSystemConnectwisehostedsetupsById(id, params = {}) {
        return this.request({
            path: `/system/connectwisehostedsetups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemConnectwisehostedsetupsById(id) {
        return this.request({
            path: `/system/connectwisehostedsetups/${id}`,
            method: 'delete',
        });
    }
    putSystemConnectwisehostedsetupsById(id, connectWiseHostedSetup) {
        return this.request({
            path: `/system/connectwisehostedsetups/${id}`,
            method: 'put',
            data: connectWiseHostedSetup,
        });
    }
    patchSystemConnectwisehostedsetupsById(id, patchOperations) {
        return this.request({
            path: `/system/connectwisehostedsetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemConnectwisehostedsetupsCount(params = {}) {
        return this.request({
            path: `/system/connectwisehostedsetups/count`,
            method: 'get',
            params,
        });
    }
    getSystemCustomReports(params = {}) {
        return this.request({
            path: `/system/customReports`,
            method: 'get',
            params,
        });
    }
    postSystemCustomReports(customReport) {
        return this.request({
            path: `/system/customReports`,
            method: 'post',
            data: customReport,
        });
    }
    getSystemCustomReportsById(id, params = {}) {
        return this.request({
            path: `/system/customReports/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemCustomReportsById(id) {
        return this.request({
            path: `/system/customReports/${id}`,
            method: 'delete',
        });
    }
    putSystemCustomReportsById(id, customReport) {
        return this.request({
            path: `/system/customReports/${id}`,
            method: 'put',
            data: customReport,
        });
    }
    patchSystemCustomReportsById(id, patchOperations) {
        return this.request({
            path: `/system/customReports/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemCustomReportsByParentIdParameters(parentId, params = {}) {
        return this.request({
            path: `/system/customReports/${parentId}/parameters`,
            method: 'get',
            params,
        });
    }
    postSystemCustomReportsByParentIdParameters(parentId, customReportParameter) {
        return this.request({
            path: `/system/customReports/${parentId}/parameters`,
            method: 'post',
            data: customReportParameter,
        });
    }
    getSystemCustomReportsByParentIdParametersById(id, parentId, params = {}) {
        return this.request({
            path: `/system/customReports/${parentId}/parameters/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemCustomReportsByParentIdParametersById(id, parentId) {
        return this.request({
            path: `/system/customReports/${parentId}/parameters/${id}`,
            method: 'delete',
        });
    }
    putSystemCustomReportsByParentIdParametersById(id, parentId, customReportParameter) {
        return this.request({
            path: `/system/customReports/${parentId}/parameters/${id}`,
            method: 'put',
            data: customReportParameter,
        });
    }
    patchSystemCustomReportsByParentIdParametersById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/customReports/${parentId}/parameters/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemCustomReportsByParentIdParametersCount(parentId, params = {}) {
        return this.request({
            path: `/system/customReports/${parentId}/parameters/count`,
            method: 'get',
            params,
        });
    }
    getSystemCustomReportsCount(params = {}) {
        return this.request({
            path: `/system/customReports/count`,
            method: 'get',
            params,
        });
    }
    getSystemCwTimeZones(params = {}) {
        return this.request({
            path: `/system/cwTimeZones`,
            method: 'get',
            params,
        });
    }
    getSystemCwTimeZonesById(id, params = {}) {
        return this.request({
            path: `/system/cwTimeZones/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemCwTimeZonesCount(params = {}) {
        return this.request({
            path: `/system/cwTimeZones/count`,
            method: 'get',
            params,
        });
    }
    getSystemDepartments(params = {}) {
        return this.request({
            path: `/system/departments`,
            method: 'get',
            params,
        });
    }
    postSystemDepartments(department) {
        return this.request({
            path: `/system/departments`,
            method: 'post',
            data: department,
        });
    }
    getSystemDepartmentsById(id, params = {}) {
        return this.request({
            path: `/system/departments/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemDepartmentsById(id) {
        return this.request({
            path: `/system/departments/${id}`,
            method: 'delete',
        });
    }
    putSystemDepartmentsById(id, department) {
        return this.request({
            path: `/system/departments/${id}`,
            method: 'put',
            data: department,
        });
    }
    patchSystemDepartmentsById(id, patchOperations) {
        return this.request({
            path: `/system/departments/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemDepartmentsByIdUsages(id, params = {}) {
        return this.request({
            path: `/system/departments/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSystemDepartmentsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/system/departments/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSystemDepartmentsByParentIdLocations(parentId, params = {}) {
        return this.request({
            path: `/system/departments/${parentId}/locations`,
            method: 'get',
            params,
        });
    }
    postSystemDepartmentsByParentIdLocations(parentId, departmentLocation) {
        return this.request({
            path: `/system/departments/${parentId}/locations`,
            method: 'post',
            data: departmentLocation,
        });
    }
    getSystemDepartmentsByParentIdLocationsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/departments/${parentId}/locations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemDepartmentsByParentIdLocationsById(id, parentId) {
        return this.request({
            path: `/system/departments/${parentId}/locations/${id}`,
            method: 'delete',
        });
    }
    putSystemDepartmentsByParentIdLocationsById(id, parentId, departmentLocation) {
        return this.request({
            path: `/system/departments/${parentId}/locations/${id}`,
            method: 'put',
            data: departmentLocation,
        });
    }
    patchSystemDepartmentsByParentIdLocationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/departments/${parentId}/locations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemDepartmentsByParentIdLocationsCount(parentId, params = {}) {
        return this.request({
            path: `/system/departments/${parentId}/locations/count`,
            method: 'get',
            params,
        });
    }
    getSystemDepartmentsCount(params = {}) {
        return this.request({
            path: `/system/departments/count`,
            method: 'get',
            params,
        });
    }
    getSystemDocuments(params = {}) {
        return this.request({
            path: `/system/documents`,
            method: 'get',
            params,
        });
    }
    postSystemDocuments(documentFormData) {
        return this.request({
            path: `/system/documents`,
            method: 'post',
            data: documentFormData,
        });
    }
    getSystemDocumentsById(id, params = {}) {
        return this.request({
            path: `/system/documents/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemDocumentsById(id) {
        return this.request({
            path: `/system/documents/${id}`,
            method: 'delete',
        });
    }
    postSystemDocumentsById(id) {
        return this.request({
            path: `/system/documents/${id}`,
            method: 'post',
        });
    }
    getSystemDocumentsByIdDownload(id, params = {}) {
        return this.request({
            path: `/system/documents/${id}/download`,
            method: 'get',
            params,
        });
    }
    getSystemDocumentsByIdThumbnail(id, params = {}) {
        return this.request({
            path: `/system/documents/${id}/thumbnail`,
            method: 'get',
            params,
        });
    }
    getSystemDocumentsCount(params = {}) {
        return this.request({
            path: `/system/documents/count`,
            method: 'get',
            params,
        });
    }
    getSystemDocumentsUploadsample(params = {}) {
        return this.request({
            path: `/system/documents/uploadsample`,
            method: 'get',
            params,
        });
    }
    getSystemEmailConnectors(params = {}) {
        return this.request({
            path: `/system/emailConnectors`,
            method: 'get',
            params,
        });
    }
    postSystemEmailConnectors(emailConnector) {
        return this.request({
            path: `/system/emailConnectors`,
            method: 'post',
            data: emailConnector,
        });
    }
    getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRules(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${grandparentId}/parsingStyles/${parentId}/parsingRules`,
            method: 'get',
            params,
        });
    }
    postSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRules(parentId, grandparentId, emailConnectorParsingRule) {
        return this.request({
            path: `/system/emailConnectors/${grandparentId}/parsingStyles/${parentId}/parsingRules`,
            method: 'post',
            data: emailConnectorParsingRule,
        });
    }
    getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${grandparentId}/parsingStyles/${parentId}/parsingRules/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById(id, parentId, grandparentId) {
        return this.request({
            path: `/system/emailConnectors/${grandparentId}/parsingStyles/${parentId}/parsingRules/${id}`,
            method: 'delete',
        });
    }
    putSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById(id, parentId, grandparentId, emailConnectorParsingRule) {
        return this.request({
            path: `/system/emailConnectors/${grandparentId}/parsingStyles/${parentId}/parsingRules/${id}`,
            method: 'put',
            data: emailConnectorParsingRule,
        });
    }
    patchSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/system/emailConnectors/${grandparentId}/parsingStyles/${parentId}/parsingRules/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${grandparentId}/parsingStyles/${parentId}/parsingRules/count`,
            method: 'get',
            params,
        });
    }
    getSystemEmailConnectorsById(id, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemEmailConnectorsById(id) {
        return this.request({
            path: `/system/emailConnectors/${id}`,
            method: 'delete',
        });
    }
    putSystemEmailConnectorsById(id, emailConnector) {
        return this.request({
            path: `/system/emailConnectors/${id}`,
            method: 'put',
            data: emailConnector,
        });
    }
    patchSystemEmailConnectorsById(id, patchOperations) {
        return this.request({
            path: `/system/emailConnectors/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemEmailConnectorsByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemEmailConnectorsByParentIdParsingStyles(parentId, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${parentId}/parsingStyles`,
            method: 'get',
            params,
        });
    }
    postSystemEmailConnectorsByParentIdParsingStyles(parentId, emailConnectorParsingStyle) {
        return this.request({
            path: `/system/emailConnectors/${parentId}/parsingStyles`,
            method: 'post',
            data: emailConnectorParsingStyle,
        });
    }
    getSystemEmailConnectorsByParentIdParsingStylesById(id, parentId, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${parentId}/parsingStyles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemEmailConnectorsByParentIdParsingStylesById(id, parentId) {
        return this.request({
            path: `/system/emailConnectors/${parentId}/parsingStyles/${id}`,
            method: 'delete',
        });
    }
    putSystemEmailConnectorsByParentIdParsingStylesById(id, parentId, emailConnectorParsingStyle) {
        return this.request({
            path: `/system/emailConnectors/${parentId}/parsingStyles/${id}`,
            method: 'put',
            data: emailConnectorParsingStyle,
        });
    }
    patchSystemEmailConnectorsByParentIdParsingStylesById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/emailConnectors/${parentId}/parsingStyles/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemEmailConnectorsByParentIdParsingStylesCount(parentId, params = {}) {
        return this.request({
            path: `/system/emailConnectors/${parentId}/parsingStyles/count`,
            method: 'get',
            params,
        });
    }
    getSystemEmailConnectorsCount(params = {}) {
        return this.request({
            path: `/system/emailConnectors/count`,
            method: 'get',
            params,
        });
    }
    getSystemEmailConnectorsInfo(params = {}) {
        return this.request({
            path: `/system/emailConnectors/info`,
            method: 'get',
            params,
        });
    }
    getSystemEmailConnectorsInfoCount(params = {}) {
        return this.request({
            path: `/system/emailConnectors/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemEmailExclusions(params = {}) {
        return this.request({
            path: `/system/emailExclusions`,
            method: 'get',
            params,
        });
    }
    postSystemEmailExclusions(emailExclusion) {
        return this.request({
            path: `/system/emailExclusions`,
            method: 'post',
            data: emailExclusion,
        });
    }
    getSystemEmailExclusionsById(id, params = {}) {
        return this.request({
            path: `/system/emailExclusions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemEmailExclusionsById(id) {
        return this.request({
            path: `/system/emailExclusions/${id}`,
            method: 'delete',
        });
    }
    putSystemEmailExclusionsById(id, emailExclusion) {
        return this.request({
            path: `/system/emailExclusions/${id}`,
            method: 'put',
            data: emailExclusion,
        });
    }
    patchSystemEmailExclusionsById(id, patchOperations) {
        return this.request({
            path: `/system/emailExclusions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemEmailExclusionsCount(params = {}) {
        return this.request({
            path: `/system/emailExclusions/count`,
            method: 'get',
            params,
        });
    }
    getSystemEmailTokens(params = {}) {
        return this.request({
            path: `/system/emailTokens`,
            method: 'get',
            params,
        });
    }
    getSystemEmailTokensById(id, params = {}) {
        return this.request({
            path: `/system/emailTokens/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemEmailTokensCount(params = {}) {
        return this.request({
            path: `/system/emailTokens/count`,
            method: 'get',
            params,
        });
    }
    getSystemEPayConfigurations(params = {}) {
        return this.request({
            path: `/system/ePayConfigurations`,
            method: 'get',
            params,
        });
    }
    postSystemEPayConfigurations(ePayConfiguration) {
        return this.request({
            path: `/system/ePayConfigurations`,
            method: 'post',
            data: ePayConfiguration,
        });
    }
    getSystemEPayConfigurationsById(id, params = {}) {
        return this.request({
            path: `/system/ePayConfigurations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemEPayConfigurationsById(id) {
        return this.request({
            path: `/system/ePayConfigurations/${id}`,
            method: 'delete',
        });
    }
    putSystemEPayConfigurationsById(id, ePayConfiguration) {
        return this.request({
            path: `/system/ePayConfigurations/${id}`,
            method: 'put',
            data: ePayConfiguration,
        });
    }
    patchSystemEPayConfigurationsById(id, patchOperations) {
        return this.request({
            path: `/system/ePayConfigurations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemEPayConfigurationsCount(params = {}) {
        return this.request({
            path: `/system/ePayConfigurations/count`,
            method: 'get',
            params,
        });
    }
    getSystemExperiments(params = {}) {
        return this.request({
            path: `/system/experiments`,
            method: 'get',
            params,
        });
    }
    getSystemExperimentsById(id, params = {}) {
        return this.request({
            path: `/system/experiments/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemExperimentsCount(params = {}) {
        return this.request({
            path: `/system/experiments/count`,
            method: 'get',
            params,
        });
    }
    getSystemFileuploadsettings(params = {}) {
        return this.request({
            path: `/system/fileuploadsettings/`,
            method: 'get',
            params,
        });
    }
    getSystemFileuploadsettingsById(id, params = {}) {
        return this.request({
            path: `/system/fileuploadsettings/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemFileuploadsettingsById(id, companyTypeAssociation) {
        return this.request({
            path: `/system/fileuploadsettings/${id}`,
            method: 'put',
            data: companyTypeAssociation,
        });
    }
    patchSystemFileuploadsettingsById(id, patchOperations) {
        return this.request({
            path: `/system/fileuploadsettings/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemFileuploadsettingsCount(params = {}) {
        return this.request({
            path: `/system/fileuploadsettings/count`,
            method: 'get',
            params,
        });
    }
    getSystemGoogleemailsetup(params = {}) {
        return this.request({
            path: `/system/googleemailsetup/`,
            method: 'get',
            params,
        });
    }
    postSystemGoogleemailsetup(GoogleEmailSetup) {
        return this.request({
            path: `/system/googleemailsetup/`,
            method: 'post',
            data: GoogleEmailSetup,
        });
    }
    getSystemGoogleemailsetupById(id, params = {}) {
        return this.request({
            path: `/system/googleemailsetup/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemGoogleemailsetupById(id) {
        return this.request({
            path: `/system/googleemailsetup/${id}`,
            method: 'delete',
        });
    }
    putSystemGoogleemailsetupById(id, companyTypeAssociation) {
        return this.request({
            path: `/system/googleemailsetup/${id}`,
            method: 'put',
            data: companyTypeAssociation,
        });
    }
    patchSystemGoogleemailsetupById(id, patchOperations) {
        return this.request({
            path: `/system/googleemailsetup/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSystemGoogleemailsetupByIdTestConnection(id) {
        return this.request({
            path: `/system/googleemailsetup/${id}/testConnection`,
            method: 'post',
        });
    }
    getSystemGoogleemailsetupCount(params = {}) {
        return this.request({
            path: `/system/googleemailsetup/count`,
            method: 'get',
            params,
        });
    }
    getSystemImaps(params = {}) {
        return this.request({
            path: `/system/imaps`,
            method: 'get',
            params,
        });
    }
    postSystemImaps(imap) {
        return this.request({
            path: `/system/imaps`,
            method: 'post',
            data: imap,
        });
    }
    getSystemImapsById(id, params = {}) {
        return this.request({
            path: `/system/imaps/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemImapsById(id) {
        return this.request({
            path: `/system/imaps/${id}`,
            method: 'delete',
        });
    }
    putSystemImapsById(id, imap) {
        return this.request({
            path: `/system/imaps/${id}`,
            method: 'put',
            data: imap,
        });
    }
    patchSystemImapsById(id, patchOperations) {
        return this.request({
            path: `/system/imaps/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemImapsByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/imaps/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemImapsCount(params = {}) {
        return this.request({
            path: `/system/imaps/count`,
            method: 'get',
            params,
        });
    }
    getSystemImapsInfo(params = {}) {
        return this.request({
            path: `/system/imaps/info`,
            method: 'get',
            params,
        });
    }
    getSystemImapsInfoCount(params = {}) {
        return this.request({
            path: `/system/imaps/info/count`,
            method: 'get',
            params,
        });
    }
    postSystemImportMassMaintenanceById(id) {
        return this.request({
            path: `/system/importMassMaintenance/${id}`,
            method: 'post',
        });
    }
    getSystemInfo(params = {}) {
        return this.request({
            path: `/system/info`,
            method: 'get',
            params,
        });
    }
    getSystemInfoDepartmentlocations(params = {}) {
        return this.request({
            path: `/system/info/departmentlocations`,
            method: 'get',
            params,
        });
    }
    getSystemInfoDepartmentlocationsById(id, params = {}) {
        return this.request({
            path: `/system/info/departmentlocations/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemInfoDepartmentlocationsCount(params = {}) {
        return this.request({
            path: `/system/info/departmentlocations/count`,
            method: 'get',
            params,
        });
    }
    getSystemInfoDepartments(params = {}) {
        return this.request({
            path: `/system/info/departments`,
            method: 'get',
            params,
        });
    }
    getSystemInfoDepartmentsById(id, params = {}) {
        return this.request({
            path: `/system/info/departments/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemInfoDepartmentsCount(params = {}) {
        return this.request({
            path: `/system/info/departments/count`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLinks(params = {}) {
        return this.request({
            path: `/system/info/links`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLinksById(id, params = {}) {
        return this.request({
            path: `/system/info/links/${id}`,
            method: 'get',
            params,
        });
    }
    postSystemInfoLinksByIdResolveurl(id, resolveInfo) {
        return this.request({
            path: `/system/info/links/${id}/resolveurl`,
            method: 'post',
            data: resolveInfo,
        });
    }
    getSystemInfoLinksCount(params = {}) {
        return this.request({
            path: `/system/info/links/count`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLocales(params = {}) {
        return this.request({
            path: `/system/info/locales`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLocalesById(id, params = {}) {
        return this.request({
            path: `/system/info/locales/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLocalesCount(params = {}) {
        return this.request({
            path: `/system/info/locales/count`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLocations(params = {}) {
        return this.request({
            path: `/system/info/locations`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLocationsById(id, params = {}) {
        return this.request({
            path: `/system/info/locations/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemInfoLocationsCount(params = {}) {
        return this.request({
            path: `/system/info/locations/count`,
            method: 'get',
            params,
        });
    }
    getSystemInfoMembers(params = {}) {
        return this.request({
            path: `/system/info/members`,
            method: 'get',
            params,
        });
    }
    getSystemInfoMembersById(id, params = {}) {
        return this.request({
            path: `/system/info/members/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemInfoMembersmemberIdentifierregextypes(params = {}) {
        return this.request({
            path: `/system/info/members/{memberIdentifier:regex(^(types. |(`,
            method: 'get',
            params,
        });
    }
    getSystemInfoMembersCount(params = {}) {
        return this.request({
            path: `/system/info/members/count`,
            method: 'get',
            params,
        });
    }
    getSystemInfoPersonas(params = {}) {
        return this.request({
            path: `/system/info/personas`,
            method: 'get',
            params,
        });
    }
    getSystemInfoPersonasById(id, params = {}) {
        return this.request({
            path: `/system/info/personas/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemInfoPersonasCount(params = {}) {
        return this.request({
            path: `/system/info/personas/count`,
            method: 'get',
            params,
        });
    }
    getSystemInfoStandardNotes(params = {}) {
        return this.request({
            path: `/system/info/standardNotes`,
            method: 'get',
            params,
        });
    }
    getSystemInfoStandardNotesById(id, params = {}) {
        return this.request({
            path: `/system/info/standardNotes/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemInfoStandardNotesCount(params = {}) {
        return this.request({
            path: `/system/info/standardNotes/count`,
            method: 'get',
            params,
        });
    }
    getSystemInOutBoards(params = {}) {
        return this.request({
            path: `/system/inOutBoards`,
            method: 'get',
            params,
        });
    }
    postSystemInOutBoards(inOutBoard) {
        return this.request({
            path: `/system/inOutBoards`,
            method: 'post',
            data: inOutBoard,
        });
    }
    getSystemInOutBoardsById(id, params = {}) {
        return this.request({
            path: `/system/inOutBoards/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemInOutBoardsById(id) {
        return this.request({
            path: `/system/inOutBoards/${id}`,
            method: 'delete',
        });
    }
    putSystemInOutBoardsById(id, inOutBoard) {
        return this.request({
            path: `/system/inOutBoards/${id}`,
            method: 'put',
            data: inOutBoard,
        });
    }
    patchSystemInOutBoardsById(id, patchOperations) {
        return this.request({
            path: `/system/inOutBoards/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemInOutBoardsCount(params = {}) {
        return this.request({
            path: `/system/inOutBoards/count`,
            method: 'get',
            params,
        });
    }
    getSystemInOutTypes(params = {}) {
        return this.request({
            path: `/system/inOutTypes`,
            method: 'get',
            params,
        });
    }
    postSystemInOutTypes(inOutType) {
        return this.request({
            path: `/system/inOutTypes`,
            method: 'post',
            data: inOutType,
        });
    }
    getSystemInOutTypesById(id, params = {}) {
        return this.request({
            path: `/system/inOutTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemInOutTypesById(id) {
        return this.request({
            path: `/system/inOutTypes/${id}`,
            method: 'delete',
        });
    }
    putSystemInOutTypesById(id, inOutType) {
        return this.request({
            path: `/system/inOutTypes/${id}`,
            method: 'put',
            data: inOutType,
        });
    }
    patchSystemInOutTypesById(id, patchOperations) {
        return this.request({
            path: `/system/inOutTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemInOutTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/inOutTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemInOutTypesCount(params = {}) {
        return this.request({
            path: `/system/inOutTypes/count`,
            method: 'get',
            params,
        });
    }
    getSystemInOutTypesCountInfo(params = {}) {
        return this.request({
            path: `/system/inOutTypes/count/info`,
            method: 'get',
            params,
        });
    }
    getSystemInOutTypesInfo(params = {}) {
        return this.request({
            path: `/system/inOutTypes/info`,
            method: 'get',
            params,
        });
    }
    getSystemIntegratorlogins(params = {}) {
        return this.request({
            path: `/system/integratorlogins`,
            method: 'get',
            params,
        });
    }
    postSystemIntegratorlogins(integratorLogin) {
        return this.request({
            path: `/system/integratorlogins`,
            method: 'post',
            data: integratorLogin,
        });
    }
    getSystemIntegratorloginsById(id, params = {}) {
        return this.request({
            path: `/system/integratorlogins/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemIntegratorloginsById(id) {
        return this.request({
            path: `/system/integratorlogins/${id}`,
            method: 'delete',
        });
    }
    putSystemIntegratorloginsById(id, integratorLogin) {
        return this.request({
            path: `/system/integratorlogins/${id}`,
            method: 'put',
            data: integratorLogin,
        });
    }
    patchSystemIntegratorloginsById(id, patchOperations) {
        return this.request({
            path: `/system/integratorlogins/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemIntegratorloginsCount(params = {}) {
        return this.request({
            path: `/system/integratorlogins/count`,
            method: 'get',
            params,
        });
    }
    getSystemIntegratorTags(params = {}) {
        return this.request({
            path: `/system/integratorTags`,
            method: 'get',
            params,
        });
    }
    postSystemIntegratorTags(tag) {
        return this.request({
            path: `/system/integratorTags`,
            method: 'post',
            data: tag,
        });
    }
    getSystemIntegratorTagsById(id, params = {}) {
        return this.request({
            path: `/system/integratorTags/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemIntegratorTagsById(id) {
        return this.request({
            path: `/system/integratorTags/${id}`,
            method: 'delete',
        });
    }
    putSystemIntegratorTagsById(id, tag) {
        return this.request({
            path: `/system/integratorTags/${id}`,
            method: 'put',
            data: tag,
        });
    }
    patchSystemIntegratorTagsById(id, patchOperations) {
        return this.request({
            path: `/system/integratorTags/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemIntegratorTagsCount(params = {}) {
        return this.request({
            path: `/system/integratorTags/count`,
            method: 'get',
            params,
        });
    }
    getSystemKpiCategories(params = {}) {
        return this.request({
            path: `/system/kpiCategories`,
            method: 'get',
            params,
        });
    }
    getSystemKpiCategoriesById(id, params = {}) {
        return this.request({
            path: `/system/kpiCategories/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemKpiCategoriesCount(params = {}) {
        return this.request({
            path: `/system/kpiCategories/count`,
            method: 'get',
            params,
        });
    }
    getSystemKpis(params = {}) {
        return this.request({
            path: `/system/kpis`,
            method: 'get',
            params,
        });
    }
    getSystemKpisById(id, params = {}) {
        return this.request({
            path: `/system/kpis/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemKpisCount(params = {}) {
        return this.request({
            path: `/system/kpis/count`,
            method: 'get',
            params,
        });
    }
    getSystemLdapConfigurations(params = {}) {
        return this.request({
            path: `/system/ldapConfigurations`,
            method: 'get',
            params,
        });
    }
    postSystemLdapConfigurations(ldapConfiguration) {
        return this.request({
            path: `/system/ldapConfigurations`,
            method: 'post',
            data: ldapConfiguration,
        });
    }
    getSystemLdapConfigurationsById(id, params = {}) {
        return this.request({
            path: `/system/ldapConfigurations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemLdapConfigurationsById(id) {
        return this.request({
            path: `/system/ldapConfigurations/${id}`,
            method: 'delete',
        });
    }
    putSystemLdapConfigurationsById(id, ldapConfiguration) {
        return this.request({
            path: `/system/ldapConfigurations/${id}`,
            method: 'put',
            data: ldapConfiguration,
        });
    }
    patchSystemLdapConfigurationsById(id, patchOperations) {
        return this.request({
            path: `/system/ldapConfigurations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemLdapConfigurationsByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/ldapConfigurations/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemLdapConfigurationsCount(params = {}) {
        return this.request({
            path: `/system/ldapConfigurations/count`,
            method: 'get',
            params,
        });
    }
    getSystemLdapConfigurationsInfo(params = {}) {
        return this.request({
            path: `/system/ldapConfigurations/info`,
            method: 'get',
            params,
        });
    }
    getSystemLdapConfigurationsInfoCount(params = {}) {
        return this.request({
            path: `/system/ldapConfigurations/info/count`,
            method: 'get',
            params,
        });
    }
    postSystemLdapConfigurationsTestLink(server) {
        return this.request({
            path: `/system/ldapConfigurations/testLink`,
            method: 'post',
            data: server,
        });
    }
    getSystemLinks(params = {}) {
        return this.request({
            path: `/system/links`,
            method: 'get',
            params,
        });
    }
    postSystemLinks(link) {
        return this.request({
            path: `/system/links`,
            method: 'post',
            data: link,
        });
    }
    getSystemLinksById(id, params = {}) {
        return this.request({
            path: `/system/links/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemLinksById(id) {
        return this.request({
            path: `/system/links/${id}`,
            method: 'delete',
        });
    }
    putSystemLinksById(id, link) {
        return this.request({
            path: `/system/links/${id}`,
            method: 'put',
            data: link,
        });
    }
    patchSystemLinksById(id, patchOperations) {
        return this.request({
            path: `/system/links/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemLinksCount(params = {}) {
        return this.request({
            path: `/system/links/count`,
            method: 'get',
            params,
        });
    }
    getSystemLocations(params = {}) {
        return this.request({
            path: `/system/locations`,
            method: 'get',
            params,
        });
    }
    postSystemLocations(location) {
        return this.request({
            path: `/system/locations`,
            method: 'post',
            data: location,
        });
    }
    getSystemLocationsById(id, params = {}) {
        return this.request({
            path: `/system/locations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemLocationsById(id) {
        return this.request({
            path: `/system/locations/${id}`,
            method: 'delete',
        });
    }
    putSystemLocationsById(id, location) {
        return this.request({
            path: `/system/locations/${id}`,
            method: 'put',
            data: location,
        });
    }
    patchSystemLocationsById(id, patchOperations) {
        return this.request({
            path: `/system/locations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemLocationsByIdUsages(id, params = {}) {
        return this.request({
            path: `/system/locations/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/system/locations/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsByParentIdDepartments(parentId, params = {}) {
        return this.request({
            path: `/system/locations/${parentId}/departments`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsByParentIdDepartmentsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/locations/${parentId}/departments/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsByParentIdDepartmentsCount(parentId, params = {}) {
        return this.request({
            path: `/system/locations/${parentId}/departments/count`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsByParentIdWorkRoles(parentId, params = {}) {
        return this.request({
            path: `/system/locations/${parentId}/workRoles`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsByParentIdWorkRolesById(id, parentId, params = {}) {
        return this.request({
            path: `/system/locations/${parentId}/workRoles/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsByParentIdWorkRolesCount(parentId, params = {}) {
        return this.request({
            path: `/system/locations/${parentId}/workRoles/count`,
            method: 'get',
            params,
        });
    }
    getSystemLocationsCount(params = {}) {
        return this.request({
            path: `/system/locations/count`,
            method: 'get',
            params,
        });
    }
    getSystemManagementNetworkSecurities(params = {}) {
        return this.request({
            path: `/system/managementNetworkSecurities`,
            method: 'get',
            params,
        });
    }
    postSystemManagementNetworkSecurities(managementNetworkSecurity) {
        return this.request({
            path: `/system/managementNetworkSecurities`,
            method: 'post',
            data: managementNetworkSecurity,
        });
    }
    getSystemManagementNetworkSecuritiesById(id, params = {}) {
        return this.request({
            path: `/system/managementNetworkSecurities/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemManagementNetworkSecuritiesById(id) {
        return this.request({
            path: `/system/managementNetworkSecurities/${id}`,
            method: 'delete',
        });
    }
    putSystemManagementNetworkSecuritiesById(id, managementNetworkSecurity) {
        return this.request({
            path: `/system/managementNetworkSecurities/${id}`,
            method: 'put',
            data: managementNetworkSecurity,
        });
    }
    patchSystemManagementNetworkSecuritiesById(id, patchOperations) {
        return this.request({
            path: `/system/managementNetworkSecurities/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemManagementNetworkSecuritiesByIdTestCredentials(id, params = {}) {
        return this.request({
            path: `/system/managementNetworkSecurities/${id}/testCredentials`,
            method: 'get',
            params,
        });
    }
    getSystemManagementNetworkSecuritiesCount(params = {}) {
        return this.request({
            path: `/system/managementNetworkSecurities/count`,
            method: 'get',
            params,
        });
    }
    getSystemMarketplaceimportGetdefinitionById(id, params = {}) {
        return this.request({
            path: `/system/marketplaceimport/getdefinition/${id}`,
            method: 'get',
            params,
        });
    }
    postSystemMarketplaceimportImport(marketplaceImport) {
        return this.request({
            path: `/system/marketplaceimport/import`,
            method: 'post',
            data: marketplaceImport,
        });
    }
    getSystemMembers(params = {}) {
        return this.request({
            path: `/system/members`,
            method: 'get',
            params,
        });
    }
    postSystemMembers(member) {
        return this.request({
            path: `/system/members`,
            method: 'post',
            data: member,
        });
    }
    getSystemMembersById(id, params = {}) {
        return this.request({
            path: `/system/members/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMembersById(id, member) {
        return this.request({
            path: `/system/members/${id}`,
            method: 'put',
            data: member,
        });
    }
    patchSystemMembersById(id, patchOperations) {
        return this.request({
            path: `/system/members/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSystemMembersByIdDeactivate(id, item) {
        return this.request({
            path: `/system/members/${id}/deactivate`,
            method: 'post',
            data: item,
        });
    }
    getSystemMembersByIdImage(id, useDefaultFlag, lastmodified, params = {}) {
        return this.request({
            path: `/system/members/${id}/image`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByIdLinkSsoUser(id, item) {
        return this.request({
            path: `/system/members/${id}/linkSsoUser`,
            method: 'post',
            data: item,
        });
    }
    postSystemMembersByIdSubmit(id, item) {
        return this.request({
            path: `/system/members/${id}/submit`,
            method: 'post',
            data: item,
        });
    }
    postSystemMembersByIdUnlinkSsoUser(id) {
        return this.request({
            path: `/system/members/${id}/unlinkSsoUser`,
            method: 'post',
        });
    }
    deleteSystemMembersByIdUnusedTimeSheets(id) {
        return this.request({
            path: `/system/members/${id}/unusedTimeSheets`,
            method: 'delete',
        });
    }
    getSystemMembersByIdUsages(id, params = {}) {
        return this.request({
            path: `/system/members/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/system/members/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getSystemMembersmemberIdentifierregextypes(memberIdentifier, params = {}) {
        return this.request({
            path: `/system/members/{memberIdentifier:regex(^(types. |(`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByMemberIdentifierTokens(memberIdentifier) {
        return this.request({
            path: `/system/members/${memberIdentifier}/tokens`,
            method: 'post',
        });
    }
    getSystemMembersByParentIdAccruals(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/accruals`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByParentIdAccruals(parentId, memberAccrual) {
        return this.request({
            path: `/system/members/${parentId}/accruals`,
            method: 'post',
            data: memberAccrual,
        });
    }
    getSystemMembersByParentIdAccrualsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/accruals/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersByParentIdAccrualsById(id, parentId) {
        return this.request({
            path: `/system/members/${parentId}/accruals/${id}`,
            method: 'delete',
        });
    }
    putSystemMembersByParentIdAccrualsById(id, parentId, memberAccrual) {
        return this.request({
            path: `/system/members/${parentId}/accruals/${id}`,
            method: 'put',
            data: memberAccrual,
        });
    }
    patchSystemMembersByParentIdAccrualsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/members/${parentId}/accruals/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMembersByParentIdAccrualsCount(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/accruals/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdCertifications(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/certifications`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByParentIdCertifications(parentId, memberCertification) {
        return this.request({
            path: `/system/members/${parentId}/certifications`,
            method: 'post',
            data: memberCertification,
        });
    }
    getSystemMembersByParentIdCertificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/certifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersByParentIdCertificationsById(id, parentId) {
        return this.request({
            path: `/system/members/${parentId}/certifications/${id}`,
            method: 'delete',
        });
    }
    putSystemMembersByParentIdCertificationsById(id, parentId, memberCertification) {
        return this.request({
            path: `/system/members/${parentId}/certifications/${id}`,
            method: 'put',
            data: memberCertification,
        });
    }
    patchSystemMembersByParentIdCertificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/members/${parentId}/certifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMembersByParentIdCertificationsCount(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/certifications/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdDelegations(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/delegations`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByParentIdDelegations(parentId, memberDelegation) {
        return this.request({
            path: `/system/members/${parentId}/delegations`,
            method: 'post',
            data: memberDelegation,
        });
    }
    getSystemMembersByParentIdDelegationsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/delegations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersByParentIdDelegationsById(id, parentId) {
        return this.request({
            path: `/system/members/${parentId}/delegations/${id}`,
            method: 'delete',
        });
    }
    putSystemMembersByParentIdDelegationsById(id, parentId, memberDelegation) {
        return this.request({
            path: `/system/members/${parentId}/delegations/${id}`,
            method: 'put',
            data: memberDelegation,
        });
    }
    patchSystemMembersByParentIdDelegationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/members/${parentId}/delegations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMembersByParentIdDelegationsCount(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/delegations/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdManagedDeviceAccounts(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/managedDeviceAccounts`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersByParentIdManagedDeviceAccountsBulk(parentId, managedDeviceAccounts) {
        return this.request({
            path: `/system/members/${parentId}/managedDeviceAccounts/bulk`,
            method: 'delete',
            data: managedDeviceAccounts,
        });
    }
    putSystemMembersByParentIdManagedDeviceAccountsBulk(parentId, managedDeviceAccounts) {
        return this.request({
            path: `/system/members/${parentId}/managedDeviceAccounts/bulk`,
            method: 'put',
            data: managedDeviceAccounts,
        });
    }
    getSystemMembersByParentIdMycertifications(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/mycertifications`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByParentIdMycertifications(parentId, memberCertification) {
        return this.request({
            path: `/system/members/${parentId}/mycertifications`,
            method: 'post',
            data: memberCertification,
        });
    }
    getSystemMembersByParentIdMycertificationsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/mycertifications/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersByParentIdMycertificationsById(id, parentId) {
        return this.request({
            path: `/system/members/${parentId}/mycertifications/${id}`,
            method: 'delete',
        });
    }
    putSystemMembersByParentIdMycertificationsById(id, parentId, memberCertification) {
        return this.request({
            path: `/system/members/${parentId}/mycertifications/${id}`,
            method: 'put',
            data: memberCertification,
        });
    }
    patchSystemMembersByParentIdMycertificationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/members/${parentId}/mycertifications/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMembersByParentIdMycertificationsCount(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/mycertifications/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdNotificationSettings(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/notificationSettings`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByParentIdNotificationSettings(parentId, memberNotificationSetting) {
        return this.request({
            path: `/system/members/${parentId}/notificationSettings`,
            method: 'post',
            data: memberNotificationSetting,
        });
    }
    getSystemMembersByParentIdNotificationSettingsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/notificationSettings/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersByParentIdNotificationSettingsById(id, parentId) {
        return this.request({
            path: `/system/members/${parentId}/notificationSettings/${id}`,
            method: 'delete',
        });
    }
    putSystemMembersByParentIdNotificationSettingsById(id, parentId, memberNotificationSetting) {
        return this.request({
            path: `/system/members/${parentId}/notificationSettings/${id}`,
            method: 'put',
            data: memberNotificationSetting,
        });
    }
    patchSystemMembersByParentIdNotificationSettingsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/members/${parentId}/notificationSettings/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMembersByParentIdNotificationSettingsCount(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/notificationSettings/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdPersonas(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/personas`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdPersonasById(id, parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/personas/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdPersonasCount(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/personas/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersByParentIdSkills(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/skills`,
            method: 'get',
            params,
        });
    }
    postSystemMembersByParentIdSkills(parentId, memberSkill) {
        return this.request({
            path: `/system/members/${parentId}/skills`,
            method: 'post',
            data: memberSkill,
        });
    }
    getSystemMembersByParentIdSkillsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/skills/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersByParentIdSkillsById(id, parentId) {
        return this.request({
            path: `/system/members/${parentId}/skills/${id}`,
            method: 'delete',
        });
    }
    putSystemMembersByParentIdSkillsById(id, parentId, memberSkill) {
        return this.request({
            path: `/system/members/${parentId}/skills/${id}`,
            method: 'put',
            data: memberSkill,
        });
    }
    patchSystemMembersByParentIdSkillsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/members/${parentId}/skills/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMembersByParentIdSkillsCount(parentId, params = {}) {
        return this.request({
            path: `/system/members/${parentId}/skills/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersCount(params = {}) {
        return this.request({
            path: `/system/members/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersTypes(params = {}) {
        return this.request({
            path: `/system/members/types`,
            method: 'get',
            params,
        });
    }
    postSystemMembersTypes(type) {
        return this.request({
            path: `/system/members/types`,
            method: 'post',
            data: type,
        });
    }
    getSystemMembersTypesById(id, params = {}) {
        return this.request({
            path: `/system/members/types/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMembersTypesById(id) {
        return this.request({
            path: `/system/members/types/${id}`,
            method: 'delete',
        });
    }
    putSystemMembersTypesById(id, type) {
        return this.request({
            path: `/system/members/types/${id}`,
            method: 'put',
            data: type,
        });
    }
    patchSystemMembersTypesById(id, patchOperations) {
        return this.request({
            path: `/system/members/types/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMembersTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/members/types/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemMembersTypesCount(params = {}) {
        return this.request({
            path: `/system/members/types/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersTypesInfo(params = {}) {
        return this.request({
            path: `/system/members/types/info`,
            method: 'get',
            params,
        });
    }
    getSystemMembersTypesInfoCount(params = {}) {
        return this.request({
            path: `/system/members/types/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemMembersWithSso(params = {}) {
        return this.request({
            path: `/system/members/withSso`,
            method: 'get',
            params,
        });
    }
    getSystemMenuentries(params = {}) {
        return this.request({
            path: `/system/menuentries`,
            method: 'get',
            params,
        });
    }
    postSystemMenuentries(menuEntry) {
        return this.request({
            path: `/system/menuentries`,
            method: 'post',
            data: menuEntry,
        });
    }
    getSystemMenuentriesById(id, params = {}) {
        return this.request({
            path: `/system/menuentries/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMenuentriesById(id) {
        return this.request({
            path: `/system/menuentries/${id}`,
            method: 'delete',
        });
    }
    putSystemMenuentriesById(id, menuEntry) {
        return this.request({
            path: `/system/menuentries/${id}`,
            method: 'put',
            data: menuEntry,
        });
    }
    patchSystemMenuentriesById(id, patchOperations) {
        return this.request({
            path: `/system/menuentries/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMenuentriesByIdImage(id, lastmodified, largeFlag, params = {}) {
        return this.request({
            path: `/system/menuentries/${id}/image`,
            method: 'get',
            params,
        });
    }
    postSystemMenuentriesByIdImage(id) {
        return this.request({
            path: `/system/menuentries/${id}/image`,
            method: 'post',
        });
    }
    getSystemMenuEntriesByParentIdLocations(parentId, params = {}) {
        return this.request({
            path: `/system/menuEntries/${parentId}/locations`,
            method: 'get',
            params,
        });
    }
    postSystemMenuEntriesByParentIdLocations(parentId, menuEntryLocation) {
        return this.request({
            path: `/system/menuEntries/${parentId}/locations`,
            method: 'post',
            data: menuEntryLocation,
        });
    }
    getSystemMenuEntriesByParentIdLocationsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/menuEntries/${parentId}/locations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMenuEntriesByParentIdLocationsById(id, parentId) {
        return this.request({
            path: `/system/menuEntries/${parentId}/locations/${id}`,
            method: 'delete',
        });
    }
    getSystemMenuEntriesByParentIdLocationsCount(parentId, params = {}) {
        return this.request({
            path: `/system/menuEntries/${parentId}/locations/count`,
            method: 'get',
            params,
        });
    }
    getSystemMenuentriesCount(params = {}) {
        return this.request({
            path: `/system/menuentries/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyAccountById(id, params = {}) {
        return this.request({
            path: `/system/myAccount/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMyAccountById(id, myAccount) {
        return this.request({
            path: `/system/myAccount/${id}`,
            method: 'put',
            data: myAccount,
        });
    }
    patchSystemMyAccountById(id, patchOperations) {
        return this.request({
            path: `/system/myAccount/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyAccountByParentIdDelegations(parentId, params = {}) {
        return this.request({
            path: `/system/myAccount/${parentId}/delegations`,
            method: 'get',
            params,
        });
    }
    postSystemMyAccountByParentIdDelegations(parentId, memberDelegation) {
        return this.request({
            path: `/system/myAccount/${parentId}/delegations`,
            method: 'post',
            data: memberDelegation,
        });
    }
    getSystemMyAccountByParentIdDelegationsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/myAccount/${parentId}/delegations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMyAccountByParentIdDelegationsById(id, parentId) {
        return this.request({
            path: `/system/myAccount/${parentId}/delegations/${id}`,
            method: 'delete',
        });
    }
    putSystemMyAccountByParentIdDelegationsById(id, parentId, memberDelegation) {
        return this.request({
            path: `/system/myAccount/${parentId}/delegations/${id}`,
            method: 'put',
            data: memberDelegation,
        });
    }
    patchSystemMyAccountByParentIdDelegationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/myAccount/${parentId}/delegations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyAccountByParentIdDelegationsCount(parentId, params = {}) {
        return this.request({
            path: `/system/myAccount/${parentId}/delegations/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyAccountByParentIdSkills(parentId, params = {}) {
        return this.request({
            path: `/system/myAccount/${parentId}/skills`,
            method: 'get',
            params,
        });
    }
    postSystemMyAccountByParentIdSkills(parentId, memberSkill) {
        return this.request({
            path: `/system/myAccount/${parentId}/skills`,
            method: 'post',
            data: memberSkill,
        });
    }
    getSystemMyAccountByParentIdSkillsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/myAccount/${parentId}/skills/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemMyAccountByParentIdSkillsById(id, parentId) {
        return this.request({
            path: `/system/myAccount/${parentId}/skills/${id}`,
            method: 'delete',
        });
    }
    putSystemMyAccountByParentIdSkillsById(id, parentId, memberSkill) {
        return this.request({
            path: `/system/myAccount/${parentId}/skills/${id}`,
            method: 'put',
            data: memberSkill,
        });
    }
    patchSystemMyAccountByParentIdSkillsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/myAccount/${parentId}/skills/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyAccountByParentIdSkillsCount(parentId, params = {}) {
        return this.request({
            path: `/system/myAccount/${parentId}/skills/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructure(params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructure`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructureById(id, params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructure/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMyCompanyCorporateStructureById(id, corporateStructure) {
        return this.request({
            path: `/system/myCompany/corporateStructure/${id}`,
            method: 'put',
            data: corporateStructure,
        });
    }
    patchSystemMyCompanyCorporateStructureById(id, patchOperations) {
        return this.request({
            path: `/system/myCompany/corporateStructure/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyCompanyCorporateStructureByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructure/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructureCount(params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructure/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructureInfo(params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructure/info`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructureInfoCount(params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructure/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructureLevels(params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructureLevels`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructureLevelsById(id, params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructureLevels/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCorporateStructureLevelsCount(params = {}) {
        return this.request({
            path: `/system/myCompany/corporateStructureLevels/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCrm(params = {}) {
        return this.request({
            path: `/system/myCompany/crm`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCrmById(id, params = {}) {
        return this.request({
            path: `/system/myCompany/crm/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMyCompanyCrmById(id, crm) {
        return this.request({
            path: `/system/myCompany/crm/${id}`,
            method: 'put',
            data: crm,
        });
    }
    patchSystemMyCompanyCrmById(id, patchOperations) {
        return this.request({
            path: `/system/myCompany/crm/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyCompanyCrmByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/myCompany/crm/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCrmCount(params = {}) {
        return this.request({
            path: `/system/myCompany/crm/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCrmInfo(params = {}) {
        return this.request({
            path: `/system/myCompany/crm/info`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyCrmInfoCount(params = {}) {
        return this.request({
            path: `/system/myCompany/crm/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemMycompanyDocuments(params = {}) {
        return this.request({
            path: `/system/mycompany/documents`,
            method: 'get',
            params,
        });
    }
    getSystemMycompanyDocumentsById(id, params = {}) {
        return this.request({
            path: `/system/mycompany/documents/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMycompanyDocumentsById(id, document) {
        return this.request({
            path: `/system/mycompany/documents/${id}`,
            method: 'put',
            data: document,
        });
    }
    patchSystemMycompanyDocumentsById(id, patchOperations) {
        return this.request({
            path: `/system/mycompany/documents/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMycompanyInfoServices(params = {}) {
        return this.request({
            path: `/system/mycompany/info/services`,
            method: 'get',
            params,
        });
    }
    getSystemMycompanyInfoServicesById(id, params = {}) {
        return this.request({
            path: `/system/mycompany/info/services/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyOther(params = {}) {
        return this.request({
            path: `/system/myCompany/other`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyOtherById(id, params = {}) {
        return this.request({
            path: `/system/myCompany/other/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMyCompanyOtherById(id, other) {
        return this.request({
            path: `/system/myCompany/other/${id}`,
            method: 'put',
            data: other,
        });
    }
    patchSystemMyCompanyOtherById(id, patchOperations) {
        return this.request({
            path: `/system/myCompany/other/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyCompanyOtherCount(params = {}) {
        return this.request({
            path: `/system/myCompany/other/count`,
            method: 'get',
            params,
        });
    }
    getSystemMycompanyReportingServices(params = {}) {
        return this.request({
            path: `/system/mycompany/reportingServices`,
            method: 'get',
            params,
        });
    }
    getSystemMycompanyReportingServicesById(id, params = {}) {
        return this.request({
            path: `/system/mycompany/reportingServices/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMycompanyReportingServicesById(id, service) {
        return this.request({
            path: `/system/mycompany/reportingServices/${id}`,
            method: 'put',
            data: service,
        });
    }
    patchSystemMycompanyReportingServicesById(id, patchOperations) {
        return this.request({
            path: `/system/mycompany/reportingServices/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSystemMycompanyReportingServicesByIdTestConnection(id) {
        return this.request({
            path: `/system/mycompany/reportingServices/${id}/testConnection`,
            method: 'post',
        });
    }
    getSystemMycompanyServices(params = {}) {
        return this.request({
            path: `/system/mycompany/services`,
            method: 'get',
            params,
        });
    }
    getSystemMycompanyServicesById(id, params = {}) {
        return this.request({
            path: `/system/mycompany/services/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMycompanyServicesById(id, service) {
        return this.request({
            path: `/system/mycompany/services/${id}`,
            method: 'put',
            data: service,
        });
    }
    patchSystemMycompanyServicesById(id, patchOperations) {
        return this.request({
            path: `/system/mycompany/services/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyCompanyTimeExpense(params = {}) {
        return this.request({
            path: `/system/myCompany/timeExpense`,
            method: 'get',
            params,
        });
    }
    getSystemMyCompanyTimeExpenseById(id, params = {}) {
        return this.request({
            path: `/system/myCompany/timeExpense/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemMyCompanyTimeExpenseById(id, timeExpense) {
        return this.request({
            path: `/system/myCompany/timeExpense/${id}`,
            method: 'put',
            data: timeExpense,
        });
    }
    patchSystemMyCompanyTimeExpenseById(id, patchOperations) {
        return this.request({
            path: `/system/myCompany/timeExpense/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemMyCompanyTimeExpenseCount(params = {}) {
        return this.request({
            path: `/system/myCompany/timeExpense/count`,
            method: 'get',
            params,
        });
    }
    getSystemMyMembers(params = {}) {
        return this.request({
            path: `/system/myMembers`,
            method: 'get',
            params,
        });
    }
    getSystemMyMembersInfo(params = {}) {
        return this.request({
            path: `/system/myMembers/info`,
            method: 'get',
            params,
        });
    }
    getSystemMySecurity(params = {}) {
        return this.request({
            path: `/system/mySecurity`,
            method: 'get',
            params,
        });
    }
    getSystemMySecurityCustomizeItems(params = {}) {
        return this.request({
            path: `/system/mySecurity/customizeItems/`,
            method: 'get',
            params,
        });
    }
    getSystemNotificationRecipients(params = {}) {
        return this.request({
            path: `/system/notificationRecipients`,
            method: 'get',
            params,
        });
    }
    getSystemNotificationRecipientsById(id, params = {}) {
        return this.request({
            path: `/system/notificationRecipients/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemNotificationRecipientsCount(params = {}) {
        return this.request({
            path: `/system/notificationRecipients/count`,
            method: 'get',
            params,
        });
    }
    getSystemOffice365EmailSetups(params = {}) {
        return this.request({
            path: `/system/office365/emailSetups`,
            method: 'get',
            params,
        });
    }
    postSystemOffice365EmailSetups(entity) {
        return this.request({
            path: `/system/office365/emailSetups`,
            method: 'post',
            data: entity,
        });
    }
    getSystemOffice365EmailSetupsById(id, params = {}) {
        return this.request({
            path: `/system/office365/emailSetups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemOffice365EmailSetupsById(id) {
        return this.request({
            path: `/system/office365/emailSetups/${id}`,
            method: 'delete',
        });
    }
    putSystemOffice365EmailSetupsById(id, entity) {
        return this.request({
            path: `/system/office365/emailSetups/${id}`,
            method: 'put',
            data: entity,
        });
    }
    patchSystemOffice365EmailSetupsById(id, patchOperations) {
        return this.request({
            path: `/system/office365/emailSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSystemOffice365EmailSetupsByIdAuthorize(id) {
        return this.request({
            path: `/system/office365/emailSetups/${id}/authorize`,
            method: 'post',
        });
    }
    postSystemOffice365EmailSetupsByIdTestConnection(id) {
        return this.request({
            path: `/system/office365/emailSetups/${id}/testConnection`,
            method: 'post',
        });
    }
    getSystemOffice365EmailSetupsCount(params = {}) {
        return this.request({
            path: `/system/office365/emailSetups/count`,
            method: 'get',
            params,
        });
    }
    getSystemOsgradeweights(params = {}) {
        return this.request({
            path: `/system/osgradeweights`,
            method: 'get',
            params,
        });
    }
    getSystemOsgradeweightsById(id, params = {}) {
        return this.request({
            path: `/system/osgradeweights/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemOsgradeweightsById(id, osGradeWeight) {
        return this.request({
            path: `/system/osgradeweights/${id}`,
            method: 'put',
            data: osGradeWeight,
        });
    }
    patchSystemOsgradeweightsById(id, patchOperations) {
        return this.request({
            path: `/system/osgradeweights/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemOsgradeweightsCount(params = {}) {
        return this.request({
            path: `/system/osgradeweights/count`,
            method: 'get',
            params,
        });
    }
    getSystemParsingTypes(params = {}) {
        return this.request({
            path: `/system/parsingTypes`,
            method: 'get',
            params,
        });
    }
    getSystemParsingTypesById(id, params = {}) {
        return this.request({
            path: `/system/parsingTypes/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemParsingTypesCount(params = {}) {
        return this.request({
            path: `/system/parsingTypes/count`,
            method: 'get',
            params,
        });
    }
    getSystemParsingVariables(params = {}) {
        return this.request({
            path: `/system/parsingVariables`,
            method: 'get',
            params,
        });
    }
    getSystemParsingVariablesById(id, params = {}) {
        return this.request({
            path: `/system/parsingVariables/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemParsingVariablesCount(params = {}) {
        return this.request({
            path: `/system/parsingVariables/count`,
            method: 'get',
            params,
        });
    }
    getSystemPortalReports(params = {}) {
        return this.request({
            path: `/system/portalReports`,
            method: 'get',
            params,
        });
    }
    postSystemPortalReports(portalReport) {
        return this.request({
            path: `/system/portalReports`,
            method: 'post',
            data: portalReport,
        });
    }
    getSystemPortalReportsById(id, params = {}) {
        return this.request({
            path: `/system/portalReports/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemPortalReportsById(id) {
        return this.request({
            path: `/system/portalReports/${id}`,
            method: 'delete',
        });
    }
    putSystemPortalReportsById(id, portalReport) {
        return this.request({
            path: `/system/portalReports/${id}`,
            method: 'put',
            data: portalReport,
        });
    }
    patchSystemPortalReportsById(id, patchOperations) {
        return this.request({
            path: `/system/portalReports/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemPortalReportsCount(params = {}) {
        return this.request({
            path: `/system/portalReports/count`,
            method: 'get',
            params,
        });
    }
    getSystemQuoteLinkSetup(params = {}) {
        return this.request({
            path: `/system/quoteLinkSetup`,
            method: 'get',
            params,
        });
    }
    postSystemQuoteLinkSetup(quoteLink) {
        return this.request({
            path: `/system/quoteLinkSetup`,
            method: 'post',
            data: quoteLink,
        });
    }
    getSystemQuoteLinkSetupById(id, params = {}) {
        return this.request({
            path: `/system/quoteLinkSetup/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemQuoteLinkSetupById(id) {
        return this.request({
            path: `/system/quoteLinkSetup/${id}`,
            method: 'delete',
        });
    }
    putSystemQuoteLinkSetupById(id, quoteLink) {
        return this.request({
            path: `/system/quoteLinkSetup/${id}`,
            method: 'put',
            data: quoteLink,
        });
    }
    patchSystemQuoteLinkSetupById(id, patchOperations) {
        return this.request({
            path: `/system/quoteLinkSetup/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemQuoteLinkSetupCount(params = {}) {
        return this.request({
            path: `/system/quoteLinkSetup/count`,
            method: 'get',
            params,
        });
    }
    getSystemQuoteLinkSetupTestConnection(url, params = {}) {
        return this.request({
            path: `/system/quoteLinkSetup/testConnection`,
            method: 'get',
            params,
        });
    }
    getSystemReportCards(params = {}) {
        return this.request({
            path: `/system/reportCards`,
            method: 'get',
            params,
        });
    }
    postSystemReportCards(reportCard) {
        return this.request({
            path: `/system/reportCards`,
            method: 'post',
            data: reportCard,
        });
    }
    getSystemReportCardsById(id, params = {}) {
        return this.request({
            path: `/system/reportCards/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemReportCardsById(id) {
        return this.request({
            path: `/system/reportCards/${id}`,
            method: 'delete',
        });
    }
    putSystemReportCardsById(id, reportCard) {
        return this.request({
            path: `/system/reportCards/${id}`,
            method: 'put',
            data: reportCard,
        });
    }
    patchSystemReportCardsById(id, patchOperations) {
        return this.request({
            path: `/system/reportCards/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemReportCardsByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/reportCards/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemReportCardsByParentIdDetails(parentId, params = {}) {
        return this.request({
            path: `/system/reportCards/${parentId}/details`,
            method: 'get',
            params,
        });
    }
    postSystemReportCardsByParentIdDetails(parentId, reportCardDetail) {
        return this.request({
            path: `/system/reportCards/${parentId}/details`,
            method: 'post',
            data: reportCardDetail,
        });
    }
    getSystemReportCardsByParentIdDetailsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/reportCards/${parentId}/details/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemReportCardsByParentIdDetailsById(id, parentId) {
        return this.request({
            path: `/system/reportCards/${parentId}/details/${id}`,
            method: 'delete',
        });
    }
    putSystemReportCardsByParentIdDetailsById(id, parentId, reportCardDetail) {
        return this.request({
            path: `/system/reportCards/${parentId}/details/${id}`,
            method: 'put',
            data: reportCardDetail,
        });
    }
    patchSystemReportCardsByParentIdDetailsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/reportCards/${parentId}/details/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemReportCardsByParentIdDetailsCount(parentId, params = {}) {
        return this.request({
            path: `/system/reportCards/${parentId}/details/count`,
            method: 'get',
            params,
        });
    }
    getSystemReportCardsCount(params = {}) {
        return this.request({
            path: `/system/reportCards/count`,
            method: 'get',
            params,
        });
    }
    getSystemReportCardsInfo(params = {}) {
        return this.request({
            path: `/system/reportCards/info`,
            method: 'get',
            params,
        });
    }
    getSystemReportCardsInfoCount(params = {}) {
        return this.request({
            path: `/system/reportCards/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemReports(params = {}) {
        return this.request({
            path: `/system/reports`,
            method: 'get',
            params,
        });
    }
    getSystemReportsByReportName(reportName, params = {}) {
        return this.request({
            path: `/system/reports/${reportName}`,
            method: 'get',
            params,
        });
    }
    getSystemReportsByReportNameColumns(reportName, params = {}) {
        return this.request({
            path: `/system/reports/${reportName}/columns`,
            method: 'get',
            params,
        });
    }
    getSystemReportsByReportNameCount(reportName, params = {}) {
        return this.request({
            path: `/system/reports/${reportName}/count`,
            method: 'get',
            params,
        });
    }
    getSystemSecurityroles(params = {}) {
        return this.request({
            path: `/system/securityroles`,
            method: 'get',
            params,
        });
    }
    postSystemSecurityroles(securityRole) {
        return this.request({
            path: `/system/securityroles`,
            method: 'post',
            data: securityRole,
        });
    }
    getSystemSecurityrolesById(id, params = {}) {
        return this.request({
            path: `/system/securityroles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemSecurityrolesById(id) {
        return this.request({
            path: `/system/securityroles/${id}`,
            method: 'delete',
        });
    }
    getSystemSecurityrolesByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/securityroles/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemSecurityRolesByParentIdSettings(parentId, params = {}) {
        return this.request({
            path: `/system/securityRoles/${parentId}/settings`,
            method: 'get',
            params,
        });
    }
    getSystemSecurityRolesByParentIdSettingsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/securityRoles/${parentId}/settings/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemSecurityRolesByParentIdSettingsCount(parentId, params = {}) {
        return this.request({
            path: `/system/securityRoles/${parentId}/settings/count`,
            method: 'get',
            params,
        });
    }
    getSystemSecurityrolesCount(params = {}) {
        return this.request({
            path: `/system/securityroles/count`,
            method: 'get',
            params,
        });
    }
    getSystemSecurityrolesInfo(params = {}) {
        return this.request({
            path: `/system/securityroles/info`,
            method: 'get',
            params,
        });
    }
    getSystemSecurityrolesInfoCount(params = {}) {
        return this.request({
            path: `/system/securityroles/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemSettings(params = {}) {
        return this.request({
            path: `/system/settings`,
            method: 'get',
            params,
        });
    }
    getSystemSettingsById(id, params = {}) {
        return this.request({
            path: `/system/settings/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemSettingsById(id, systemSetting) {
        return this.request({
            path: `/system/settings/${id}`,
            method: 'put',
            data: systemSetting,
        });
    }
    patchSystemSettingsById(id, patchOperations) {
        return this.request({
            path: `/system/settings/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemSettingsCount(params = {}) {
        return this.request({
            path: `/system/settings/count`,
            method: 'get',
            params,
        });
    }
    getSystemSetupScreens(params = {}) {
        return this.request({
            path: `/system/setupScreens`,
            method: 'get',
            params,
        });
    }
    getSystemSetupScreensById(id, params = {}) {
        return this.request({
            path: `/system/setupScreens/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemSetupScreensCount(params = {}) {
        return this.request({
            path: `/system/setupScreens/count`,
            method: 'get',
            params,
        });
    }
    getSystemSkillCategories(params = {}) {
        return this.request({
            path: `/system/skillCategories`,
            method: 'get',
            params,
        });
    }
    postSystemSkillCategories(skillCategory) {
        return this.request({
            path: `/system/skillCategories`,
            method: 'post',
            data: skillCategory,
        });
    }
    getSystemSkillCategoriesById(id, params = {}) {
        return this.request({
            path: `/system/skillCategories/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemSkillCategoriesById(id) {
        return this.request({
            path: `/system/skillCategories/${id}`,
            method: 'delete',
        });
    }
    putSystemSkillCategoriesById(id, skillCategory) {
        return this.request({
            path: `/system/skillCategories/${id}`,
            method: 'put',
            data: skillCategory,
        });
    }
    patchSystemSkillCategoriesById(id, patchOperations) {
        return this.request({
            path: `/system/skillCategories/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemSkillCategoriesCount(params = {}) {
        return this.request({
            path: `/system/skillCategories/count`,
            method: 'get',
            params,
        });
    }
    getSystemSkills(params = {}) {
        return this.request({
            path: `/system/skills`,
            method: 'get',
            params,
        });
    }
    postSystemSkills(skill) {
        return this.request({
            path: `/system/skills`,
            method: 'post',
            data: skill,
        });
    }
    getSystemSkillsById(id, params = {}) {
        return this.request({
            path: `/system/skills/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemSkillsById(id) {
        return this.request({
            path: `/system/skills/${id}`,
            method: 'delete',
        });
    }
    putSystemSkillsById(id, skill) {
        return this.request({
            path: `/system/skills/${id}`,
            method: 'put',
            data: skill,
        });
    }
    patchSystemSkillsById(id, patchOperations) {
        return this.request({
            path: `/system/skills/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemSkillsByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/skills/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemSkillsCount(params = {}) {
        return this.request({
            path: `/system/skills/count`,
            method: 'get',
            params,
        });
    }
    getSystemSkillsInfo(params = {}) {
        return this.request({
            path: `/system/skills/info`,
            method: 'get',
            params,
        });
    }
    getSystemSkillsInfoCount(params = {}) {
        return this.request({
            path: `/system/skills/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemSsoConfigurations(params = {}) {
        return this.request({
            path: `/system/ssoConfigurations`,
            method: 'get',
            params,
        });
    }
    postSystemSsoConfigurations(ssoConfiguration) {
        return this.request({
            path: `/system/ssoConfigurations`,
            method: 'post',
            data: ssoConfiguration,
        });
    }
    getSystemSsoConfigurationsById(id, params = {}) {
        return this.request({
            path: `/system/ssoConfigurations/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemSsoConfigurationsById(id, ssoConfiguration) {
        return this.request({
            path: `/system/ssoConfigurations/${id}`,
            method: 'put',
            data: ssoConfiguration,
        });
    }
    patchSystemSsoConfigurationsById(id, patchOperations) {
        return this.request({
            path: `/system/ssoConfigurations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteSystemSsoConfigurationsById(id) {
        return this.request({
            path: `/system/ssoConfigurations/${id}`,
            method: 'delete',
        });
    }
    postSystemSsoConfigurationsByIdRegistertoken(id, ssoConfiguration) {
        return this.request({
            path: `/system/ssoConfigurations/${id}/registertoken`,
            method: 'post',
            data: ssoConfiguration,
        });
    }
    postSystemSsoConfigurationsByIdSubmitmembers(id, ssoConfiguration) {
        return this.request({
            path: `/system/ssoConfigurations/${id}/submitmembers`,
            method: 'post',
            data: ssoConfiguration,
        });
    }
    getSystemSsoConfigurationsCount(params = {}) {
        return this.request({
            path: `/system/ssoConfigurations/count`,
            method: 'get',
            params,
        });
    }
    getSystemSsoUsers(params = {}) {
        return this.request({
            path: `/system/ssoUsers`,
            method: 'get',
            params,
        });
    }
    getSystemSsoUsersByExternalId(externalId, params = {}) {
        return this.request({
            path: `/system/ssoUsers/${externalId}`,
            method: 'get',
            params,
        });
    }
    getSystemSsoUsersCount(params = {}) {
        return this.request({
            path: `/system/ssoUsers/count`,
            method: 'get',
            params,
        });
    }
    getSystemStandardNotes(params = {}) {
        return this.request({
            path: `/system/standardNotes`,
            method: 'get',
            params,
        });
    }
    postSystemStandardNotes(standardNote) {
        return this.request({
            path: `/system/standardNotes`,
            method: 'post',
            data: standardNote,
        });
    }
    getSystemStandardNotesById(id, params = {}) {
        return this.request({
            path: `/system/standardNotes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemStandardNotesById(id) {
        return this.request({
            path: `/system/standardNotes/${id}`,
            method: 'delete',
        });
    }
    putSystemStandardNotesById(id, standardNote) {
        return this.request({
            path: `/system/standardNotes/${id}`,
            method: 'put',
            data: standardNote,
        });
    }
    patchSystemStandardNotesById(id, patchOperations) {
        return this.request({
            path: `/system/standardNotes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemStandardNotesCount(params = {}) {
        return this.request({
            path: `/system/standardNotes/count`,
            method: 'get',
            params,
        });
    }
    getSystemSurveys(params = {}) {
        return this.request({
            path: `/system/surveys`,
            method: 'get',
            params,
        });
    }
    postSystemSurveys(survey) {
        return this.request({
            path: `/system/surveys`,
            method: 'post',
            data: survey,
        });
    }
    getSystemSurveysByGrandparentIdQuestionsByParentIdValues(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/surveys/${grandparentId}/questions/${parentId}/values`,
            method: 'get',
            params,
        });
    }
    postSystemSurveysByGrandparentIdQuestionsByParentIdValues(parentId, grandparentId, surveyQuestionValue) {
        return this.request({
            path: `/system/surveys/${grandparentId}/questions/${parentId}/values`,
            method: 'post',
            data: surveyQuestionValue,
        });
    }
    getSystemSurveysByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/surveys/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemSurveysByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId) {
        return this.request({
            path: `/system/surveys/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'delete',
        });
    }
    putSystemSurveysByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId, surveyQuestionValue) {
        return this.request({
            path: `/system/surveys/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'put',
            data: surveyQuestionValue,
        });
    }
    patchSystemSurveysByGrandparentIdQuestionsByParentIdValuesById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/system/surveys/${grandparentId}/questions/${parentId}/values/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemSurveysById(id, params = {}) {
        return this.request({
            path: `/system/surveys/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemSurveysById(id) {
        return this.request({
            path: `/system/surveys/${id}`,
            method: 'delete',
        });
    }
    putSystemSurveysById(id, survey) {
        return this.request({
            path: `/system/surveys/${id}`,
            method: 'put',
            data: survey,
        });
    }
    patchSystemSurveysById(id, patchOperations) {
        return this.request({
            path: `/system/surveys/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSystemSurveysByIdCopy(id) {
        return this.request({
            path: `/system/surveys/${id}/copy`,
            method: 'post',
        });
    }
    getSystemSurveysByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/surveys/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemSurveysByParentIdQuestions(parentId, params = {}) {
        return this.request({
            path: `/system/surveys/${parentId}/questions`,
            method: 'get',
            params,
        });
    }
    postSystemSurveysByParentIdQuestions(parentId, surveyQuestion) {
        return this.request({
            path: `/system/surveys/${parentId}/questions`,
            method: 'post',
            data: surveyQuestion,
        });
    }
    getSystemSurveysByParentIdQuestionsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/surveys/${parentId}/questions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemSurveysByParentIdQuestionsById(id, parentId) {
        return this.request({
            path: `/system/surveys/${parentId}/questions/${id}`,
            method: 'delete',
        });
    }
    putSystemSurveysByParentIdQuestionsById(id, parentId, surveyQuestion) {
        return this.request({
            path: `/system/surveys/${parentId}/questions/${id}`,
            method: 'put',
            data: surveyQuestion,
        });
    }
    patchSystemSurveysByParentIdQuestionsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/surveys/${parentId}/questions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemSurveysByParentIdQuestionsCount(parentId, params = {}) {
        return this.request({
            path: `/system/surveys/${parentId}/questions/count`,
            method: 'get',
            params,
        });
    }
    getSystemSurveysCount(params = {}) {
        return this.request({
            path: `/system/surveys/count`,
            method: 'get',
            params,
        });
    }
    getSystemSurveysInfo(params = {}) {
        return this.request({
            path: `/system/surveys/info`,
            method: 'get',
            params,
        });
    }
    getSystemSurveysInfoCount(params = {}) {
        return this.request({
            path: `/system/surveys/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemTimeZoneSetups(params = {}) {
        return this.request({
            path: `/system/timeZoneSetups`,
            method: 'get',
            params,
        });
    }
    postSystemTimeZoneSetups(timeZoneSetup) {
        return this.request({
            path: `/system/timeZoneSetups`,
            method: 'post',
            data: timeZoneSetup,
        });
    }
    getSystemTimeZoneSetupsById(id, params = {}) {
        return this.request({
            path: `/system/timeZoneSetups/${id}`,
            method: 'get',
            params,
        });
    }
    putSystemTimeZoneSetupsById(id, timeZoneSetup) {
        return this.request({
            path: `/system/timeZoneSetups/${id}`,
            method: 'put',
            data: timeZoneSetup,
        });
    }
    patchSystemTimeZoneSetupsById(id, patchOperations) {
        return this.request({
            path: `/system/timeZoneSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteSystemTimeZoneSetupsById(id) {
        return this.request({
            path: `/system/timeZoneSetups/${id}`,
            method: 'delete',
        });
    }
    getSystemTimeZoneSetupsByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/timeZoneSetups/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemTimeZoneSetupsCount(params = {}) {
        return this.request({
            path: `/system/timeZoneSetups/count`,
            method: 'get',
            params,
        });
    }
    getSystemTimeZoneSetupsInfo(params = {}) {
        return this.request({
            path: `/system/timeZoneSetups/info`,
            method: 'get',
            params,
        });
    }
    getSystemTimeZoneSetupsInfoCount(params = {}) {
        return this.request({
            path: `/system/timeZoneSetups/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemTodayPageCategories(params = {}) {
        return this.request({
            path: `/system/todayPageCategories`,
            method: 'get',
            params,
        });
    }
    postSystemTodayPageCategories(todayPageCategory) {
        return this.request({
            path: `/system/todayPageCategories`,
            method: 'post',
            data: todayPageCategory,
        });
    }
    getSystemTodayPageCategoriesById(id, params = {}) {
        return this.request({
            path: `/system/todayPageCategories/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemTodayPageCategoriesById(id) {
        return this.request({
            path: `/system/todayPageCategories/${id}`,
            method: 'delete',
        });
    }
    putSystemTodayPageCategoriesById(id, todayPageCategory) {
        return this.request({
            path: `/system/todayPageCategories/${id}`,
            method: 'put',
            data: todayPageCategory,
        });
    }
    patchSystemTodayPageCategoriesById(id, patchOperations) {
        return this.request({
            path: `/system/todayPageCategories/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemTodayPageCategoriesCount(params = {}) {
        return this.request({
            path: `/system/todayPageCategories/count`,
            method: 'get',
            params,
        });
    }
    getSystemUserDefinedFields(params = {}) {
        return this.request({
            path: `/system/userDefinedFields`,
            method: 'get',
            params,
        });
    }
    postSystemUserDefinedFields(userDefinedField) {
        return this.request({
            path: `/system/userDefinedFields`,
            method: 'post',
            data: userDefinedField,
        });
    }
    getSystemUserDefinedFieldsById(id, params = {}) {
        return this.request({
            path: `/system/userDefinedFields/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemUserDefinedFieldsById(id) {
        return this.request({
            path: `/system/userDefinedFields/${id}`,
            method: 'delete',
        });
    }
    putSystemUserDefinedFieldsById(id, userDefinedField) {
        return this.request({
            path: `/system/userDefinedFields/${id}`,
            method: 'put',
            data: userDefinedField,
        });
    }
    patchSystemUserDefinedFieldsById(id, patchOperations) {
        return this.request({
            path: `/system/userDefinedFields/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemUserDefinedFieldsByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/userDefinedFields/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemUserDefinedFieldsCount(params = {}) {
        return this.request({
            path: `/system/userDefinedFields/count`,
            method: 'get',
            params,
        });
    }
    getSystemUserDefinedFieldsInfo(params = {}) {
        return this.request({
            path: `/system/userDefinedFields/info`,
            method: 'get',
            params,
        });
    }
    getSystemUserDefinedFieldsInfoCount(params = {}) {
        return this.request({
            path: `/system/userDefinedFields/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowActionsByParentIdAutomateParameters(parentId, params = {}) {
        return this.request({
            path: `/system/workflowActions/${parentId}/automateParameters`,
            method: 'get',
            params,
        });
    }
    postSystemWorkflowActionsByParentIdAutomateParameters(parentId, workflowActionAutomateParameter) {
        return this.request({
            path: `/system/workflowActions/${parentId}/automateParameters`,
            method: 'post',
            data: workflowActionAutomateParameter,
        });
    }
    getSystemWorkflowActionsByParentIdAutomateParametersById(id, parentId, params = {}) {
        return this.request({
            path: `/system/workflowActions/${parentId}/automateParameters/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemWorkflowActionsByParentIdAutomateParametersById(id, parentId) {
        return this.request({
            path: `/system/workflowActions/${parentId}/automateParameters/${id}`,
            method: 'delete',
        });
    }
    putSystemWorkflowActionsByParentIdAutomateParametersById(id, parentId, workflowActionAutomateParameter) {
        return this.request({
            path: `/system/workflowActions/${parentId}/automateParameters/${id}`,
            method: 'put',
            data: workflowActionAutomateParameter,
        });
    }
    patchSystemWorkflowActionsByParentIdAutomateParametersById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/workflowActions/${parentId}/automateParameters/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemWorkflowActionsByParentIdAutomateParametersCount(parentId, params = {}) {
        return this.request({
            path: `/system/workflowActions/${parentId}/automateParameters/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflows(params = {}) {
        return this.request({
            path: `/system/workflows`,
            method: 'get',
            params,
        });
    }
    postSystemWorkflows(workflow) {
        return this.request({
            path: `/system/workflows`,
            method: 'post',
            data: workflow,
        });
    }
    getSystemWorkflowsByGrandparentIdEventsByParentIdActions(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/workflows/${grandparentId}/events/${parentId}/actions`,
            method: 'get',
            params,
        });
    }
    postSystemWorkflowsByGrandparentIdEventsByParentIdActions(parentId, grandparentId, workflowAction) {
        return this.request({
            path: `/system/workflows/${grandparentId}/events/${parentId}/actions`,
            method: 'post',
            data: workflowAction,
        });
    }
    getSystemWorkflowsByGrandparentIdEventsByParentIdActionsById(id, parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/workflows/${grandparentId}/events/${parentId}/actions/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemWorkflowsByGrandparentIdEventsByParentIdActionsById(id, parentId, grandparentId) {
        return this.request({
            path: `/system/workflows/${grandparentId}/events/${parentId}/actions/${id}`,
            method: 'delete',
        });
    }
    putSystemWorkflowsByGrandparentIdEventsByParentIdActionsById(id, parentId, grandparentId, workflowAction) {
        return this.request({
            path: `/system/workflows/${grandparentId}/events/${parentId}/actions/${id}`,
            method: 'put',
            data: workflowAction,
        });
    }
    patchSystemWorkflowsByGrandparentIdEventsByParentIdActionsById(id, parentId, grandparentId, patchOperations) {
        return this.request({
            path: `/system/workflows/${grandparentId}/events/${parentId}/actions/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getSystemWorkflowsByGrandparentIdEventsByParentIdActionsCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/workflows/${grandparentId}/events/${parentId}/actions/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByGrandparentIdTriggersByParentIdOptions(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/workflows/${grandparentId}/triggers/${parentId}/options`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByGrandparentIdTriggersByParentIdOptionsCount(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/workflows/${grandparentId}/triggers/${parentId}/options/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsById(id, params = {}) {
        return this.request({
            path: `/system/workflows/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemWorkflowsById(id) {
        return this.request({
            path: `/system/workflows/${id}`,
            method: 'delete',
        });
    }
    putSystemWorkflowsById(id, workflow) {
        return this.request({
            path: `/system/workflows/${id}`,
            method: 'put',
            data: workflow,
        });
    }
    patchSystemWorkflowsById(id, patchOperations) {
        return this.request({
            path: `/system/workflows/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSystemWorkflowsByIdCopy(id) {
        return this.request({
            path: `/system/workflows/${id}/copy`,
            method: 'post',
        });
    }
    getSystemWorkflowsByParentIdAttachments(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/attachments`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdAttachmentsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/attachments/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdAttachmentsCount(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/attachments/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdEvents(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/events`,
            method: 'get',
            params,
        });
    }
    postSystemWorkflowsByParentIdEvents(parentId, workflowEvent) {
        return this.request({
            path: `/system/workflows/${parentId}/events`,
            method: 'post',
            data: workflowEvent,
        });
    }
    getSystemWorkflowsByParentIdEventsById(id, parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/events/${id}`,
            method: 'get',
            params,
        });
    }
    deleteSystemWorkflowsByParentIdEventsById(id, parentId) {
        return this.request({
            path: `/system/workflows/${parentId}/events/${id}`,
            method: 'delete',
        });
    }
    putSystemWorkflowsByParentIdEventsById(id, parentId, workflowEvent) {
        return this.request({
            path: `/system/workflows/${parentId}/events/${id}`,
            method: 'put',
            data: workflowEvent,
        });
    }
    patchSystemWorkflowsByParentIdEventsById(id, parentId, patchOperations) {
        return this.request({
            path: `/system/workflows/${parentId}/events/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    postSystemWorkflowsByParentIdEventsByIdCopy(id, parentId) {
        return this.request({
            path: `/system/workflows/${parentId}/events/${id}/copy`,
            method: 'post',
        });
    }
    getSystemWorkflowsByParentIdEventsByIdTest(id, parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/events/${id}/test`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdEventsCount(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/events/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdNotifyTypes(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/notifyTypes`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdNotifyTypesById(id, parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/notifyTypes/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdNotifyTypesByIdInfo(id, parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/notifyTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdNotifyTypesCount(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/notifyTypes/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdNotifyTypesInfo(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/notifyTypes/info`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdNotifyTypesInfoCount(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/notifyTypes/info/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdTriggers(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/triggers`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsByParentIdTriggersCount(parentId, params = {}) {
        return this.request({
            path: `/system/workflows/${parentId}/triggers/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsCount(params = {}) {
        return this.request({
            path: `/system/workflows/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsTableTypes(params = {}) {
        return this.request({
            path: `/system/workflows/tableTypes`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsTableTypesById(id, params = {}) {
        return this.request({
            path: `/system/workflows/tableTypes/${id}`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsTableTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/system/workflows/tableTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsTableTypesCount(params = {}) {
        return this.request({
            path: `/system/workflows/tableTypes/count`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsTableTypesInfo(params = {}) {
        return this.request({
            path: `/system/workflows/tableTypes/info`,
            method: 'get',
            params,
        });
    }
    getSystemWorkflowsTableTypesInfoCount(params = {}) {
        return this.request({
            path: `/system/workflows/tableTypes/info/count`,
            method: 'get',
            params,
        });
    }
    putSystemWorkflowsUserdefinedfieldsById(id, workflowActionUserDefinedField) {
        return this.request({
            path: `/system/workflows/userdefinedfields/${id}`,
            method: 'put',
            data: workflowActionUserDefinedField,
        });
    }
    patchSystemWorkflowsUserdefinedfieldsById(id, patchOperations) {
        return this.request({
            path: `/system/workflows/userdefinedfields/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    deleteSystemWorkflowsUserdefinedfieldsActionsByParentId(parentId) {
        return this.request({
            path: `/system/workflows/userdefinedfields/actions/${parentId}`,
            method: 'delete',
        });
    }
    postSystemWorkflowsUserdefinedfieldsEventsByGrandparentId(grandparentId, workflowActionUserDefinedField) {
        return this.request({
            path: `/system/workflows/userdefinedfields/events/${grandparentId}`,
            method: 'post',
            data: workflowActionUserDefinedField,
        });
    }
    getSystemWorkflowsUserdefinedfieldsByGrandparentIdActionsByParentId(parentId, grandparentId, params = {}) {
        return this.request({
            path: `/system/workflows/userdefinedfields/events/${grandparentId}/actions/${parentId}`,
            method: 'get',
            params,
        });
    }
}
exports.SystemAPI = SystemAPI;
//# sourceMappingURL=SystemAPI.js.map