"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeAPI = void 0;
/* This file was auto-generated, do not manually edit. */
const Manage_1 = __importDefault(require("../Manage"));
/**
 * @module TimeAPI
 */
/**
 * Time module
 * @public
 */
class TimeAPI extends Manage_1.default {
    constructor(props) {
        super(props);
    }
    getTimeAccruals(params = {}) {
        return this.request({
            path: `/time/accruals`,
            method: 'get',
            params,
        });
    }
    postTimeAccruals(timeAccrual) {
        return this.request({
            path: `/time/accruals`,
            method: 'post',
            data: timeAccrual,
        });
    }
    getTimeAccrualsById(id, params = {}) {
        return this.request({
            path: `/time/accruals/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeAccrualsById(id) {
        return this.request({
            path: `/time/accruals/${id}`,
            method: 'delete',
        });
    }
    putTimeAccrualsById(id, timeAccrual) {
        return this.request({
            path: `/time/accruals/${id}`,
            method: 'put',
            data: timeAccrual,
        });
    }
    patchTimeAccrualsById(id, patchOperations) {
        return this.request({
            path: `/time/accruals/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeAccrualsByParentIdDetails(parentId, params = {}) {
        return this.request({
            path: `/time/accruals/${parentId}/details`,
            method: 'get',
            params,
        });
    }
    postTimeAccrualsByParentIdDetails(parentId, timeAccrualDetail) {
        return this.request({
            path: `/time/accruals/${parentId}/details/`,
            method: 'post',
            data: timeAccrualDetail,
        });
    }
    getTimeAccrualsByParentIdDetailsById(id, parentId, params = {}) {
        return this.request({
            path: `/time/accruals/${parentId}/details/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeAccrualsByParentIdDetailsById(id, parentId) {
        return this.request({
            path: `/time/accruals/${parentId}/details/${id}`,
            method: 'delete',
        });
    }
    putTimeAccrualsByParentIdDetailsById(id, parentId, timeAccrualDetail) {
        return this.request({
            path: `/time/accruals/${parentId}/details/${id}`,
            method: 'put',
            data: timeAccrualDetail,
        });
    }
    patchTimeAccrualsByParentIdDetailsById(id, parentId, patchOperations) {
        return this.request({
            path: `/time/accruals/${parentId}/details/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeAccrualsByParentIdDetailsCount(parentId, params = {}) {
        return this.request({
            path: `/time/accruals/${parentId}/details/count`,
            method: 'get',
            params,
        });
    }
    getTimeAccrualsCount(params = {}) {
        return this.request({
            path: `/time/accruals/count`,
            method: 'get',
            params,
        });
    }
    getTimeActivitystopwatches(params = {}) {
        return this.request({
            path: `/time/activitystopwatches`,
            method: 'get',
            params,
        });
    }
    postTimeActivitystopwatches(activityStopwatch) {
        return this.request({
            path: `/time/activitystopwatches`,
            method: 'post',
            data: activityStopwatch,
        });
    }
    getTimeActivitystopwatchesById(id, params = {}) {
        return this.request({
            path: `/time/activitystopwatches/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeActivitystopwatchesById(id) {
        return this.request({
            path: `/time/activitystopwatches/${id}`,
            method: 'delete',
        });
    }
    putTimeActivitystopwatchesById(id, activityStopwatch) {
        return this.request({
            path: `/time/activitystopwatches/${id}`,
            method: 'put',
            data: activityStopwatch,
        });
    }
    patchTimeActivitystopwatchesById(id, patchOperations) {
        return this.request({
            path: `/time/activitystopwatches/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeActivitystopwatchesCount(params = {}) {
        return this.request({
            path: `/time/activitystopwatches/count`,
            method: 'get',
            params,
        });
    }
    getTimeChargeCodes(params = {}) {
        return this.request({
            path: `/time/chargeCodes`,
            method: 'get',
            params,
        });
    }
    postTimeChargeCodes(chargeCode) {
        return this.request({
            path: `/time/chargeCodes`,
            method: 'post',
            data: chargeCode,
        });
    }
    getTimeChargeCodesById(id, params = {}) {
        return this.request({
            path: `/time/chargeCodes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeChargeCodesById(id) {
        return this.request({
            path: `/time/chargeCodes/${id}`,
            method: 'delete',
        });
    }
    putTimeChargeCodesById(id, chargeCode) {
        return this.request({
            path: `/time/chargeCodes/${id}`,
            method: 'put',
            data: chargeCode,
        });
    }
    patchTimeChargeCodesById(id, patchOperations) {
        return this.request({
            path: `/time/chargeCodes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeChargeCodesByIdInfo(id, params = {}) {
        return this.request({
            path: `/time/chargeCodes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getTimeChargeCodesByIdUsages(id, params = {}) {
        return this.request({
            path: `/time/chargeCodes/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getTimeChargeCodesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/time/chargeCodes/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getTimeChargeCodesByParentIdExpenseTypes(parentId, params = {}) {
        return this.request({
            path: `/time/chargeCodes/${parentId}/expenseTypes`,
            method: 'get',
            params,
        });
    }
    postTimeChargeCodesByParentIdExpenseTypes(parentId, chargeCodeExpenseType) {
        return this.request({
            path: `/time/chargeCodes/${parentId}/expenseTypes`,
            method: 'post',
            data: chargeCodeExpenseType,
        });
    }
    getTimeChargeCodesByParentIdExpenseTypesById(id, parentId, params = {}) {
        return this.request({
            path: `/time/chargeCodes/${parentId}/expenseTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeChargeCodesByParentIdExpenseTypesById(id, parentId) {
        return this.request({
            path: `/time/chargeCodes/${parentId}/expenseTypes/${id}`,
            method: 'delete',
        });
    }
    putTimeChargeCodesByParentIdExpenseTypesById(id, parentId, chargeCodeExpenseType) {
        return this.request({
            path: `/time/chargeCodes/${parentId}/expenseTypes/${id}`,
            method: 'put',
            data: chargeCodeExpenseType,
        });
    }
    patchTimeChargeCodesByParentIdExpenseTypesById(id, parentId, patchOperations) {
        return this.request({
            path: `/time/chargeCodes/${parentId}/expenseTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeChargeCodesByParentIdExpenseTypesCount(parentId, params = {}) {
        return this.request({
            path: `/time/chargeCodes/${parentId}/expenseTypes/count`,
            method: 'get',
            params,
        });
    }
    getTimeChargeCodesCount(params = {}) {
        return this.request({
            path: `/time/chargeCodes/count`,
            method: 'get',
            params,
        });
    }
    getTimeChargeCodesInfo(params = {}) {
        return this.request({
            path: `/time/chargeCodes/info`,
            method: 'get',
            params,
        });
    }
    getTimeChargeCodesInfoCount(params = {}) {
        return this.request({
            path: `/time/chargeCodes/info/count`,
            method: 'get',
            params,
        });
    }
    getTimeEntries(params = {}) {
        return this.request({
            path: `/time/entries`,
            method: 'get',
            params,
        });
    }
    postTimeEntries(timeEntry) {
        return this.request({
            path: `/time/entries`,
            method: 'post',
            data: timeEntry,
        });
    }
    getTimeEntriesById(id, params = {}) {
        return this.request({
            path: `/time/entries/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeEntriesById(id) {
        return this.request({
            path: `/time/entries/${id}`,
            method: 'delete',
        });
    }
    putTimeEntriesById(id, timeEntry) {
        return this.request({
            path: `/time/entries/${id}`,
            method: 'put',
            data: timeEntry,
        });
    }
    patchTimeEntriesById(id, patchOperations) {
        return this.request({
            path: `/time/entries/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeEntriesByParentIdAudits(parentId, params = {}) {
        return this.request({
            path: `/time/entries/${parentId}/audits`,
            method: 'get',
            params,
        });
    }
    getTimeEntriesByParentIdAuditsById(id, parentId, params = {}) {
        return this.request({
            path: `/time/entries/${parentId}/audits/${id}`,
            method: 'get',
            params,
        });
    }
    getTimeEntriesByParentIdAuditsCount(parentId, params = {}) {
        return this.request({
            path: `/time/entries/${parentId}/audits/count`,
            method: 'get',
            params,
        });
    }
    getTimeEntriesCount(params = {}) {
        return this.request({
            path: `/time/entries/count`,
            method: 'get',
            params,
        });
    }
    postTimeEntriesDefaults(timeEntry) {
        return this.request({
            path: `/time/entries/defaults`,
            method: 'post',
            data: timeEntry,
        });
    }
    getTimeInfoChargeCodeExpenseTypes(params = {}) {
        return this.request({
            path: `/time/info/chargeCodeExpenseTypes`,
            method: 'get',
            params,
        });
    }
    getTimeInfoChargeCodeExpenseTypesCount(params = {}) {
        return this.request({
            path: `/time/info/chargeCodeExpenseTypes/count`,
            method: 'get',
            params,
        });
    }
    getTimeSchedulestopwatches(params = {}) {
        return this.request({
            path: `/time/schedulestopwatches`,
            method: 'get',
            params,
        });
    }
    postTimeSchedulestopwatches(scheduleStopwatch) {
        return this.request({
            path: `/time/schedulestopwatches`,
            method: 'post',
            data: scheduleStopwatch,
        });
    }
    getTimeSchedulestopwatchesById(id, params = {}) {
        return this.request({
            path: `/time/schedulestopwatches/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeSchedulestopwatchesById(id) {
        return this.request({
            path: `/time/schedulestopwatches/${id}`,
            method: 'delete',
        });
    }
    putTimeSchedulestopwatchesById(id, scheduleStopwatch) {
        return this.request({
            path: `/time/schedulestopwatches/${id}`,
            method: 'put',
            data: scheduleStopwatch,
        });
    }
    patchTimeSchedulestopwatchesById(id, patchOperations) {
        return this.request({
            path: `/time/schedulestopwatches/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeSchedulestopwatchesCount(params = {}) {
        return this.request({
            path: `/time/schedulestopwatches/count`,
            method: 'get',
            params,
        });
    }
    getTimeSheets(params = {}) {
        return this.request({
            path: `/time/sheets`,
            method: 'get',
            params,
        });
    }
    getTimeSheetsById(id, params = {}) {
        return this.request({
            path: `/time/sheets/${id}`,
            method: 'get',
            params,
        });
    }
    postTimeSheetsByIdApprove(id, sheetId) {
        return this.request({
            path: `/time/sheets/${id}/approve`,
            method: 'post',
            data: sheetId,
        });
    }
    postTimeSheetsByIdReject(id) {
        return this.request({
            path: `/time/sheets/${id}/reject`,
            method: 'post',
        });
    }
    postTimeSheetsByIdReverse(id) {
        return this.request({
            path: `/time/sheets/${id}/reverse`,
            method: 'post',
        });
    }
    postTimeSheetsByIdSubmit(id) {
        return this.request({
            path: `/time/sheets/${id}/submit`,
            method: 'post',
        });
    }
    getTimeSheetsByParentIdAudits(parentId, params = {}) {
        return this.request({
            path: `/time/sheets/${parentId}/audits`,
            method: 'get',
            params,
        });
    }
    getTimeSheetsByParentIdAuditsById(id, parentId, params = {}) {
        return this.request({
            path: `/time/sheets/${parentId}/audits/${id}`,
            method: 'get',
            params,
        });
    }
    getTimeSheetsByParentIdAuditsCount(parentId, params = {}) {
        return this.request({
            path: `/time/sheets/${parentId}/audits/count`,
            method: 'get',
            params,
        });
    }
    getTimeSheetsCount(params = {}) {
        return this.request({
            path: `/time/sheets/count`,
            method: 'get',
            params,
        });
    }
    getTimeTicketstopwatches(params = {}) {
        return this.request({
            path: `/time/ticketstopwatches`,
            method: 'get',
            params,
        });
    }
    postTimeTicketstopwatches(ticketStopwatch) {
        return this.request({
            path: `/time/ticketstopwatches`,
            method: 'post',
            data: ticketStopwatch,
        });
    }
    getTimeTicketstopwatchesById(id, params = {}) {
        return this.request({
            path: `/time/ticketstopwatches/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeTicketstopwatchesById(id) {
        return this.request({
            path: `/time/ticketstopwatches/${id}`,
            method: 'delete',
        });
    }
    putTimeTicketstopwatchesById(id, ticketStopwatch) {
        return this.request({
            path: `/time/ticketstopwatches/${id}`,
            method: 'put',
            data: ticketStopwatch,
        });
    }
    patchTimeTicketstopwatchesById(id, patchOperations) {
        return this.request({
            path: `/time/ticketstopwatches/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeTicketstopwatchesCount(params = {}) {
        return this.request({
            path: `/time/ticketstopwatches/count`,
            method: 'get',
            params,
        });
    }
    getTimeTimePeriodSetups(params = {}) {
        return this.request({
            path: `/time/timePeriodSetups`,
            method: 'get',
            params,
        });
    }
    postTimeTimePeriodSetups(timePeriodSetup) {
        return this.request({
            path: `/time/timePeriodSetups`,
            method: 'post',
            data: timePeriodSetup,
        });
    }
    getTimeTimePeriodSetupsById(id, params = {}) {
        return this.request({
            path: `/time/timePeriodSetups/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeTimePeriodSetupsById(id) {
        return this.request({
            path: `/time/timePeriodSetups/${id}`,
            method: 'delete',
        });
    }
    putTimeTimePeriodSetupsById(id, timePeriodSetup) {
        return this.request({
            path: `/time/timePeriodSetups/${id}`,
            method: 'put',
            data: timePeriodSetup,
        });
    }
    patchTimeTimePeriodSetupsById(id, patchOperations) {
        return this.request({
            path: `/time/timePeriodSetups/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeTimePeriodSetupsByParentIdPeriods(parentId, params = {}) {
        return this.request({
            path: `/time/timePeriodSetups/${parentId}/periods`,
            method: 'get',
            params,
        });
    }
    getTimeTimePeriodSetupsByParentIdPeriodsById(id, parentId, params = {}) {
        return this.request({
            path: `/time/timePeriodSetups/${parentId}/periods/${id}`,
            method: 'get',
            params,
        });
    }
    getTimeTimePeriodSetupsByParentIdPeriodsCount(parentId, params = {}) {
        return this.request({
            path: `/time/timePeriodSetups/${parentId}/periods/count`,
            method: 'get',
            params,
        });
    }
    getTimeTimePeriodSetupsCount(params = {}) {
        return this.request({
            path: `/time/timePeriodSetups/count`,
            method: 'get',
            params,
        });
    }
    getTimeTimePeriodSetupsDefault(params = {}) {
        return this.request({
            path: `/time/timePeriodSetups/default`,
            method: 'get',
            params,
        });
    }
    getTimeWorkRoles(params = {}) {
        return this.request({
            path: `/time/workRoles`,
            method: 'get',
            params,
        });
    }
    postTimeWorkRoles(workRole) {
        return this.request({
            path: `/time/workRoles`,
            method: 'post',
            data: workRole,
        });
    }
    getTimeWorkRolesById(id, params = {}) {
        return this.request({
            path: `/time/workRoles/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeWorkRolesById(id) {
        return this.request({
            path: `/time/workRoles/${id}`,
            method: 'delete',
        });
    }
    putTimeWorkRolesById(id, workRole) {
        return this.request({
            path: `/time/workRoles/${id}`,
            method: 'put',
            data: workRole,
        });
    }
    patchTimeWorkRolesById(id, patchOperations) {
        return this.request({
            path: `/time/workRoles/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeWorkRolesByIdInfo(id, params = {}) {
        return this.request({
            path: `/time/workRoles/${id}/info`,
            method: 'get',
            params,
        });
    }
    getTimeWorkRolesByIdUsages(id, params = {}) {
        return this.request({
            path: `/time/workRoles/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getTimeWorkRolesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/time/workRoles/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getTimeWorkRolesByParentIdLocations(parentId, params = {}) {
        return this.request({
            path: `/time/workRoles/${parentId}/locations`,
            method: 'get',
            params,
        });
    }
    postTimeWorkRolesByParentIdLocations(parentId, workRoleLocation) {
        return this.request({
            path: `/time/workRoles/${parentId}/locations`,
            method: 'post',
            data: workRoleLocation,
        });
    }
    getTimeWorkRolesByParentIdLocationsById(id, parentId, params = {}) {
        return this.request({
            path: `/time/workRoles/${parentId}/locations/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeWorkRolesByParentIdLocationsById(id, parentId) {
        return this.request({
            path: `/time/workRoles/${parentId}/locations/${id}`,
            method: 'delete',
        });
    }
    putTimeWorkRolesByParentIdLocationsById(id, parentId, workRoleLocation) {
        return this.request({
            path: `/time/workRoles/${parentId}/locations/${id}`,
            method: 'put',
            data: workRoleLocation,
        });
    }
    patchTimeWorkRolesByParentIdLocationsById(id, parentId, patchOperations) {
        return this.request({
            path: `/time/workRoles/${parentId}/locations/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeWorkRolesByParentIdLocationsCount(parentId, params = {}) {
        return this.request({
            path: `/time/workRoles/${parentId}/locations/count`,
            method: 'get',
            params,
        });
    }
    getTimeWorkRolesCount(params = {}) {
        return this.request({
            path: `/time/workRoles/count`,
            method: 'get',
            params,
        });
    }
    getTimeWorkRolesInfo(params = {}) {
        return this.request({
            path: `/time/workRoles/info`,
            method: 'get',
            params,
        });
    }
    getTimeWorkRolesInfoCount(params = {}) {
        return this.request({
            path: `/time/workRoles/info/count`,
            method: 'get',
            params,
        });
    }
    getTimeWorkTypes(params = {}) {
        return this.request({
            path: `/time/workTypes`,
            method: 'get',
            params,
        });
    }
    postTimeWorkTypes(workType) {
        return this.request({
            path: `/time/workTypes`,
            method: 'post',
            data: workType,
        });
    }
    getTimeWorkTypesById(id, params = {}) {
        return this.request({
            path: `/time/workTypes/${id}`,
            method: 'get',
            params,
        });
    }
    deleteTimeWorkTypesById(id) {
        return this.request({
            path: `/time/workTypes/${id}`,
            method: 'delete',
        });
    }
    putTimeWorkTypesById(id, workType) {
        return this.request({
            path: `/time/workTypes/${id}`,
            method: 'put',
            data: workType,
        });
    }
    patchTimeWorkTypesById(id, patchOperations) {
        return this.request({
            path: `/time/workTypes/${id}`,
            method: 'patch',
            data: patchOperations,
        });
    }
    getTimeWorkTypesByIdInfo(id, params = {}) {
        return this.request({
            path: `/time/workTypes/${id}/info`,
            method: 'get',
            params,
        });
    }
    getTimeWorkTypesByIdUsages(id, params = {}) {
        return this.request({
            path: `/time/workTypes/${id}/usages`,
            method: 'get',
            params,
        });
    }
    getTimeWorkTypesByIdUsagesList(id, params = {}) {
        return this.request({
            path: `/time/workTypes/${id}/usages/list`,
            method: 'get',
            params,
        });
    }
    getTimeWorkTypesCount(params = {}) {
        return this.request({
            path: `/time/workTypes/count`,
            method: 'get',
            params,
        });
    }
    getTimeWorkTypesInfo(params = {}) {
        return this.request({
            path: `/time/workTypes/info`,
            method: 'get',
            params,
        });
    }
    getTimeWorkTypesInfoCount(params = {}) {
        return this.request({
            path: `/time/workTypes/info/count`,
            method: 'get',
            params,
        });
    }
}
exports.TimeAPI = TimeAPI;
//# sourceMappingURL=TimeAPI.js.map